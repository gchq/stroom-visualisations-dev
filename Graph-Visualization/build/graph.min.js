/*! graph.min.js v0.2 - https://github.com/davidpiegza/Graph-Visualization */
function Graph(a){this.options=a||{};this.nodeSet={};this.nodes=[];this.edges=[];this.layout}Graph.prototype.addNode=function(a){if(this.nodeSet[a.id]==undefined&&!this.reached_limit()){this.nodeSet[a.id]=a;this.nodes.push(a);return true}return false};Graph.prototype.getNode=function(a){return this.nodeSet[a]};Graph.prototype.addEdge=function(b,c){if(b.addConnectedTo(c)===true){var a=new Edge(b,c);this.edges.push(a);return true}return false};Graph.prototype.reached_limit=function(){if(this.options.limit!=undefined){return this.options.limit<=this.nodes.length}else{return false}};function Node(a){this.id=a;this.nodesTo=[];this.nodesFrom=[];this.position={};this.data={}}Node.prototype.addConnectedTo=function(a){if(this.connectedTo(a)===false){this.nodesTo.push(a);return true}return false};Node.prototype.connectedTo=function(c){for(var a=0;a<this.nodesTo.length;a++){var b=this.nodesTo[a];if(b.id==c.id){return true}}return false};function Edge(a,b){this.source=a;this.target=b;this.data={}}"use strict";var THREE={REVISION:"66"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};(function(){for(var e=0,d=["ms","moz","webkit","o"],f=0;f<d.length&&!self.requestAnimationFrame;++f){self.requestAnimationFrame=self[d[f]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[d[f]+"CancelAnimationFrame"]||self[d[f]+"CancelRequestAnimationFrame"]}void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(a){var j=Date.now(),i=Math.max(0,16-(j-e)),h=self.setTimeout(function(){a(j+i)},i);e=j+i;return h});void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(b){self.clearTimeout(b)})})();THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1000;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(b){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(b)};THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(b){b instanceof THREE.Color?this.copy(b):"number"===typeof b?this.setHex(b):"string"===typeof b&&this.setStyle(b);return this},setHex:function(b){b=Math.floor(b);this.r=(b>>16&255)/255;this.g=(b>>8&255)/255;this.b=(b&255)/255;return this},setRGB:function(e,d,f){this.r=e;this.g=d;this.b=f;return this},setHSL:function(f,e,h){if(0===e){this.r=this.g=this.b=h}else{var g=function(i,d,j){0>j&&(j+=1);1<j&&(j-=1);return j<1/6?i+6*(d-i)*j:0.5>j?d:j<2/3?i+6*(d-i)*(2/3-j):i};e=0.5>=h?h*(1+e):h+e-h*e;h=2*h-e;this.r=g(h,e,f+1/3);this.g=g(h,e,f);this.b=g(h,e,f-1/3)}return this},setStyle:function(b){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(b)){return b=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(b),this.r=Math.min(255,parseInt(b[1],10))/255,this.g=Math.min(255,parseInt(b[2],10))/255,this.b=Math.min(255,parseInt(b[3],10))/255,this}if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(b)){return b=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(b),this.r=Math.min(100,parseInt(b[1],10))/100,this.g=Math.min(100,parseInt(b[2],10))/100,this.b=Math.min(100,parseInt(b[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(b)){return b=/^\#([0-9a-f]{6})$/i.exec(b),this.setHex(parseInt(b[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(b)){return b=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(b),this.setHex(parseInt(b[1]+b[1]+b[2]+b[2]+b[3]+b[3],16)),this}if(/^(\w+)$/i.test(b)){return this.setHex(THREE.ColorKeywords[b]),this}},copy:function(b){this.r=b.r;this.g=b.g;this.b=b.b;return this},copyGammaToLinear:function(b){this.r=b.r*b.r;this.g=b.g*b.g;this.b=b.b*b.b;return this},copyLinearToGamma:function(b){this.r=Math.sqrt(b.r);this.g=Math.sqrt(b.g);this.b=Math.sqrt(b.b);return this},convertGammaToLinear:function(){var e=this.r,d=this.g,f=this.b;this.r=e*e;this.g=d*d;this.b=f*f;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(r){r=r||{h:0,s:0,l:0};var q=this.r,p=this.g,o=this.b,n=Math.max(q,p,o),m=Math.min(q,p,o),l,j=(m+n)/2;if(m===n){m=l=0}else{var i=n-m,m=0.5>=j?i/(n+m):i/(2-n-m);switch(n){case q:l=(p-o)/i+(p<o?6:0);break;case p:l=(o-q)/i+2;break;case o:l=(q-p)/i+4}l/=6}r.h=l;r.s=m;r.l=j;return r},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(f,e,h){var g=this.getHSL();g.h+=f;g.s+=e;g.l+=h;this.setHSL(g.h,g.s,g.l);return this},add:function(b){this.r+=b.r;this.g+=b.g;this.b+=b.b;return this},addColors:function(d,c){this.r=d.r+c.r;this.g=d.g+c.g;this.b=d.b+c.b;return this},addScalar:function(b){this.r+=b;this.g+=b;this.b+=b;return this},multiply:function(b){this.r*=b.r;this.g*=b.g;this.b*=b.b;return this},multiplyScalar:function(b){this.r*=b;this.g*=b;this.b*=b;return this},lerp:function(d,c){this.r+=(d.r-this.r)*c;this.g+=(d.g-this.g)*c;this.b+=(d.b-this.b)*c;return this},equals:function(b){return b.r===this.r&&b.g===this.g&&b.b===this.b},fromArray:function(b){this.r=b[0];this.g=b[1];this.b=b[2];return this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(f,e,h,g){this._x=f||0;this._y=e||0;this._z=h||0;this._w=void 0!==g?g:1};THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:void 0,_updateEuler:function(b){void 0!==this._euler&&this._euler.setFromQuaternion(this,void 0,!1)},get x(){return this._x},set x(b){this._x=b;this._updateEuler()},get y(){return this._y},set y(b){this._y=b;this._updateEuler()},get z(){return this._z},set z(b){this._z=b;this._updateEuler()},get w(){return this._w},set w(b){this._w=b;this._updateEuler()},set:function(f,e,h,g){this._x=f;this._y=e;this._z=h;this._w=g;this._updateEuler();return this},copy:function(b){this._x=b._x;this._y=b._y;this._z=b._z;this._w=b._w;this._updateEuler();return this},setFromEuler:function(j,i){if(!1===j instanceof THREE.Euler){throw Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.")}var p=Math.cos(j._x/2),o=Math.cos(j._y/2),n=Math.cos(j._z/2),m=Math.sin(j._x/2),l=Math.sin(j._y/2),k=Math.sin(j._z/2);"XYZ"===j.order?(this._x=m*o*n+p*l*k,this._y=p*l*n-m*o*k,this._z=p*o*k+m*l*n,this._w=p*o*n-m*l*k):"YXZ"===j.order?(this._x=m*o*n+p*l*k,this._y=p*l*n-m*o*k,this._z=p*o*k-m*l*n,this._w=p*o*n+m*l*k):"ZXY"===j.order?(this._x=m*o*n-p*l*k,this._y=p*l*n+m*o*k,this._z=p*o*k+m*l*n,this._w=p*o*n-m*l*k):"ZYX"===j.order?(this._x=m*o*n-p*l*k,this._y=p*l*n+m*o*k,this._z=p*o*k-m*l*n,this._w=p*o*n+m*l*k):"YZX"===j.order?(this._x=m*o*n+p*l*k,this._y=p*l*n+m*o*k,this._z=p*o*k-m*l*n,this._w=p*o*n-m*l*k):"XZY"===j.order&&(this._x=m*o*n-p*l*k,this._y=p*l*n-m*o*k,this._z=p*o*k+m*l*n,this._w=p*o*n+m*l*k);!1!==i&&this._updateEuler();return this},setFromAxisAngle:function(f,e){var h=e/2,g=Math.sin(h);this._x=f.x*g;this._y=f.y*g;this._z=f.z*g;this._w=Math.cos(h);this._updateEuler();return this},setFromRotationMatrix:function(t){var s=t.elements,r=s[0];t=s[4];var q=s[8],p=s[1],o=s[5],n=s[9],m=s[2],j=s[6],s=s[10],i=r+o+s;0<i?(r=0.5/Math.sqrt(i+1),this._w=0.25/r,this._x=(j-n)*r,this._y=(q-m)*r,this._z=(p-t)*r):r>o&&r>s?(r=2*Math.sqrt(1+r-o-s),this._w=(j-n)/r,this._x=0.25*r,this._y=(t+p)/r,this._z=(q+m)/r):o>s?(r=2*Math.sqrt(1+o-r-s),this._w=(q-m)/r,this._x=(t+p)/r,this._y=0.25*r,this._z=(n+j)/r):(r=2*Math.sqrt(1+s-r-o),this._w=(p-t)/r,this._x=(q+m)/r,this._y=(n+j)/r,this._z=0.25*r);this._updateEuler();return this},inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this._updateEuler();return this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var b=this.length();0===b?(this._z=this._y=this._x=0,this._w=1):(b=1/b,this._x*=b,this._y*=b,this._z*=b,this._w*=b);return this},multiply:function(d,c){return void 0!==c?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(d,c)):this.multiplyQuaternions(this,d)},multiplyQuaternions:function(t,s){var r=t._x,q=t._y,p=t._z,o=t._w,n=s._x,m=s._y,j=s._z,i=s._w;this._x=r*i+o*n+q*j-p*m;this._y=q*i+o*m+p*n-r*j;this._z=p*i+o*j+r*m-q*n;this._w=o*i-r*n-q*m-p*j;this._updateEuler();return this},multiplyVector3:function(b){console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return b.applyQuaternion(this)},slerp:function(r,q){var p=this._x,o=this._y,n=this._z,m=this._w,l=m*r._w+p*r._x+o*r._y+n*r._z;0>l?(this._w=-r._w,this._x=-r._x,this._y=-r._y,this._z=-r._z,l=-l):this.copy(r);if(1<=l){return this._w=m,this._x=p,this._y=o,this._z=n,this}var j=Math.acos(l),i=Math.sqrt(1-l*l);if(0.001>Math.abs(i)){return this._w=0.5*(m+this._w),this._x=0.5*(p+this._x),this._y=0.5*(o+this._y),this._z=0.5*(n+this._z),this}l=Math.sin((1-q)*j)/i;j=Math.sin(q*j)/i;this._w=m*l+this._w*j;this._x=p*l+this._x*j;this._y=o*l+this._y*j;this._z=n*l+this._z*j;this._updateEuler();return this},equals:function(b){return b._x===this._x&&b._y===this._y&&b._z===this._z&&b._w===this._w},fromArray:function(b){this._x=b[0];this._y=b[1];this._z=b[2];this._w=b[3];this._updateEuler();return this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(f,e,h,g){return h.copy(f).slerp(e,g)};THREE.Vector2=function(d,c){this.x=d||0;this.y=c||0};THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(d,c){this.x=d;this.y=c;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setComponent:function(d,c){switch(d){case 0:this.x=c;break;case 1:this.y=c;break;default:throw Error("index is out of range: "+d)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;return this},add:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(d,c)}this.x+=d.x;this.y+=d.y;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;return this},addScalar:function(b){this.x+=b;this.y+=b;return this},sub:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(d,c)}this.x-=d.x;this.y-=d.y;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;return this},divideScalar:function(b){0!==b?(b=1/b,this.x*=b,this.y*=b):this.y=this.x=0;return this},min:function(b){this.x>b.x&&(this.x=b.x);this.y>b.y&&(this.y=b.y);return this},max:function(b){this.x<b.x&&(this.x=b.x);this.y<b.y&&(this.y=b.y);return this},clamp:function(d,c){this.x<d.x?this.x=d.x:this.x>c.x&&(this.x=c.x);this.y<d.y?this.y=d.y:this.y>c.y&&(this.y=c.y);return this},clampScalar:function(){var d,c;return function(b,a){void 0===d&&(d=new THREE.Vector2,c=new THREE.Vector2);d.set(b,b);c.set(a,a);return this.clamp(d,c)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(d){var c=this.x-d.x;d=this.y-d.y;return c*c+d*d},setLength:function(d){var c=this.length();0!==c&&d!==c&&this.multiplyScalar(d/c);return this},lerp:function(d,c){this.x+=(d.x-this.x)*c;this.y+=(d.y-this.y)*c;return this},equals:function(b){return b.x===this.x&&b.y===this.y},fromArray:function(b){this.x=b[0];this.y=b[1];return this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(e,d,f){this.x=e||0;this.y=d||0;this.z=f||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,d,f){this.x=e;this.y=d;this.z=f;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setZ:function(b){this.z=b;return this},setComponent:function(d,c){switch(d){case 0:this.x=c;break;case 1:this.y=c;break;case 2:this.z=c;break;default:throw Error("index is out of range: "+d)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;return this},add:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(d,c)}this.x+=d.x;this.y+=d.y;this.z+=d.z;return this},addScalar:function(b){this.x+=b;this.y+=b;this.z+=b;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;return this},sub:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(d,c)}this.x-=d.x;this.y-=d.y;this.z-=d.z;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;return this},multiply:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(d,c)}this.x*=d.x;this.y*=d.y;this.z*=d.z;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;return this},multiplyVectors:function(d,c){this.x=d.x*c.x;this.y=d.y*c.y;this.z=d.z*c.z;return this},applyEuler:function(){var b;return function(a){!1===a instanceof THREE.Euler&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");void 0===b&&(b=new THREE.Quaternion);this.applyQuaternion(b.setFromEuler(a));return this}}(),applyAxisAngle:function(){var b;return function(a,d){void 0===b&&(b=new THREE.Quaternion);this.applyQuaternion(b.setFromAxisAngle(a,d));return this}}(),applyMatrix3:function(f){var e=this.x,h=this.y,g=this.z;f=f.elements;this.x=f[0]*e+f[3]*h+f[6]*g;this.y=f[1]*e+f[4]*h+f[7]*g;this.z=f[2]*e+f[5]*h+f[8]*g;return this},applyMatrix4:function(f){var e=this.x,h=this.y,g=this.z;f=f.elements;this.x=f[0]*e+f[4]*h+f[8]*g+f[12];this.y=f[1]*e+f[5]*h+f[9]*g+f[13];this.z=f[2]*e+f[6]*h+f[10]*g+f[14];return this},applyProjection:function(g){var f=this.x,j=this.y,i=this.z;g=g.elements;var h=1/(g[3]*f+g[7]*j+g[11]*i+g[15]);this.x=(g[0]*f+g[4]*j+g[8]*i+g[12])*h;this.y=(g[1]*f+g[5]*j+g[9]*i+g[13])*h;this.z=(g[2]*f+g[6]*j+g[10]*i+g[14])*h;return this},applyQuaternion:function(t){var s=this.x,r=this.y,q=this.z,p=t.x,o=t.y,n=t.z;t=t.w;var m=t*s+o*q-n*r,j=t*r+n*s-p*q,i=t*q+p*r-o*s,s=-p*s-o*r-n*q;this.x=m*t+s*-p+j*-n-i*-o;this.y=j*t+s*-o+i*-p-m*-n;this.z=i*t+s*-n+m*-o-j*-p;return this},transformDirection:function(f){var e=this.x,h=this.y,g=this.z;f=f.elements;this.x=f[0]*e+f[4]*h+f[8]*g;this.y=f[1]*e+f[5]*h+f[9]*g;this.z=f[2]*e+f[6]*h+f[10]*g;this.normalize();return this},divide:function(b){this.x/=b.x;this.y/=b.y;this.z/=b.z;return this},divideScalar:function(b){0!==b?(b=1/b,this.x*=b,this.y*=b,this.z*=b):this.z=this.y=this.x=0;return this},min:function(b){this.x>b.x&&(this.x=b.x);this.y>b.y&&(this.y=b.y);this.z>b.z&&(this.z=b.z);return this},max:function(b){this.x<b.x&&(this.x=b.x);this.y<b.y&&(this.y=b.y);this.z<b.z&&(this.z=b.z);return this},clamp:function(d,c){this.x<d.x?this.x=d.x:this.x>c.x&&(this.x=c.x);this.y<d.y?this.y=d.y:this.y>c.y&&(this.y=c.y);this.z<d.z?this.z=d.z:this.z>c.z&&(this.z=c.z);return this},clampScalar:function(){var d,c;return function(b,a){void 0===d&&(d=new THREE.Vector3,c=new THREE.Vector3);d.set(b,b,b);c.set(a,a,a);return this.clamp(d,c)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(d){var c=this.length();0!==c&&d!==c&&this.multiplyScalar(d/c);return this},lerp:function(d,c){this.x+=(d.x-this.x)*c;this.y+=(d.y-this.y)*c;this.z+=(d.z-this.z)*c;return this},cross:function(g,f){if(void 0!==f){return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(g,f)}var j=this.x,i=this.y,h=this.z;this.x=i*g.z-h*g.y;this.y=h*g.x-j*g.z;this.z=j*g.y-i*g.x;return this},crossVectors:function(j,i){var p=j.x,o=j.y,n=j.z,m=i.x,l=i.y,k=i.z;this.x=o*k-n*l;this.y=n*m-p*k;this.z=p*l-o*m;return this},projectOnVector:function(){var d,c;return function(a){void 0===d&&(d=new THREE.Vector3);d.copy(a).normalize();c=this.dot(d);return this.copy(d).multiplyScalar(c)}}(),projectOnPlane:function(){var b;return function(a){void 0===b&&(b=new THREE.Vector3);b.copy(this).projectOnVector(a);return this.sub(b)}}(),reflect:function(){var b;return function(a){void 0===b&&(b=new THREE.Vector3);return this.sub(b.copy(a).multiplyScalar(2*this.dot(a)))}}(),angleTo:function(b){b=this.dot(b)/(this.length()*b.length());return Math.acos(THREE.Math.clamp(b,-1,1))},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(e){var d=this.x-e.x,f=this.y-e.y;e=this.z-e.z;return d*d+f*f+e*e},setEulerFromRotationMatrix:function(d,c){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(d,c){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(b){console.warn("DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code.");return this.setFromMatrixPosition(b)},getScaleFromMatrix:function(b){console.warn("DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code.");return this.setFromMatrixScale(b)},getColumnFromMatrix:function(d,c){console.warn("DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code.");return this.setFromMatrixColumn(d,c)},setFromMatrixPosition:function(b){this.x=b.elements[12];this.y=b.elements[13];this.z=b.elements[14];return this},setFromMatrixScale:function(e){var d=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),f=this.set(e.elements[4],e.elements[5],e.elements[6]).length();e=this.set(e.elements[8],e.elements[9],e.elements[10]).length();this.x=d;this.y=f;this.z=e;return this},setFromMatrixColumn:function(f,e){var h=4*f,g=e.elements;this.x=g[h];this.y=g[h+1];this.z=g[h+2];return this},equals:function(b){return b.x===this.x&&b.y===this.y&&b.z===this.z},fromArray:function(b){this.x=b[0];this.y=b[1];this.z=b[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(f,e,h,g){this.x=f||0;this.y=e||0;this.z=h||0;this.w=void 0!==g?g:1};THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(f,e,h,g){this.x=f;this.y=e;this.z=h;this.w=g;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setZ:function(b){this.z=b;return this},setW:function(b){this.w=b;return this},setComponent:function(d,c){switch(d){case 0:this.x=c;break;case 1:this.y=c;break;case 2:this.z=c;break;case 3:this.w=c;break;default:throw Error("index is out of range: "+d)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;this.w=void 0!==b.w?b.w:1;return this},add:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(d,c)}this.x+=d.x;this.y+=d.y;this.z+=d.z;this.w+=d.w;return this},addScalar:function(b){this.x+=b;this.y+=b;this.z+=b;this.w+=b;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;this.w=d.w+c.w;return this},sub:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(d,c)}this.x-=d.x;this.y-=d.y;this.z-=d.z;this.w-=d.w;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;this.w=d.w-c.w;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;this.w*=b;return this},applyMatrix4:function(g){var f=this.x,j=this.y,i=this.z,h=this.w;g=g.elements;this.x=g[0]*f+g[4]*j+g[8]*i+g[12]*h;this.y=g[1]*f+g[5]*j+g[9]*i+g[13]*h;this.z=g[2]*f+g[6]*j+g[10]*i+g[14]*h;this.w=g[3]*f+g[7]*j+g[11]*i+g[15]*h;return this},divideScalar:function(b){0!==b?(b=1/b,this.x*=b,this.y*=b,this.z*=b,this.w*=b):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(d){this.w=2*Math.acos(d.w);var c=Math.sqrt(1-d.w*d.w);0.0001>c?(this.x=1,this.z=this.y=0):(this.x=d.x/c,this.y=d.y/c,this.z=d.z/c);return this},setAxisAngleFromRotationMatrix:function(t){var s,r,q;t=t.elements;var p=t[0];q=t[4];var o=t[8],n=t[1],m=t[5],j=t[9];r=t[2];s=t[6];var i=t[10];if(0.01>Math.abs(q-n)&&0.01>Math.abs(o-r)&&0.01>Math.abs(j-s)){if(0.1>Math.abs(q+n)&&0.1>Math.abs(o+r)&&0.1>Math.abs(j+s)&&0.1>Math.abs(p+m+i-3)){return this.set(1,0,0,0),this}t=Math.PI;p=(p+1)/2;m=(m+1)/2;i=(i+1)/2;q=(q+n)/4;o=(o+r)/4;j=(j+s)/4;p>m&&p>i?0.01>p?(s=0,q=r=0.707106781):(s=Math.sqrt(p),r=q/s,q=o/s):m>i?0.01>m?(s=0.707106781,r=0,q=0.707106781):(r=Math.sqrt(m),s=q/r,q=j/r):0.01>i?(r=s=0.707106781,q=0):(q=Math.sqrt(i),s=o/q,r=j/q);this.set(s,r,q,t);return this}t=Math.sqrt((s-j)*(s-j)+(o-r)*(o-r)+(n-q)*(n-q));0.001>Math.abs(t)&&(t=1);this.x=(s-j)/t;this.y=(o-r)/t;this.z=(n-q)/t;this.w=Math.acos((p+m+i-1)/2);return this},min:function(b){this.x>b.x&&(this.x=b.x);this.y>b.y&&(this.y=b.y);this.z>b.z&&(this.z=b.z);this.w>b.w&&(this.w=b.w);return this},max:function(b){this.x<b.x&&(this.x=b.x);this.y<b.y&&(this.y=b.y);this.z<b.z&&(this.z=b.z);this.w<b.w&&(this.w=b.w);return this},clamp:function(d,c){this.x<d.x?this.x=d.x:this.x>c.x&&(this.x=c.x);this.y<d.y?this.y=d.y:this.y>c.y&&(this.y=c.y);this.z<d.z?this.z=d.z:this.z>c.z&&(this.z=c.z);this.w<d.w?this.w=d.w:this.w>c.w&&(this.w=c.w);return this},clampScalar:function(){var d,c;return function(b,a){void 0===d&&(d=new THREE.Vector4,c=new THREE.Vector4);d.set(b,b,b,b);c.set(a,a,a,a);return this.clamp(d,c)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z+this.w*b.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(d){var c=this.length();0!==c&&d!==c&&this.multiplyScalar(d/c);return this},lerp:function(d,c){this.x+=(d.x-this.x)*c;this.y+=(d.y-this.y)*c;this.z+=(d.z-this.z)*c;this.w+=(d.w-this.w)*c;return this},equals:function(b){return b.x===this.x&&b.y===this.y&&b.z===this.z&&b.w===this.w},fromArray:function(b){this.x=b[0];this.y=b[1];this.z=b[2];this.w=b[3];return this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Euler=function(f,e,h,g){this._x=f||0;this._y=e||0;this._z=h||0;this._order=g||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");THREE.Euler.DefaultOrder="XYZ";THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:void 0,_updateQuaternion:function(){void 0!==this._quaternion&&this._quaternion.setFromEuler(this,!1)},get x(){return this._x},set x(b){this._x=b;this._updateQuaternion()},get y(){return this._y},set y(b){this._y=b;this._updateQuaternion()},get z(){return this._z},set z(b){this._z=b;this._updateQuaternion()},get order(){return this._order},set order(b){this._order=b;this._updateQuaternion()},set:function(f,e,h,g){this._x=f;this._y=e;this._z=h;this._order=g||this._order;this._updateQuaternion();return this},copy:function(b){this._x=b._x;this._y=b._y;this._z=b._z;this._order=b._order;this._updateQuaternion();return this},setFromRotationMatrix:function(A,v){function u(b){return Math.min(Math.max(b,-1),1)}var t=A.elements,r=t[0],q=t[4],p=t[8],o=t[1],m=t[5],j=t[9],i=t[2],B=t[6],t=t[10];v=v||this._order;"XYZ"===v?(this._y=Math.asin(u(p)),0.99999>Math.abs(p)?(this._x=Math.atan2(-j,t),this._z=Math.atan2(-q,r)):(this._x=Math.atan2(B,m),this._z=0)):"YXZ"===v?(this._x=Math.asin(-u(j)),0.99999>Math.abs(j)?(this._y=Math.atan2(p,t),this._z=Math.atan2(o,m)):(this._y=Math.atan2(-i,r),this._z=0)):"ZXY"===v?(this._x=Math.asin(u(B)),0.99999>Math.abs(B)?(this._y=Math.atan2(-i,t),this._z=Math.atan2(-q,m)):(this._y=0,this._z=Math.atan2(o,r))):"ZYX"===v?(this._y=Math.asin(-u(i)),0.99999>Math.abs(i)?(this._x=Math.atan2(B,t),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-q,m))):"YZX"===v?(this._z=Math.asin(u(o)),0.99999>Math.abs(o)?(this._x=Math.atan2(-j,m),this._y=Math.atan2(-i,r)):(this._x=0,this._y=Math.atan2(p,t))):"XZY"===v?(this._z=Math.asin(-u(q)),0.99999>Math.abs(q)?(this._x=Math.atan2(B,m),this._y=Math.atan2(p,r)):(this._x=Math.atan2(-j,t),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+v);this._order=v;this._updateQuaternion();return this},setFromQuaternion:function(j,i,p){function o(b){return Math.min(Math.max(b,-1),1)}var n=j.x*j.x,m=j.y*j.y,l=j.z*j.z,k=j.w*j.w;i=i||this._order;"XYZ"===i?(this._x=Math.atan2(2*(j.x*j.w-j.y*j.z),k-n-m+l),this._y=Math.asin(o(2*(j.x*j.z+j.y*j.w))),this._z=Math.atan2(2*(j.z*j.w-j.x*j.y),k+n-m-l)):"YXZ"===i?(this._x=Math.asin(o(2*(j.x*j.w-j.y*j.z))),this._y=Math.atan2(2*(j.x*j.z+j.y*j.w),k-n-m+l),this._z=Math.atan2(2*(j.x*j.y+j.z*j.w),k-n+m-l)):"ZXY"===i?(this._x=Math.asin(o(2*(j.x*j.w+j.y*j.z))),this._y=Math.atan2(2*(j.y*j.w-j.z*j.x),k-n-m+l),this._z=Math.atan2(2*(j.z*j.w-j.x*j.y),k-n+m-l)):"ZYX"===i?(this._x=Math.atan2(2*(j.x*j.w+j.z*j.y),k-n-m+l),this._y=Math.asin(o(2*(j.y*j.w-j.x*j.z))),this._z=Math.atan2(2*(j.x*j.y+j.z*j.w),k+n-m-l)):"YZX"===i?(this._x=Math.atan2(2*(j.x*j.w-j.z*j.y),k-n+m-l),this._y=Math.atan2(2*(j.y*j.w-j.x*j.z),k+n-m-l),this._z=Math.asin(o(2*(j.x*j.y+j.z*j.w)))):"XZY"===i?(this._x=Math.atan2(2*(j.x*j.w+j.y*j.z),k-n+m-l),this._y=Math.atan2(2*(j.x*j.z+j.y*j.w),k+n-m-l),this._z=Math.asin(o(2*(j.z*j.w-j.x*j.y)))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+i);this._order=i;!1!==p&&this._updateQuaternion();return this},reorder:function(){var b=new THREE.Quaternion;return function(a){b.setFromEuler(this);this.setFromQuaternion(b,a)}}(),fromArray:function(b){this._x=b[0];this._y=b[1];this._z=b[2];void 0!==b[3]&&(this._order=b[3]);this._updateQuaternion();return this},toArray:function(){return[this._x,this._y,this._z,this._order]},equals:function(b){return b._x===this._x&&b._y===this._y&&b._z===this._z&&b._order===this._order},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}};THREE.Line3=function(d,c){this.start=void 0!==d?d:new THREE.Vector3;this.end=void 0!==c?c:new THREE.Vector3};THREE.Line3.prototype={constructor:THREE.Line3,set:function(d,c){this.start.copy(d);this.end.copy(c);return this},copy:function(b){this.start.copy(b.start);this.end.copy(b.end);return this},center:function(b){return(b||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(0.5)},delta:function(b){return(b||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,d){var f=d||new THREE.Vector3;return this.delta(f).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(f,b){d.subVectors(f,this.start);c.subVectors(this.end,this.start);var a=c.dot(c),a=c.dot(d)/a;b&&(a=THREE.Math.clamp(a,0,1));return a}}(),closestPointToPoint:function(e,d,f){e=this.closestPointToPointParameter(e,d);f=f||new THREE.Vector3;return this.delta(f).multiplyScalar(e).add(this.start)},applyMatrix4:function(b){this.start.applyMatrix4(b);this.end.applyMatrix4(b);return this},equals:function(b){return b.start.equals(this.start)&&b.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(d,c){this.min=void 0!==d?d:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==c?c:new THREE.Vector2(-Infinity,-Infinity)};THREE.Box2.prototype={constructor:THREE.Box2,set:function(d,c){this.min.copy(d);this.max.copy(c);return this},setFromPoints:function(f){if(0<f.length){var e=f[0];this.min.copy(e);this.max.copy(e);for(var h=1,g=f.length;h<g;h++){e=f[h],e.x<this.min.x?this.min.x=e.x:e.x>this.max.x&&(this.max.x=e.x),e.y<this.min.y?this.min.y=e.y:e.y>this.max.y&&(this.max.y=e.y)}}else{this.makeEmpty()}return this},setFromCenterAndSize:function(){var b=new THREE.Vector2;return function(a,f){var e=b.copy(f).multiplyScalar(0.5);this.min.copy(a).sub(e);this.max.copy(a).add(e);return this}}(),copy:function(b){this.min.copy(b.min);this.max.copy(b.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(b){return(b||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(b){return(b||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(b){this.min.min(b);this.max.max(b);return this},expandByVector:function(b){this.min.sub(b);this.max.add(b);return this},expandByScalar:function(b){this.min.addScalar(-b);this.max.addScalar(b);return this},containsPoint:function(b){return b.x<this.min.x||b.x>this.max.x||b.y<this.min.y||b.y>this.max.y?!1:!0},containsBox:function(b){return this.min.x<=b.min.x&&b.max.x<=this.max.x&&this.min.y<=b.min.y&&b.max.y<=this.max.y?!0:!1},getParameter:function(d,c){return(c||new THREE.Vector2).set((d.x-this.min.x)/(this.max.x-this.min.x),(d.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(b){return b.max.x<this.min.x||b.min.x>this.max.x||b.max.y<this.min.y||b.min.y>this.max.y?!1:!0},clampPoint:function(d,c){return(c||new THREE.Vector2).copy(d).clamp(this.min,this.max)},distanceToPoint:function(){var b=new THREE.Vector2;return function(a){return b.copy(a).clamp(this.min,this.max).sub(a).length()}}(),intersect:function(b){this.min.max(b.min);this.max.min(b.max);return this},union:function(b){this.min.min(b.min);this.max.max(b.max);return this},translate:function(b){this.min.add(b);this.max.add(b);return this},equals:function(b){return b.min.equals(this.min)&&b.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(d,c){this.min=void 0!==d?d:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==c?c:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};THREE.Box3.prototype={constructor:THREE.Box3,set:function(d,c){this.min.copy(d);this.max.copy(c);return this},addPoint:function(b){b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x);b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y);b.z<this.min.z?this.min.z=b.z:b.z>this.max.z&&(this.max.z=b.z)},setFromPoints:function(e){if(0<e.length){var d=e[0];this.min.copy(d);this.max.copy(d);for(var d=1,f=e.length;d<f;d++){this.addPoint(e[d])}}else{this.makeEmpty()}return this},setFromCenterAndSize:function(){var b=new THREE.Vector3;return function(a,f){var e=b.copy(f).multiplyScalar(0.5);this.min.copy(a).sub(e);this.max.copy(a).add(e);return this}}(),setFromObject:function(){var b=new THREE.Vector3;return function(a){var d=this;a.updateMatrixWorld(!0);this.makeEmpty();a.traverse(function(c){if(void 0!==c.geometry&&void 0!==c.geometry.vertices){for(var j=c.geometry.vertices,i=0,h=j.length;i<h;i++){b.copy(j[i]),b.applyMatrix4(c.matrixWorld),d.expandByPoint(b)}}});return this}}(),copy:function(b){this.min.copy(b.min);this.max.copy(b.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(b){return(b||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(b){return(b||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(b){this.min.min(b);this.max.max(b);return this},expandByVector:function(b){this.min.sub(b);this.max.add(b);return this},expandByScalar:function(b){this.min.addScalar(-b);this.max.addScalar(b);return this},containsPoint:function(b){return b.x<this.min.x||b.x>this.max.x||b.y<this.min.y||b.y>this.max.y||b.z<this.min.z||b.z>this.max.z?!1:!0},containsBox:function(b){return this.min.x<=b.min.x&&b.max.x<=this.max.x&&this.min.y<=b.min.y&&b.max.y<=this.max.y&&this.min.z<=b.min.z&&b.max.z<=this.max.z?!0:!1},getParameter:function(d,c){return(c||new THREE.Vector3).set((d.x-this.min.x)/(this.max.x-this.min.x),(d.y-this.min.y)/(this.max.y-this.min.y),(d.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(b){return b.max.x<this.min.x||b.min.x>this.max.x||b.max.y<this.min.y||b.min.y>this.max.y||b.max.z<this.min.z||b.min.z>this.max.z?!1:!0},clampPoint:function(d,c){return(c||new THREE.Vector3).copy(d).clamp(this.min,this.max)},distanceToPoint:function(){var b=new THREE.Vector3;return function(a){return b.copy(a).clamp(this.min,this.max).sub(a).length()}}(),getBoundingSphere:function(){var b=new THREE.Vector3;return function(a){a=a||new THREE.Sphere;a.center=this.center();a.radius=0.5*this.size(b).length();return a}}(),intersect:function(b){this.min.max(b.min);this.max.min(b.max);return this},union:function(b){this.min.min(b.min);this.max.max(b.max);return this},applyMatrix4:function(){var b=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(a){b[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(a);b[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(a);b[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(a);b[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(a);b[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(a);b[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(a);b[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(a);b[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(a);this.makeEmpty();this.setFromPoints(b);return this}}(),translate:function(b){this.min.add(b);this.max.add(b);return this},equals:function(b){return b.min.equals(this.min)&&b.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(r,q,p,o,n,m,l,j,i){this.elements=new Float32Array(9);this.set(void 0!==r?r:1,q||0,p||0,o||0,void 0!==n?n:1,m||0,l||0,j||0,void 0!==i?i:1)};THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(t,s,r,q,p,o,n,m,j){var i=this.elements;i[0]=t;i[3]=s;i[6]=r;i[1]=q;i[4]=p;i[7]=o;i[2]=n;i[5]=m;i[8]=j;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(b){b=b.elements;this.set(b[0],b[3],b[6],b[1],b[4],b[7],b[2],b[5],b[8]);return this},multiplyVector3:function(b){console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return b.applyMatrix3(this)},multiplyVector3Array:function(){var b=new THREE.Vector3;return function(a){for(var f=0,e=a.length;f<e;f+=3){b.x=a[f],b.y=a[f+1],b.z=a[f+2],b.applyMatrix3(this),a[f]=b.x,a[f+1]=b.y,a[f+2]=b.z}return a}}(),multiplyScalar:function(d){var c=this.elements;c[0]*=d;c[3]*=d;c[6]*=d;c[1]*=d;c[4]*=d;c[7]*=d;c[2]*=d;c[5]*=d;c[8]*=d;return this},determinant:function(){var r=this.elements,q=r[0],p=r[1],o=r[2],n=r[3],m=r[4],l=r[5],j=r[6],i=r[7],r=r[8];return q*m*r-q*l*i-p*n*r+p*l*j+o*n*i-o*m*j},getInverse:function(f,e){var h=f.elements,g=this.elements;g[0]=h[10]*h[5]-h[6]*h[9];g[1]=-h[10]*h[1]+h[2]*h[9];g[2]=h[6]*h[1]-h[2]*h[5];g[3]=-h[10]*h[4]+h[6]*h[8];g[4]=h[10]*h[0]-h[2]*h[8];g[5]=-h[6]*h[0]+h[2]*h[4];g[6]=h[9]*h[4]-h[5]*h[8];g[7]=-h[9]*h[0]+h[1]*h[8];g[8]=h[5]*h[0]-h[1]*h[4];h=h[0]*g[0]+h[1]*g[3]+h[2]*g[6];if(0===h){if(e){throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0")}console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/h);return this},transpose:function(){var d,c=this.elements;d=c[1];c[1]=c[3];c[3]=d;d=c[2];c[2]=c[6];c[6]=d;d=c[5];c[5]=c[7];c[7]=d;return this},getNormalMatrix:function(b){this.getInverse(b).transpose();return this},transposeIntoArray:function(d){var c=this.elements;d[0]=c[0];d[1]=c[3];d[2]=c[6];d[3]=c[1];d[4]=c[4];d[5]=c[7];d[6]=c[2];d[7]=c[5];d[8]=c[8];return this},fromArray:function(b){this.elements.set(b);return this},toArray:function(){var b=this.elements;return[b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8]]},clone:function(){var b=this.elements;return new THREE.Matrix3(b[0],b[3],b[6],b[1],b[4],b[7],b[2],b[5],b[8])}};THREE.Matrix4=function(I,H,G,F,E,D,C,B,A,t,o,L,i,j,K,m){var J=this.elements=new Float32Array(16);J[0]=void 0!==I?I:1;J[4]=H||0;J[8]=G||0;J[12]=F||0;J[1]=E||0;J[5]=void 0!==D?D:1;J[9]=C||0;J[13]=B||0;J[2]=A||0;J[6]=t||0;J[10]=void 0!==o?o:1;J[14]=L||0;J[3]=i||0;J[7]=j||0;J[11]=K||0;J[15]=void 0!==m?m:1};THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(I,H,G,F,E,D,C,B,A,t,o,L,i,j,K,m){var J=this.elements;J[0]=I;J[4]=H;J[8]=G;J[12]=F;J[1]=E;J[5]=D;J[9]=C;J[13]=B;J[2]=A;J[6]=t;J[10]=o;J[14]=L;J[3]=i;J[7]=j;J[11]=K;J[15]=m;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(b){this.elements.set(b.elements);return this},extractPosition:function(b){console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(b)},copyPosition:function(d){var c=this.elements;d=d.elements;c[12]=d[12];c[13]=d[13];c[14]=d[14];return this},extractRotation:function(){var b=new THREE.Vector3;return function(a){var j=this.elements;a=a.elements;var i=1/b.set(a[0],a[1],a[2]).length(),h=1/b.set(a[4],a[5],a[6]).length(),g=1/b.set(a[8],a[9],a[10]).length();j[0]=a[0]*i;j[1]=a[1]*i;j[2]=a[2]*i;j[4]=a[4]*h;j[5]=a[5]*h;j[6]=a[6]*h;j[8]=a[8]*g;j[9]=a[9]*g;j[10]=a[10]*g;return this}}(),makeRotationFromEuler:function(v){!1===v instanceof THREE.Euler&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var u=this.elements,t=v.x,s=v.y,r=v.z,q=Math.cos(t),t=Math.sin(t),p=Math.cos(s),s=Math.sin(s),o=Math.cos(r),r=Math.sin(r);if("XYZ"===v.order){v=q*o;var m=q*r,j=t*o,i=t*r;u[0]=p*o;u[4]=-p*r;u[8]=s;u[1]=m+j*s;u[5]=v-i*s;u[9]=-t*p;u[2]=i-v*s;u[6]=j+m*s;u[10]=q*p}else{"YXZ"===v.order?(v=p*o,m=p*r,j=s*o,i=s*r,u[0]=v+i*t,u[4]=j*t-m,u[8]=q*s,u[1]=q*r,u[5]=q*o,u[9]=-t,u[2]=m*t-j,u[6]=i+v*t,u[10]=q*p):"ZXY"===v.order?(v=p*o,m=p*r,j=s*o,i=s*r,u[0]=v-i*t,u[4]=-q*r,u[8]=j+m*t,u[1]=m+j*t,u[5]=q*o,u[9]=i-v*t,u[2]=-q*s,u[6]=t,u[10]=q*p):"ZYX"===v.order?(v=q*o,m=q*r,j=t*o,i=t*r,u[0]=p*o,u[4]=j*s-m,u[8]=v*s+i,u[1]=p*r,u[5]=i*s+v,u[9]=m*s-j,u[2]=-s,u[6]=t*p,u[10]=q*p):"YZX"===v.order?(v=q*p,m=q*s,j=t*p,i=t*s,u[0]=p*o,u[4]=i-v*r,u[8]=j*r+m,u[1]=r,u[5]=q*o,u[9]=-t*o,u[2]=-s*o,u[6]=m*r+j,u[10]=v-i*r):"XZY"===v.order&&(v=q*p,m=q*s,j=t*p,i=t*s,u[0]=p*o,u[4]=-r,u[8]=s*o,u[1]=v*r+i,u[5]=q*o,u[9]=m*r-j,u[2]=j*r-m,u[6]=t*o,u[10]=i*r+v)}u[3]=0;u[7]=0;u[11]=0;u[12]=0;u[13]=0;u[14]=0;u[15]=1;return this},setRotationFromQuaternion:function(b){console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code.");return this.makeRotationFromQuaternion(b)},makeRotationFromQuaternion:function(v){var u=this.elements,t=v.x,s=v.y,r=v.z,q=v.w,p=t+t,o=s+s,m=r+r;v=t*p;var j=t*o,t=t*m,i=s*o,s=s*m,r=r*m,p=q*p,o=q*o,q=q*m;u[0]=1-(i+r);u[4]=j-q;u[8]=t+o;u[1]=j+q;u[5]=1-(v+r);u[9]=s-p;u[2]=t-o;u[6]=s+p;u[10]=1-(v+i);u[3]=0;u[7]=0;u[11]=0;u[12]=0;u[13]=0;u[14]=0;u[15]=1;return this},lookAt:function(){var e=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3;return function(h,c,b){var a=this.elements;f.subVectors(h,c).normalize();0===f.length()&&(f.z=1);e.crossVectors(b,f).normalize();0===e.length()&&(f.x+=0.0001,e.crossVectors(b,f).normalize());d.crossVectors(f,e);a[0]=e.x;a[4]=d.x;a[8]=f.x;a[1]=e.y;a[5]=d.y;a[9]=f.y;a[2]=e.z;a[6]=d.z;a[10]=f.z;return this}}(),multiply:function(d,c){return void 0!==c?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(d,c)):this.multiplyMatrices(this,d)},multiplyMatrices:function(ar,aq){var ap=ar.elements,ao=aq.elements,an=this.elements,am=ap[0],al=ap[4],ak=ap[8],aj=ap[12],ai=ap[1],ah=ap[5],aa=ap[9],ac=ap[13],ae=ap[2],W=ap[6],ag=ap[10],U=ap[14],S=ap[3],Y=ap[7],P=ap[11],ap=ap[15],J=ao[0],ad=ao[4],X=ao[8],R=ao[12],Z=ao[1],T=ao[5],N=ao[9],j=ao[13],o=ao[2],M=ao[6],V=ao[10],ab=ao[14],af=ao[3],m=ao[7],i=ao[11],ao=ao[15];an[0]=am*J+al*Z+ak*o+aj*af;an[4]=am*ad+al*T+ak*M+aj*m;an[8]=am*X+al*N+ak*V+aj*i;an[12]=am*R+al*j+ak*ab+aj*ao;an[1]=ai*J+ah*Z+aa*o+ac*af;an[5]=ai*ad+ah*T+aa*M+ac*m;an[9]=ai*X+ah*N+aa*V+ac*i;an[13]=ai*R+ah*j+aa*ab+ac*ao;an[2]=ae*J+W*Z+ag*o+U*af;an[6]=ae*ad+W*T+ag*M+U*m;an[10]=ae*X+W*N+ag*V+U*i;an[14]=ae*R+W*j+ag*ab+U*ao;an[3]=S*J+Y*Z+P*o+ap*af;an[7]=S*ad+Y*T+P*M+ap*m;an[11]=S*X+Y*N+P*V+ap*i;an[15]=S*R+Y*j+P*ab+ap*ao;return this},multiplyToArray:function(f,e,h){var g=this.elements;this.multiplyMatrices(f,e);h[0]=g[0];h[1]=g[1];h[2]=g[2];h[3]=g[3];h[4]=g[4];h[5]=g[5];h[6]=g[6];h[7]=g[7];h[8]=g[8];h[9]=g[9];h[10]=g[10];h[11]=g[11];h[12]=g[12];h[13]=g[13];h[14]=g[14];h[15]=g[15];return this},multiplyScalar:function(d){var c=this.elements;c[0]*=d;c[4]*=d;c[8]*=d;c[12]*=d;c[1]*=d;c[5]*=d;c[9]*=d;c[13]*=d;c[2]*=d;c[6]*=d;c[10]*=d;c[14]*=d;c[3]*=d;c[7]*=d;c[11]*=d;c[15]*=d;return this},multiplyVector3:function(b){console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");return b.applyProjection(this)},multiplyVector4:function(b){console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return b.applyMatrix4(this)},multiplyVector3Array:function(){var b=new THREE.Vector3;return function(a){for(var f=0,e=a.length;f<e;f+=3){b.x=a[f],b.y=a[f+1],b.z=a[f+2],b.applyProjection(this),a[f]=b.x,a[f+1]=b.y,a[f+2]=b.z}return a}}(),rotateAxis:function(b){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");b.transformDirection(this)},crossVector:function(b){console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return b.applyMatrix4(this)},determinant:function(){var C=this.elements,B=C[0],A=C[4],v=C[8],u=C[12],t=C[1],q=C[5],p=C[9],o=C[13],m=C[2],j=C[6],D=C[10],i=C[14];return C[3]*(+u*p*j-v*o*j-u*q*D+A*o*D+v*q*i-A*p*i)+C[7]*(+B*p*i-B*o*D+u*t*D-v*t*i+v*o*m-u*p*m)+C[11]*(+B*o*j-B*q*i-u*t*j+A*t*i+u*q*m-A*o*m)+C[15]*(-v*q*m-B*p*j+B*q*D+v*t*j-A*t*D+A*p*m)},transpose:function(){var d=this.elements,c;c=d[1];d[1]=d[4];d[4]=c;c=d[2];d[2]=d[8];d[8]=c;c=d[6];d[6]=d[9];d[9]=c;c=d[3];d[3]=d[12];d[12]=c;c=d[7];d[7]=d[13];d[13]=c;c=d[11];d[11]=d[14];d[14]=c;return this},flattenToArray:function(d){var c=this.elements;d[0]=c[0];d[1]=c[1];d[2]=c[2];d[3]=c[3];d[4]=c[4];d[5]=c[5];d[6]=c[6];d[7]=c[7];d[8]=c[8];d[9]=c[9];d[10]=c[10];d[11]=c[11];d[12]=c[12];d[13]=c[13];d[14]=c[14];d[15]=c[15];return d},flattenToArrayOffset:function(e,d){var f=this.elements;e[d]=f[0];e[d+1]=f[1];e[d+2]=f[2];e[d+3]=f[3];e[d+4]=f[4];e[d+5]=f[5];e[d+6]=f[6];e[d+7]=f[7];e[d+8]=f[8];e[d+9]=f[9];e[d+10]=f[10];e[d+11]=f[11];e[d+12]=f[12];e[d+13]=f[13];e[d+14]=f[14];e[d+15]=f[15];return e},getPosition:function(){var b=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var a=this.elements;return b.set(a[12],a[13],a[14])}}(),setPosition:function(d){var c=this.elements;c[12]=d.x;c[13]=d.y;c[14]=d.z;return this},getInverse:function(O,N){var M=this.elements,L=O.elements,K=L[0],J=L[4],I=L[8],H=L[12],G=L[1],F=L[5],E=L[9],A=L[13],B=L[2],C=L[6],m=L[10],D=L[14],j=L[3],i=L[7],o=L[11],L=L[15];M[0]=E*D*i-A*m*i+A*C*o-F*D*o-E*C*L+F*m*L;M[4]=H*m*i-I*D*i-H*C*o+J*D*o+I*C*L-J*m*L;M[8]=I*A*i-H*E*i+H*F*o-J*A*o-I*F*L+J*E*L;M[12]=H*E*C-I*A*C-H*F*m+J*A*m+I*F*D-J*E*D;M[1]=A*m*j-E*D*j-A*B*o+G*D*o+E*B*L-G*m*L;M[5]=I*D*j-H*m*j+H*B*o-K*D*o-I*B*L+K*m*L;M[9]=H*E*j-I*A*j-H*G*o+K*A*o+I*G*L-K*E*L;M[13]=I*A*B-H*E*B+H*G*m-K*A*m-I*G*D+K*E*D;M[2]=F*D*j-A*C*j+A*B*i-G*D*i-F*B*L+G*C*L;M[6]=H*C*j-J*D*j-H*B*i+K*D*i+J*B*L-K*C*L;M[10]=J*A*j-H*F*j+H*G*i-K*A*i-J*G*L+K*F*L;M[14]=H*F*B-J*A*B-H*G*C+K*A*C+J*G*D-K*F*D;M[3]=E*C*j-F*m*j-E*B*i+G*m*i+F*B*o-G*C*o;M[7]=J*m*j-I*C*j+I*B*i-K*m*i-J*B*o+K*C*o;M[11]=I*F*j-J*E*j-I*G*i+K*E*i+J*G*o-K*F*o;M[15]=J*E*B-I*F*B+I*G*C-K*E*C-J*G*m+K*F*m;M=K*M[0]+G*M[4]+B*M[8]+j*M[12];if(0==M){if(N){throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0")}console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/M);return this},translate:function(b){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(b){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(b){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(b){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(d,c){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(f){var e=this.elements,h=f.x,g=f.y;f=f.z;e[0]*=h;e[4]*=g;e[8]*=f;e[1]*=h;e[5]*=g;e[9]*=f;e[2]*=h;e[6]*=g;e[10]*=f;e[3]*=h;e[7]*=g;e[11]*=f;return this},getMaxScaleOnAxis:function(){var b=this.elements;return Math.sqrt(Math.max(b[0]*b[0]+b[1]*b[1]+b[2]*b[2],Math.max(b[4]*b[4]+b[5]*b[5]+b[6]*b[6],b[8]*b[8]+b[9]*b[9]+b[10]*b[10])))},makeTranslation:function(e,d,f){this.set(1,0,0,e,0,1,0,d,0,0,1,f,0,0,0,1);return this},makeRotationX:function(d){var c=Math.cos(d);d=Math.sin(d);this.set(1,0,0,0,0,c,-d,0,0,d,c,0,0,0,0,1);return this},makeRotationY:function(d){var c=Math.cos(d);d=Math.sin(d);this.set(c,0,d,0,0,1,0,0,-d,0,c,0,0,0,0,1);return this},makeRotationZ:function(d){var c=Math.cos(d);d=Math.sin(d);this.set(c,-d,0,0,d,c,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(t,s){var r=Math.cos(s),q=Math.sin(s),p=1-r,o=t.x,n=t.y,m=t.z,j=p*o,i=p*n;this.set(j*o+r,j*n-q*m,j*m+q*n,0,j*n+q*m,i*n+r,i*m-q*o,0,j*m-q*n,i*m+q*o,p*m*m+r,0,0,0,0,1);return this},makeScale:function(e,d,f){this.set(e,0,0,0,0,d,0,0,0,0,f,0,0,0,0,1);return this},compose:function(e,d,f){this.makeRotationFromQuaternion(d);this.scale(f);this.setPosition(e);return this},decompose:function(){var d=new THREE.Vector3,c=new THREE.Matrix4;return function(p,o,n){var m=this.elements,j=d.set(m[0],m[1],m[2]).length(),i=d.set(m[4],m[5],m[6]).length(),b=d.set(m[8],m[9],m[10]).length();0>this.determinant()&&(j=-j);p.x=m[12];p.y=m[13];p.z=m[14];c.elements.set(this.elements);p=1/j;var m=1/i,a=1/b;c.elements[0]*=p;c.elements[1]*=p;c.elements[2]*=p;c.elements[4]*=m;c.elements[5]*=m;c.elements[6]*=m;c.elements[8]*=a;c.elements[9]*=a;c.elements[10]*=a;o.setFromRotationMatrix(c);n.x=j;n.y=i;n.z=b;return this}}(),makeFrustum:function(i,h,n,m,l,k){var j=this.elements;j[0]=2*l/(h-i);j[4]=0;j[8]=(h+i)/(h-i);j[12]=0;j[1]=0;j[5]=2*l/(m-n);j[9]=(m+n)/(m-n);j[13]=0;j[2]=0;j[6]=0;j[10]=-(k+l)/(k-l);j[14]=-2*k*l/(k-l);j[3]=0;j[7]=0;j[11]=-1;j[15]=0;return this},makePerspective:function(g,f,j,i){g=j*Math.tan(THREE.Math.degToRad(0.5*g));var h=-g;return this.makeFrustum(h*f,g*f,h,g,j,i)},makeOrthographic:function(t,s,r,q,p,o){var n=this.elements,m=s-t,j=r-q,i=o-p;n[0]=2/m;n[4]=0;n[8]=0;n[12]=-((s+t)/m);n[1]=0;n[5]=2/j;n[9]=0;n[13]=-((r+q)/j);n[2]=0;n[6]=0;n[10]=-2/i;n[14]=-((o+p)/i);n[3]=0;n[7]=0;n[11]=0;n[15]=1;return this},fromArray:function(b){this.elements.set(b);return this},toArray:function(){var b=this.elements;return[b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15]]},clone:function(){var b=this.elements;return new THREE.Matrix4(b[0],b[4],b[8],b[12],b[1],b[5],b[9],b[13],b[2],b[6],b[10],b[14],b[3],b[7],b[11],b[15])}};THREE.Ray=function(d,c){this.origin=void 0!==d?d:new THREE.Vector3;this.direction=void 0!==c?c:new THREE.Vector3};THREE.Ray.prototype={constructor:THREE.Ray,set:function(d,c){this.origin.copy(d);this.direction.copy(c);return this},copy:function(b){this.origin.copy(b.origin);this.direction.copy(b.direction);return this},at:function(d,c){return(c||new THREE.Vector3).copy(this.direction).multiplyScalar(d).add(this.origin)},recast:function(){var b=new THREE.Vector3;return function(a){this.origin.copy(this.at(a,b));return this}}(),closestPointToPoint:function(f,e){var h=e||new THREE.Vector3;h.subVectors(f,this.origin);var g=h.dot(this.direction);return 0>g?h.copy(this.origin):h.copy(this.direction).multiplyScalar(g).add(this.origin)},distanceToPoint:function(){var b=new THREE.Vector3;return function(a){var d=b.subVectors(a,this.origin).dot(this.direction);if(0>d){return this.origin.distanceTo(a)}b.copy(this.direction).multiplyScalar(d).add(this.origin);return b.distanceTo(a)}}(),distanceSqToSegment:function(C,B,A,v){var u=C.clone().add(B).multiplyScalar(0.5),t=B.clone().sub(C).normalize(),q=0.5*C.distanceTo(B),p=this.origin.clone().sub(u);C=-this.direction.dot(t);B=p.dot(this.direction);var o=-p.dot(t),m=p.lengthSq(),j=Math.abs(1-C*C),D,i;0<=j?(p=C*o-B,D=C*B-o,i=q*j,0<=p?D>=-i?D<=i?(q=1/j,p*=q,D*=q,C=p*(p+C*D+2*B)+D*(C*p+D+2*o)+m):(D=q,p=Math.max(0,-(C*D+B)),C=-p*p+D*(D+2*o)+m):(D=-q,p=Math.max(0,-(C*D+B)),C=-p*p+D*(D+2*o)+m):D<=-i?(p=Math.max(0,-(-C*q+B)),D=0<p?-q:Math.min(Math.max(-q,-o),q),C=-p*p+D*(D+2*o)+m):D<=i?(p=0,D=Math.min(Math.max(-q,-o),q),C=D*(D+2*o)+m):(p=Math.max(0,-(C*q+B)),D=0<p?q:Math.min(Math.max(-q,-o),q),C=-p*p+D*(D+2*o)+m)):(D=0<C?-q:q,p=Math.max(0,-(C*D+B)),C=-p*p+D*(D+2*o)+m);A&&A.copy(this.direction.clone().multiplyScalar(p).add(this.origin));v&&v.copy(t.clone().multiplyScalar(D).add(u));return C},isIntersectionSphere:function(b){return this.distanceToPoint(b.center)<=b.radius},isIntersectionPlane:function(d){var c=d.distanceToPoint(this.origin);return 0===c||0>d.normal.dot(this.direction)*c?!0:!1},distanceToPlane:function(d){var c=d.normal.dot(this.direction);if(0==c){return 0==d.distanceToPoint(this.origin)?0:null}d=-(this.origin.dot(d.normal)+d.constant)/c;return 0<=d?d:null},intersectPlane:function(e,d){var f=this.distanceToPlane(e);return null===f?null:this.at(f,d)},isIntersectionBox:function(){var b=new THREE.Vector3;return function(a){return null!==this.intersectBox(a,b)}}(),intersectBox:function(j,i){var p,o,n,m,l;o=1/this.direction.x;m=1/this.direction.y;l=1/this.direction.z;var k=this.origin;0<=o?(p=(j.min.x-k.x)*o,o*=j.max.x-k.x):(p=(j.max.x-k.x)*o,o*=j.min.x-k.x);0<=m?(n=(j.min.y-k.y)*m,m*=j.max.y-k.y):(n=(j.max.y-k.y)*m,m*=j.min.y-k.y);if(p>m||n>o){return null}if(n>p||p!==p){p=n}if(m<o||o!==o){o=m}0<=l?(n=(j.min.z-k.z)*l,l*=j.max.z-k.z):(n=(j.max.z-k.z)*l,l*=j.min.z-k.z);if(p>l||n>o){return null}if(n>p||p!==p){p=n}if(l<o||o!==o){o=l}return 0>o?null:this.at(0<=p?p:o,i)},intersectTriangle:function(){var f=new THREE.Vector3,e=new THREE.Vector3,h=new THREE.Vector3,g=new THREE.Vector3;return function(i,d,c,b,a){e.subVectors(d,i);h.subVectors(c,i);g.crossVectors(e,h);d=this.direction.dot(g);if(0<d){if(b){return null}b=1}else{if(0>d){b=-1,d=-d}else{return null}}f.subVectors(this.origin,i);i=b*this.direction.dot(h.crossVectors(f,h));if(0>i){return null}c=b*this.direction.dot(e.cross(f));if(0>c||i+c>d){return null}i=-b*f.dot(g);return 0>i?null:this.at(i/d,a)}}(),applyMatrix4:function(b){this.direction.add(this.origin).applyMatrix4(b);this.origin.applyMatrix4(b);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(b){return b.origin.equals(this.origin)&&b.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(d,c){this.center=void 0!==d?d:new THREE.Vector3;this.radius=void 0!==c?c:0};THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(d,c){this.center.copy(d);this.radius=c;return this},setFromPoints:function(){var b=new THREE.Box3;return function(a,l){var k=this.center;void 0!==l?k.copy(l):b.setFromPoints(a).center(k);for(var j=0,i=0,h=a.length;i<h;i++){j=Math.max(j,k.distanceToSquared(a[i]))}this.radius=Math.sqrt(j);return this}}(),copy:function(b){this.center.copy(b.center);this.radius=b.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(b){return b.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(b){return b.distanceTo(this.center)-this.radius},intersectsSphere:function(d){var c=this.radius+d.radius;return d.center.distanceToSquared(this.center)<=c*c},clampPoint:function(f,e){var h=this.center.distanceToSquared(f),g=e||new THREE.Vector3;g.copy(f);h>this.radius*this.radius&&(g.sub(this.center).normalize(),g.multiplyScalar(this.radius).add(this.center));return g},getBoundingBox:function(b){b=b||new THREE.Box3;b.set(this.center,this.center);b.expandByScalar(this.radius);return b},applyMatrix4:function(b){this.center.applyMatrix4(b);this.radius*=b.getMaxScaleOnAxis();return this},translate:function(b){this.center.add(b);return this},equals:function(b){return b.center.equals(this.center)&&b.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};THREE.Frustum=function(h,g,l,k,j,i){this.planes=[void 0!==h?h:new THREE.Plane,void 0!==g?g:new THREE.Plane,void 0!==l?l:new THREE.Plane,void 0!==k?k:new THREE.Plane,void 0!==j?j:new THREE.Plane,void 0!==i?i:new THREE.Plane]};THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(i,h,n,m,l,k){var j=this.planes;j[0].copy(i);j[1].copy(h);j[2].copy(n);j[3].copy(m);j[4].copy(l);j[5].copy(k);return this},copy:function(e){for(var d=this.planes,f=0;6>f;f++){d[f].copy(e.planes[f])}return this},setFromMatrix:function(I){var H=this.planes,G=I.elements;I=G[0];var F=G[1],E=G[2],D=G[3],C=G[4],B=G[5],A=G[6],t=G[7],o=G[8],L=G[9],i=G[10],j=G[11],K=G[12],m=G[13],J=G[14],G=G[15];H[0].setComponents(D-I,t-C,j-o,G-K).normalize();H[1].setComponents(D+I,t+C,j+o,G+K).normalize();H[2].setComponents(D+F,t+B,j+L,G+m).normalize();H[3].setComponents(D-F,t-B,j-L,G-m).normalize();H[4].setComponents(D-E,t-A,j-i,G-J).normalize();H[5].setComponents(D+E,t+A,j+i,G+J).normalize();return this},intersectsObject:function(){var b=new THREE.Sphere;return function(a){var d=a.geometry;null===d.boundingSphere&&d.computeBoundingSphere();b.copy(d.boundingSphere);b.applyMatrix4(a.matrixWorld);return this.intersectsSphere(b)}}(),intersectsSphere:function(f){var e=this.planes,h=f.center;f=-f.radius;for(var g=0;6>g;g++){if(e[g].distanceToPoint(h)<f){return !1}}return !0},intersectsBox:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(j){for(var i=this.planes,h=0;6>h;h++){var b=i[h];d.x=0<b.normal.x?j.min.x:j.max.x;c.x=0<b.normal.x?j.max.x:j.min.x;d.y=0<b.normal.y?j.min.y:j.max.y;c.y=0<b.normal.y?j.max.y:j.min.y;d.z=0<b.normal.z?j.min.z:j.max.z;c.z=0<b.normal.z?j.max.z:j.min.z;var a=b.distanceToPoint(d),b=b.distanceToPoint(c);if(0>a&&0>b){return !1}}return !0}}(),containsPoint:function(e){for(var d=this.planes,f=0;6>f;f++){if(0>d[f].distanceToPoint(e)){return !1}}return !0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(d,c){this.normal=void 0!==d?d:new THREE.Vector3(1,0,0);this.constant=void 0!==c?c:0};THREE.Plane.prototype={constructor:THREE.Plane,set:function(d,c){this.normal.copy(d);this.constant=c;return this},setComponents:function(f,e,h,g){this.normal.set(f,e,h);this.constant=g;return this},setFromNormalAndCoplanarPoint:function(d,c){this.normal.copy(d);this.constant=-c.dot(this.normal);return this},setFromCoplanarPoints:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(f,b,a){b=d.subVectors(a,b).cross(c.subVectors(f,b)).normalize();this.setFromNormalAndCoplanarPoint(b,f);return this}}(),copy:function(b){this.normal.copy(b.normal);this.constant=b.constant;return this},normalize:function(){var b=1/this.normal.length();this.normal.multiplyScalar(b);this.constant*=b;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(b){return this.normal.dot(b)+this.constant},distanceToSphere:function(b){return this.distanceToPoint(b.center)-b.radius},projectPoint:function(d,c){return this.orthoPoint(d,c).sub(d).negate()},orthoPoint:function(e,d){var f=this.distanceToPoint(e);return(d||new THREE.Vector3).copy(this.normal).multiplyScalar(f)},isIntersectionLine:function(d){var c=this.distanceToPoint(d.start);d=this.distanceToPoint(d.end);return 0>c&&0<d||0>d&&0<c},intersectLine:function(){var b=new THREE.Vector3;return function(a,j){var i=j||new THREE.Vector3,h=a.delta(b),g=this.normal.dot(h);if(0==g){if(0==this.distanceToPoint(a.start)){return i.copy(a.start)}}else{return g=-(a.start.dot(this.normal)+this.constant)/g,0>g||1<g?void 0:i.copy(h).multiplyScalar(g).add(a.start)}}}(),coplanarPoint:function(b){return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Matrix3;return function(h,c){var b=c||f.getNormalMatrix(h),b=e.copy(this.normal).applyMatrix3(b),a=this.coplanarPoint(d);a.applyMatrix4(h);this.setFromNormalAndCoplanarPoint(b,a);return this}}(),translate:function(b){this.constant-=b.dot(this.normal);return this},equals:function(b){return b.normal.equals(this.normal)&&b.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};THREE.Math={PI2:2*Math.PI,generateUUID:function(){var f="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),e=Array(36),h=0,g;return function(){for(var a=0;36>a;a++){8==a||13==a||18==a||23==a?e[a]="-":14==a?e[a]="4":(2>=h&&(h=33554432+16777216*Math.random()|0),g=h&15,h>>=4,e[a]=f[19==a?g&3|8:g])}return e.join("")}}(),clamp:function(e,d,f){return e<d?d:e>f?f:e},clampBottom:function(d,c){return d<c?c:d},mapLinear:function(g,f,j,i,h){return i+(g-f)*(h-i)/(j-f)},smoothstep:function(e,d,f){if(e<=d){return 0}if(e>=f){return 1}e=(e-d)/(f-d);return e*e*(3-2*e)},smootherstep:function(e,d,f){if(e<=d){return 0}if(e>=f){return 1}e=(e-d)/(f-d);return e*e*e*(e*(6*e-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(d,c){return d+Math.floor(Math.random()*(c-d+1))},randFloat:function(d,c){return d+Math.random()*(c-d)},randFloatSpread:function(b){return b*(0.5-Math.random())},sign:function(b){return 0>b?-1:0<b?1:0},degToRad:function(){var b=Math.PI/180;return function(a){return a*b}}(),radToDeg:function(){var b=180/Math.PI;return function(a){return a*b}}(),isPowerOfTwo:function(b){return 0===(b&b-1)&&0!==b}};THREE.Spline=function(C){function B(k,h,E,s,r,n,l){k=0.5*(E-k);s=0.5*(s-h);return(2*(h-E)+k+s)*l+(-3*(h-E)-2*k-s)*n+k*r+h}this.points=C;var A=[],v={x:0,y:0,z:0},u,t,q,p,o,m,j,D,i;this.initFromArray=function(d){this.points=[];for(var c=0;c<d.length;c++){this.points[c]={x:d[c][0],y:d[c][1],z:d[c][2]}}};this.getPoint=function(b){u=(this.points.length-1)*b;t=Math.floor(u);q=u-t;A[0]=0===t?t:t-1;A[1]=t;A[2]=t>this.points.length-2?this.points.length-1:t+1;A[3]=t>this.points.length-3?this.points.length-1:t+2;m=this.points[A[0]];j=this.points[A[1]];D=this.points[A[2]];i=this.points[A[3]];p=q*q;o=q*p;v.x=B(m.x,j.x,D.x,i.x,q,p,o);v.y=B(m.y,j.y,D.y,i.y,q,p,o);v.z=B(m.z,j.z,D.z,i.z,q,p,o);return v};this.getControlPointsArray=function(){var f,e,h=this.points.length,g=[];for(f=0;f<h;f++){e=this.points[f],g[f]=[e.x,e.y,e.z]}return g};this.getLength=function(I){var H,G,F,E=H=H=0,s=new THREE.Vector3,r=new THREE.Vector3,n=[],l=0;n[0]=0;I||(I=100);G=this.points.length*I;s.copy(this.points[0]);for(I=1;I<G;I++){H=I/G,F=this.getPoint(H),r.copy(F),l+=r.distanceTo(s),s.copy(F),H*=this.points.length-1,H=Math.floor(H),H!=E&&(n[H]=l,E=H)}n[n.length]=l;return{chunks:n,total:l}};this.reparametrizeByArcLength=function(K){var J,I,H,G,F,E,s=[],r=new THREE.Vector3,n=this.getLength();s.push(r.copy(this.points[0]).clone());for(J=1;J<this.points.length;J++){I=n.chunks[J]-n.chunks[J-1];E=Math.ceil(K*I/n.total);G=(J-1)/(this.points.length-1);F=J/(this.points.length-1);for(I=1;I<E-1;I++){H=G+1/E*I*(F-G),H=this.getPoint(H),s.push(r.copy(H).clone())}s.push(r.copy(this.points[J]).clone())}this.points=s}};THREE.Triangle=function(e,d,f){this.a=void 0!==e?e:new THREE.Vector3;this.b=void 0!==d?d:new THREE.Vector3;this.c=void 0!==f?f:new THREE.Vector3};THREE.Triangle.normal=function(){var b=new THREE.Vector3;return function(a,h,g,f){f=f||new THREE.Vector3;f.subVectors(g,h);b.subVectors(a,h);f.cross(b);a=f.lengthSq();return 0<a?f.multiplyScalar(1/Math.sqrt(a)):f.set(0,0,0)}}();THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3;return function(n,m,j,i,c){e.subVectors(i,m);d.subVectors(j,m);f.subVectors(n,m);n=e.dot(e);m=e.dot(d);j=e.dot(f);var b=d.dot(d);i=d.dot(f);var a=n*b-m*m;c=c||new THREE.Vector3;if(0==a){return c.set(-2,-1,-1)}a=1/a;b=(b*j-m*i)*a;n=(n*i-m*j)*a;return c.set(1-b-n,n,b)}}();THREE.Triangle.containsPoint=function(){var b=new THREE.Vector3;return function(a,h,g,f){a=THREE.Triangle.barycoordFromPoint(a,h,g,f,b);return 0<=a.x&&0<=a.y&&1>=a.x+a.y}}();THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,d,f){this.a.copy(e);this.b.copy(d);this.c.copy(f);return this},setFromPointsAndIndices:function(f,e,h,g){this.a.copy(f[e]);this.b.copy(f[h]);this.c.copy(f[g]);return this},copy:function(b){this.a.copy(b.a);this.b.copy(b.b);this.c.copy(b.c);return this},area:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(){d.subVectors(this.c,this.b);c.subVectors(this.a,this.b);return 0.5*d.cross(c).length()}}(),midpoint:function(b){return(b||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(b){return THREE.Triangle.normal(this.a,this.b,this.c,b)},plane:function(b){return(b||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(d,c){return THREE.Triangle.barycoordFromPoint(d,this.a,this.b,this.c,c)},containsPoint:function(b){return THREE.Triangle.containsPoint(b,this.a,this.b,this.c)},equals:function(b){return b.a.equals(this.a)&&b.b.equals(this.b)&&b.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Vertex=function(b){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return b};THREE.UV=function(d,c){console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.");return new THREE.Vector2(d,c)};THREE.Clock=function(b){this.autoStart=void 0!==b?b:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var d=0;this.autoStart&&!this.running&&this.start();if(this.running){var c=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),d=0.001*(c-this.oldTime);this.oldTime=c;this.elapsedTime+=d}return d}};THREE.EventDispatcher=function(){};THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(b){b.addEventListener=THREE.EventDispatcher.prototype.addEventListener;b.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;b.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;b.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,d){void 0===this._listeners&&(this._listeners={});var f=this._listeners;void 0===f[e]&&(f[e]=[]);-1===f[e].indexOf(d)&&f[e].push(d)},hasEventListener:function(e,d){if(void 0===this._listeners){return !1}var f=this._listeners;return void 0!==f[e]&&-1!==f[e].indexOf(d)?!0:!1},removeEventListener:function(f,e){if(void 0!==this._listeners){var h=this._listeners[f];if(void 0!==h){var g=h.indexOf(e);-1!==g&&h.splice(g,1)}}},dispatchEvent:function(){var b=[];return function(a){if(void 0!==this._listeners){var h=this._listeners[a.type];if(void 0!==h){a.target=this;for(var g=h.length,f=0;f<g;f++){b[f]=h[f]}for(f=0;f<g;f++){b[f].call(this,a)}}}}}()};(function(v){v.Raycaster=function(a,h,g,f){this.ray=new v.Ray(a,h);this.near=g||0;this.far=f||Infinity};var u=new v.Sphere,t=new v.Ray;new v.Plane;new v.Vector3;var s=new v.Vector3,r=new v.Matrix4,q=function(d,c){return d.distance-c.distance},p=new v.Vector3,o=new v.Vector3,m=new v.Vector3,j=function(V,U,S){if(V instanceof v.Sprite){s.setFromMatrixPosition(V.matrixWorld);var L=U.ray.distanceToPoint(s);if(L>V.scale.x){return S}S.push({distance:L,point:V.position,face:null,object:V})}else{if(V instanceof v.LOD){s.setFromMatrixPosition(V.matrixWorld),L=U.ray.origin.distanceTo(s),j(V.getObjectForDistance(L),U,S)}else{if(V instanceof v.Mesh){var T=V.geometry;null===T.boundingSphere&&T.computeBoundingSphere();u.copy(T.boundingSphere);u.applyMatrix4(V.matrixWorld);if(!1===U.ray.isIntersectionSphere(u)){return S}r.getInverse(V.matrixWorld);t.copy(U.ray).applyMatrix4(r);if(null!==T.boundingBox&&!1===t.isIntersectionBox(T.boundingBox)){return S}if(T instanceof v.BufferGeometry){var A=V.material;if(void 0===A){return S}var k=T.attributes,N,g,c=U.precision;if(void 0!==k.index){for(var R=T.offsets,M=k.index.array,h=k.position.array,P=0,l=R.length;P<l;++P){for(var k=R[P].start,e=R[P].index,T=k,a=k+R[P].count;T<a;T+=3){k=e+M[T];N=e+M[T+1];g=e+M[T+2];p.set(h[3*k],h[3*k+1],h[3*k+2]);o.set(h[3*N],h[3*N+1],h[3*N+2]);m.set(h[3*g],h[3*g+1],h[3*g+2]);var b=A.side===v.BackSide?t.intersectTriangle(m,o,p,!0):t.intersectTriangle(p,o,m,A.side!==v.DoubleSide);null!==b&&(b.applyMatrix4(V.matrixWorld),L=U.ray.origin.distanceTo(b),L<c||L<U.near||L>U.far||S.push({distance:L,point:b,indices:[k,N,g],face:null,faceIndex:null,object:V}))}}}else{for(h=k.position.array,T=0,a=k.position.array.length;T<a;T+=3){k=T,N=T+1,g=T+2,p.set(h[3*k],h[3*k+1],h[3*k+2]),o.set(h[3*N],h[3*N+1],h[3*N+2]),m.set(h[3*g],h[3*g+1],h[3*g+2]),b=A.side===v.BackSide?t.intersectTriangle(m,o,p,!0):t.intersectTriangle(p,o,m,A.side!==v.DoubleSide),null!==b&&(b.applyMatrix4(V.matrixWorld),L=U.ray.origin.distanceTo(b),L<c||L<U.near||L>U.far||S.push({distance:L,point:b,indices:[k,N,g],face:null,faceIndex:null,object:V}))}}}else{if(T instanceof v.Geometry){for(M=V.material instanceof v.MeshFaceMaterial,h=!0===M?V.material.materials:null,c=U.precision,R=T.vertices,P=0,l=T.faces.length;P<l;P++){if(e=T.faces[P],A=!0===M?h[e.materialIndex]:V.material,void 0!==A){k=R[e.a];N=R[e.b];g=R[e.c];if(!0===A.morphTargets){L=T.morphTargets;b=V.morphTargetInfluences;p.set(0,0,0);o.set(0,0,0);m.set(0,0,0);for(var a=0,d=L.length;a<d;a++){var J=b[a];if(0!==J){var Q=L[a].vertices;p.x+=(Q[e.a].x-k.x)*J;p.y+=(Q[e.a].y-k.y)*J;p.z+=(Q[e.a].z-k.z)*J;o.x+=(Q[e.b].x-N.x)*J;o.y+=(Q[e.b].y-N.y)*J;o.z+=(Q[e.b].z-N.z)*J;m.x+=(Q[e.c].x-g.x)*J;m.y+=(Q[e.c].y-g.y)*J;m.z+=(Q[e.c].z-g.z)*J}}p.add(k);o.add(N);m.add(g);k=p;N=o;g=m}b=A.side===v.BackSide?t.intersectTriangle(g,N,k,!0):t.intersectTriangle(k,N,g,A.side!==v.DoubleSide);null!==b&&(b.applyMatrix4(V.matrixWorld),L=U.ray.origin.distanceTo(b),L<c||L<U.near||L>U.far||S.push({distance:L,point:b,face:e,faceIndex:P,object:V}))}}}}}else{if(V instanceof v.Line){c=U.linePrecision;A=c*c;T=V.geometry;null===T.boundingSphere&&T.computeBoundingSphere();u.copy(T.boundingSphere);u.applyMatrix4(V.matrixWorld);if(!1===U.ray.isIntersectionSphere(u)){return S}r.getInverse(V.matrixWorld);t.copy(U.ray).applyMatrix4(r);if(T instanceof v.Geometry){for(R=T.vertices,c=R.length,k=new v.Vector3,N=new v.Vector3,g=V.type===v.LineStrip?1:2,T=0;T<c-1;T+=g){t.distanceSqToSegment(R[T],R[T+1],N,k)>A||(L=t.origin.distanceTo(N),L<U.near||L>U.far||S.push({distance:L,point:k.clone().applyMatrix4(V.matrixWorld),face:null,faceIndex:null,object:V}))}}}}}}},i=function(g,f,l){g=g.getDescendants();for(var k=0,h=g.length;k<h;k++){j(g[k],f,l)}};v.Raycaster.prototype.precision=0.0001;v.Raycaster.prototype.linePrecision=1;v.Raycaster.prototype.set=function(d,c){this.ray.set(d,c)};v.Raycaster.prototype.intersectObject=function(e,d){var f=[];!0===d&&i(e,this,f);j(e,this,f);f.sort(q);return f};v.Raycaster.prototype.intersectObjects=function(g,f){for(var l=[],k=0,h=g.length;k<h;k++){j(g[k],this,l),!0===f&&i(g[k],this,l)}l.sort(q);return l}})(THREE);THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this._rotation=new THREE.Euler;this._quaternion=new THREE.Quaternion;this.scale=new THREE.Vector3(1,1,1);this._rotation._quaternion=this.quaternion;this._quaternion._euler=this.rotation;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.visible=this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.userData={}};THREE.Object3D.prototype={constructor:THREE.Object3D,get rotation(){return this._rotation},set rotation(b){this._rotation=b;this._rotation._quaternion=this._quaternion;this._quaternion._euler=this._rotation;this._rotation._updateQuaternion()},get quaternion(){return this._quaternion},set quaternion(b){this._quaternion=b;this._quaternion._euler=this._rotation;this._rotation._quaternion=this._quaternion;this._quaternion._updateEuler()},get eulerOrder(){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");return this.rotation.order},set eulerOrder(b){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");this.rotation.order=b},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(b){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(b){this.matrix.multiplyMatrices(b,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(d,c){this.quaternion.setFromAxisAngle(d,c)},setRotationFromEuler:function(b){this.quaternion.setFromEuler(b,!0)},setRotationFromMatrix:function(b){this.quaternion.setFromRotationMatrix(b)},setRotationFromQuaternion:function(b){this.quaternion.copy(b)},rotateOnAxis:function(){var b=new THREE.Quaternion;return function(a,d){b.setFromAxisAngle(a,d);this.quaternion.multiply(b);return this}}(),rotateX:function(){var b=new THREE.Vector3(1,0,0);return function(a){return this.rotateOnAxis(b,a)}}(),rotateY:function(){var b=new THREE.Vector3(0,1,0);return function(a){return this.rotateOnAxis(b,a)}}(),rotateZ:function(){var b=new THREE.Vector3(0,0,1);return function(a){return this.rotateOnAxis(b,a)}}(),translateOnAxis:function(){var b=new THREE.Vector3;return function(a,d){b.copy(a);b.applyQuaternion(this.quaternion);this.position.add(b.multiplyScalar(d));return this}}(),translate:function(d,c){console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed.");return this.translateOnAxis(c,d)},translateX:function(){var b=new THREE.Vector3(1,0,0);return function(a){return this.translateOnAxis(b,a)}}(),translateY:function(){var b=new THREE.Vector3(0,1,0);return function(a){return this.translateOnAxis(b,a)}}(),translateZ:function(){var b=new THREE.Vector3(0,0,1);return function(a){return this.translateOnAxis(b,a)}}(),localToWorld:function(b){return b.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var b=new THREE.Matrix4;return function(a){return a.applyMatrix4(b.getInverse(this.matrixWorld))}}(),lookAt:function(){var b=new THREE.Matrix4;return function(a){b.lookAt(a,this.position,this.up);this.quaternion.setFromRotationMatrix(b)}}(),add:function(d){if(d===this){console.warn("THREE.Object3D.add: An object can't be added as a child of itself.")}else{if(d instanceof THREE.Object3D){void 0!==d.parent&&d.parent.remove(d);d.parent=this;d.dispatchEvent({type:"added"});this.children.push(d);for(var c=this;void 0!==c.parent;){c=c.parent}void 0!==c&&c instanceof THREE.Scene&&c.__addObject(d)}}},remove:function(d){var c=this.children.indexOf(d);if(-1!==c){d.parent=void 0;d.dispatchEvent({type:"removed"});this.children.splice(c,1);for(c=this;void 0!==c.parent;){c=c.parent}void 0!==c&&c instanceof THREE.Scene&&c.__removeObject(d)}},traverse:function(e){e(this);for(var d=0,f=this.children.length;d<f;d++){this.children[d].traverse(e)}},getObjectById:function(g,f){for(var j=0,i=this.children.length;j<i;j++){var h=this.children[j];if(h.id===g||!0===f&&(h=h.getObjectById(g,f),void 0!==h)){return h}}},getObjectByName:function(g,f){for(var j=0,i=this.children.length;j<i;j++){var h=this.children[j];if(h.name===g||!0===f&&(h=h.getObjectByName(g,f),void 0!==h)){return h}}},getChildByName:function(d,c){console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(d,c)},getDescendants:function(e){void 0===e&&(e=[]);Array.prototype.push.apply(e,this.children);for(var d=0,f=this.children.length;d<f;d++){this.children[d].getDescendants(e)}return e},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===e){void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0}for(var d=0,f=this.children.length;d<f;d++){this.children[d].updateMatrixWorld(e)}},clone:function(e,d){void 0===e&&(e=new THREE.Object3D);void 0===d&&(d=!0);e.name=this.name;e.up.copy(this.up);e.position.copy(this.position);e.quaternion.copy(this.quaternion);e.scale.copy(this.scale);e.renderDepth=this.renderDepth;e.rotationAutoUpdate=this.rotationAutoUpdate;e.matrix.copy(this.matrix);e.matrixWorld.copy(this.matrixWorld);e.matrixAutoUpdate=this.matrixAutoUpdate;e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;e.visible=this.visible;e.castShadow=this.castShadow;e.receiveShadow=this.receiveShadow;e.frustumCulled=this.frustumCulled;e.userData=JSON.parse(JSON.stringify(this.userData));if(!0===d){for(var f=0;f<this.children.length;f++){e.add(this.children[f].clone())}}return e}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;THREE.Projector=function(){function aH(){if(ax===au){var b=new THREE.RenderableVertex;at.push(b);au++;ax++;return b}return at[ax++]}function aG(){if(aq===ap){var b=new THREE.RenderableFace;aw.push(b);ap++;aq++;return b}return aw[aq++]}function aF(){if(ar===al){var b=new THREE.RenderableLine;an.push(b);al++;ar++;return b}return an[ar++]}function aE(d,c){return d.z!==c.z?c.z-d.z:d.id!==c.id?d.id-c.id:0}function aD(l,k){var t=0,s=1,r=l.z+l.w,q=k.z+k.w,p=-l.z+l.w,n=-k.z+k.w;if(0<=r&&0<=q&&0<=p&&0<=n){return !0}if(0>r&&0>q||0>p&&0>n){return !1}0>r?t=Math.max(t,r/(r-q)):0>q&&(s=Math.min(s,r/(r-q)));0>p?t=Math.max(t,p/(p-n)):0>n&&(s=Math.min(s,p/(p-n)));if(s<t){return !1}l.lerp(k,t);k.lerp(l,1-s);return !0}var aC,aB,aA=[],az=0,ay,ax,at=[],au=0,av,aq,aw=[],ap=0,ao,ar,an=[],al=0,ag,ad,aa=[],ae=0,ab={objects:[],lights:[],elements:[]},Z=new THREE.Vector3,P=new THREE.Vector3,U=new THREE.Vector3,am=new THREE.Vector3,ac=new THREE.Vector4,af=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),ah=new THREE.Box3,T=Array(3),M=new THREE.Matrix4,i=new THREE.Matrix4,o,ak=new THREE.Matrix4,m=new THREE.Matrix3,aj=new THREE.Frustum,X=new THREE.Vector4,ai=new THREE.Vector4;this.projectVector=function(d,c){c.matrixWorldInverse.getInverse(c.matrixWorld);i.multiplyMatrices(c.projectionMatrix,c.matrixWorldInverse);return d.applyProjection(i)};this.unprojectVector=function(){var b=new THREE.Matrix4;return function(a,d){b.getInverse(d.projectionMatrix);i.multiplyMatrices(d.matrixWorld,b);return a.applyProjection(i)}}();this.pickingRay=function(e,d){e.z=-1;var f=new THREE.Vector3(e.x,e.y,1);this.unprojectVector(e,d);this.unprojectVector(f,d);f.sub(e).normalize();return new THREE.Raycaster(e,f)};var j=function(e){if(!1!==e.visible){if(e instanceof THREE.Light){ab.lights.push(e)}else{if(e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.Sprite){if(!1===e.frustumCulled||!0===aj.intersectsObject(e)){if(aB===az){var d=new THREE.RenderableObject;aA.push(d);az++;aB++;aC=d}else{aC=aA[aB++]}aC.id=e.id;aC.object=e;null!==e.renderDepth?aC.z=e.renderDepth:(am.setFromMatrixPosition(e.matrixWorld),am.applyProjection(i),aC.z=am.z);ab.objects.push(aC)}}}for(var d=0,f=e.children.length;d<f;d++){j(e.children[d])}}},S=new function(){var l=[],k=null,c=new THREE.Matrix3,b=function(e){var d=e.positionWorld,f=e.positionScreen;d.copy(e.position).applyMatrix4(o);f.copy(d).applyMatrix4(i);d=1/f.w;f.x*=d;f.y*=d;f.z*=d;e.visible=-1<=f.x&&1>=f.x&&-1<=f.y&&1>=f.y&&-1<=f.z&&1>=f.z},a=function(e,d,f){T[0]=e.positionScreen;T[1]=d.positionScreen;T[2]=f.positionScreen;return !0===e.visible||!0===d.visible||!0===f.visible||af.isIntersectionBox(ah.setFromPoints(T))?0>(f.positionScreen.x-e.positionScreen.x)*(d.positionScreen.y-e.positionScreen.y)-(f.positionScreen.y-e.positionScreen.y)*(d.positionScreen.x-e.positionScreen.x):!1};return{setObject:function(d){k=d;c.getNormalMatrix(k.matrixWorld);l.length=0},projectVertex:b,checkTriangleVisibility:a,pushVertex:function(e,g,f){ay=aH();ay.position.set(e,g,f);b(ay)},pushNormal:function(e,d,f){l.push(e,d,f)},pushLine:function(g,e){var n=at[g],h=at[e];ao=aF();ao.id=k.id;ao.v1.copy(n);ao.v2.copy(h);ao.z=(n.positionScreen.z+h.positionScreen.z)/2;ao.material=k.material;ab.elements.push(ao)},pushTriangle:function(e,q,h){var f=at[e],d=at[q],p=at[h];if(!0===a(f,d,p)){av=aG();av.id=k.id;av.v1.copy(f);av.v2.copy(d);av.v3.copy(p);av.z=(f.positionScreen.z+d.positionScreen.z+p.positionScreen.z)/3;for(f=0;3>f;f++){d=3*arguments[f],p=av.vertexNormalsModel[f],p.set(l[d+0],l[d+1],l[d+2]),p.applyMatrix3(c).normalize()}av.vertexNormalsLength=3;av.material=k.material;ab.elements.push(av)}}}};this.projectScene=function(Y,V,N,J){var I,G,D,u,s,n,F,e,H;ad=ar=aq=0;ab.elements.length=0;!0===Y.autoUpdate&&Y.updateMatrixWorld();void 0===V.parent&&V.updateMatrixWorld();M.copy(V.matrixWorldInverse.getInverse(V.matrixWorld));i.multiplyMatrices(V.projectionMatrix,M);aj.setFromMatrix(i);aB=0;ab.objects.length=0;ab.lights.length=0;j(Y);!0===N&&ab.objects.sort(aE);Y=0;for(N=ab.objects.length;Y<N;Y++){if(I=ab.objects[Y].object,G=I.geometry,S.setObject(I),o=I.matrixWorld,ax=0,I instanceof THREE.Mesh){if(G instanceof THREE.BufferGeometry){if(n=G.attributes,I=G.offsets,void 0!==n.position){e=n.position.array;G=0;for(u=e.length;G<u;G+=3){S.pushVertex(e[G],e[G+1],e[G+2])}H=n.normal.array;G=0;for(u=H.length;G<u;G+=3){S.pushNormal(H[G],H[G+1],H[G+2])}if(void 0!==n.index){if(n=n.index.array,0<I.length){for(Y=0;Y<I.length;Y++){for(u=I[Y],e=u.index,G=u.start,u=u.start+u.count;G<u;G+=3){S.pushTriangle(n[G]+e,n[G+1]+e,n[G+2]+e)}}}else{for(G=0,u=n.length;G<u;G+=3){S.pushTriangle(n[G],n[G+1],n[G+2])}}}else{for(G=0,u=e.length/3;G<u;G+=3){S.pushTriangle(G,G+1,G+2)}}}}else{if(G instanceof THREE.Geometry){D=G.vertices;u=G.faces;n=G.faceVertexUvs;m.getNormalMatrix(o);e=I.material instanceof THREE.MeshFaceMaterial;H=!0===e?I.material:null;for(var d=0,B=D.length;d<B;d++){var K=D[d];S.pushVertex(K.x,K.y,K.z)}d=0;for(B=u.length;d<B;d++){D=u[d];var g=!0===e?H.materials[D.materialIndex]:I.material;if(void 0!==g){F=g.side;var K=at[D.a],R=at[D.b],a=at[D.c];if(!0===g.morphTargets){s=G.morphTargets;var O=I.morphTargetInfluences,c=K.position,t=R.position,Q=a.position;Z.set(0,0,0);P.set(0,0,0);U.set(0,0,0);for(var b=0,E=s.length;b<E;b++){var W=O[b];if(0!==W){var q=s[b].vertices;Z.x+=(q[D.a].x-c.x)*W;Z.y+=(q[D.a].y-c.y)*W;Z.z+=(q[D.a].z-c.z)*W;P.x+=(q[D.b].x-t.x)*W;P.y+=(q[D.b].y-t.y)*W;P.z+=(q[D.b].z-t.z)*W;U.x+=(q[D.c].x-Q.x)*W;U.y+=(q[D.c].y-Q.y)*W;U.z+=(q[D.c].z-Q.z)*W}}K.position.add(Z);R.position.add(P);a.position.add(U);S.projectVertex(K);S.projectVertex(R);S.projectVertex(a)}O=S.checkTriangleVisibility(K,R,a);if(!(!1===O&&F===THREE.FrontSide||!0===O&&F===THREE.BackSide)){av=aG();av.id=I.id;av.v1.copy(K);av.v2.copy(R);av.v3.copy(a);av.normalModel.copy(D.normal);!1!==O||F!==THREE.BackSide&&F!==THREE.DoubleSide||av.normalModel.negate();av.normalModel.applyMatrix3(m).normalize();av.centroidModel.copy(D.centroid).applyMatrix4(o);s=D.vertexNormals;c=0;for(t=Math.min(s.length,3);c<t;c++){Q=av.vertexNormalsModel[c],Q.copy(s[c]),!1!==O||F!==THREE.BackSide&&F!==THREE.DoubleSide||Q.negate(),Q.applyMatrix3(m).normalize()}av.vertexNormalsLength=s.length;s=0;for(O=Math.min(n.length,3);s<O;s++){if(F=n[s][d],void 0!==F){for(c=0,t=F.length;c<t;c++){av.uvs[s][c]=F[c]}}}av.color=D.color;av.material=g;av.z=(K.positionScreen.z+R.positionScreen.z+a.positionScreen.z)/3;ab.elements.push(av)}}}}}}else{if(I instanceof THREE.Line){if(G instanceof THREE.BufferGeometry){if(n=G.attributes,void 0!==n.position){e=n.position.array;G=0;for(u=e.length;G<u;G+=3){S.pushVertex(e[G],e[G+1],e[G+2])}if(void 0!==n.index){for(n=n.index.array,G=0,u=n.length;G<u;G+=2){S.pushLine(n[G],n[G+1])}}else{for(G=0,u=e.length/3-1;G<u;G++){S.pushLine(G,G+1)}}}}else{if(G instanceof THREE.Geometry&&(ak.multiplyMatrices(i,o),D=I.geometry.vertices,0!==D.length)){for(K=aH(),K.positionScreen.copy(D[0]).applyMatrix4(ak),G=I.type===THREE.LinePieces?2:1,d=1,B=D.length;d<B;d++){K=aH(),K.positionScreen.copy(D[d]).applyMatrix4(ak),0<(d+1)%G||(R=at[ax-2],X.copy(K.positionScreen),ai.copy(R.positionScreen),!0===aD(X,ai)&&(X.multiplyScalar(1/X.w),ai.multiplyScalar(1/ai.w),ao=aF(),ao.id=I.id,ao.v1.positionScreen.copy(X),ao.v2.positionScreen.copy(ai),ao.z=Math.max(X.z,ai.z),ao.material=I.material,I.material.vertexColors===THREE.VertexColors&&(ao.vertexColors[0].copy(I.geometry.colors[d]),ao.vertexColors[1].copy(I.geometry.colors[d-1])),ab.elements.push(ao)))}}}}else{I instanceof THREE.Sprite&&(ac.set(o.elements[12],o.elements[13],o.elements[14],1),ac.applyMatrix4(i),G=1/ac.w,ac.z*=G,-1<=ac.z&&1>=ac.z&&(ad===ae?(u=new THREE.RenderableSprite,aa.push(u),ae++,ad++,ag=u):ag=aa[ad++],ag.id=I.id,ag.x=ac.x*G,ag.y=ac.y*G,ag.z=ac.z,ag.object=I,ag.rotation=I.rotation,ag.scale.x=I.scale.x*Math.abs(ag.x-(ac.x+V.projectionMatrix.elements[0])/(ac.w+V.projectionMatrix.elements[12])),ag.scale.y=I.scale.y*Math.abs(ag.y-(ac.y+V.projectionMatrix.elements[5])/(ac.w+V.projectionMatrix.elements[13])),ag.material=I.material,ab.elements.push(ag)))}}}!0===J&&ab.elements.sort(aE);return ab}};THREE.Face3=function(h,g,l,k,j,i){this.a=h;this.b=g;this.c=l;this.normal=k instanceof THREE.Vector3?k:new THREE.Vector3;this.vertexNormals=k instanceof Array?k:[];this.color=j instanceof THREE.Color?j:new THREE.Color;this.vertexColors=j instanceof Array?j:[];this.vertexTangents=[];this.materialIndex=void 0!==i?i:0;this.centroid=new THREE.Vector3};THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal);e.color.copy(this.color);e.centroid.copy(this.centroid);e.materialIndex=this.materialIndex;var d,f;d=0;for(f=this.vertexNormals.length;d<f;d++){e.vertexNormals[d]=this.vertexNormals[d].clone()}d=0;for(f=this.vertexColors.length;d<f;d++){e.vertexColors[d]=this.vertexColors[d].clone()}d=0;for(f=this.vertexTangents.length;d<f;d++){e.vertexTangents[d]=this.vertexTangents[d].clone()}return e}};THREE.Face4=function(i,h,n,m,l,k,j){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(i,h,n,l,k,j)};THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.attributes={};this.offsets=[];this.boundingSphere=this.boundingBox=null};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(f,e,h,g){this.attributes[f]={array:new e(h*g),itemSize:g};return this.attributes[f]},applyMatrix:function(d){var c=this.attributes.position;void 0!==c&&(d.multiplyVector3Array(c.array),c.needsUpdate=!0);c=this.attributes.normal;void 0!==c&&((new THREE.Matrix3).getNormalMatrix(d).multiplyVector3Array(c.array),c.needsUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var i=this.attributes.position.array;if(i){var h=this.boundingBox;3<=i.length&&(h.min.x=h.max.x=i[0],h.min.y=h.max.y=i[1],h.min.z=h.max.z=i[2]);for(var n=3,m=i.length;n<m;n+=3){var l=i[n],k=i[n+1],j=i[n+2];l<h.min.x?h.min.x=l:l>h.max.x&&(h.max.x=l);k<h.min.y?h.min.y=k:k>h.max.y&&(h.max.y=k);j<h.min.z?h.min.z=j:j>h.max.z&&(h.max.z=j)}}if(void 0===i||0===i.length){this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)}},computeBoundingSphere:function(){var d=new THREE.Box3,c=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var j=this.attributes.position.array;if(j){d.makeEmpty();for(var i=this.boundingSphere.center,h=0,b=j.length;h<b;h+=3){c.set(j[h],j[h+1],j[h+2]),d.addPoint(c)}d.center(i);for(var a=0,h=0,b=j.length;h<b;h+=3){c.set(j[h],j[h+1],j[h+2]),a=Math.max(a,i.distanceToSquared(c))}this.boundingSphere.radius=Math.sqrt(a)}}}(),computeVertexNormals:function(){if(this.attributes.position){var P,O,N,M;P=this.attributes.position.array.length;if(void 0===this.attributes.normal){this.attributes.normal={itemSize:3,array:new Float32Array(P)}}else{for(P=0,O=this.attributes.normal.array.length;P<O;P++){this.attributes.normal.array[P]=0}}var L=this.attributes.position.array,K=this.attributes.normal.array,J,I,H,G,F,B,C=new THREE.Vector3,D=new THREE.Vector3,o=new THREE.Vector3,E=new THREE.Vector3,m=new THREE.Vector3;if(this.attributes.index){var j=this.attributes.index.array,A=this.offsets;N=0;for(M=A.length;N<M;++N){O=A[N].start;J=A[N].count;var i=A[N].index;P=O;for(O+=J;P<O;P+=3){J=i+j[P],I=i+j[P+1],H=i+j[P+2],G=L[3*J],F=L[3*J+1],B=L[3*J+2],C.set(G,F,B),G=L[3*I],F=L[3*I+1],B=L[3*I+2],D.set(G,F,B),G=L[3*H],F=L[3*H+1],B=L[3*H+2],o.set(G,F,B),E.subVectors(o,D),m.subVectors(C,D),E.cross(m),K[3*J]+=E.x,K[3*J+1]+=E.y,K[3*J+2]+=E.z,K[3*I]+=E.x,K[3*I+1]+=E.y,K[3*I+2]+=E.z,K[3*H]+=E.x,K[3*H+1]+=E.y,K[3*H+2]+=E.z}}}else{for(P=0,O=L.length;P<O;P+=9){G=L[P],F=L[P+1],B=L[P+2],C.set(G,F,B),G=L[P+3],F=L[P+4],B=L[P+5],D.set(G,F,B),G=L[P+6],F=L[P+7],B=L[P+8],o.set(G,F,B),E.subVectors(o,D),m.subVectors(C,D),E.cross(m),K[P]=E.x,K[P+1]=E.y,K[P+2]=E.z,K[P+3]=E.x,K[P+4]=E.y,K[P+5]=E.z,K[P+6]=E.x,K[P+7]=E.y,K[P+8]=E.z}}this.normalizeNormals();this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var h=this.attributes.normal.array,g,l,k,j=0,i=h.length;j<i;j+=3){g=h[j],l=h[j+1],k=h[j+2],g=1/Math.sqrt(g*g+l*l+k*k),h[j]*=g,h[j+1]*=g,h[j+2]*=g}},computeTangents:function(){function aS(e,d,f){aD=aP[3*e];aE=aP[3*e+1];aF=aP[3*e+2];aB=aP[3*d];aG=aP[3*d+1];aA=aP[3*d+2];ay=aP[3*f];aC=aP[3*f+1];ax=aP[3*f+2];av=aN[2*e];am=aN[2*e+1];aj=aN[2*d];ag=aN[2*d+1];ak=aN[2*f];ah=aN[2*f+1];af=aB-aD;aa=ay-aD;ad=aG-aE;aw=aC-aE;ai=aA-aF;al=ax-aF;an=aj-av;ac=ak-av;Z=ag-am;i=ah-am;X=1/(an*i-ac*Z);au.set((i*af-Z*aa)*X,(i*ad-Z*aw)*X,(i*ai-Z*al)*X);m.set((an*aa-ac*af)*X,(an*aw-ac*ad)*X,(an*al-ac*ai)*X);aK[e].add(au);aK[d].add(au);aK[f].add(au);aJ[e].add(m);aJ[d].add(m);aJ[f].add(m)}function aR(b){P.x=aO[3*b];P.y=aO[3*b+1];P.z=aO[3*b+2];ar.copy(P);M=aK[b];o.copy(M);o.sub(P.multiplyScalar(P.dot(M))).normalize();aH.crossVectors(ar,M);az=aH.dot(aJ[b]);U=0>az?-1:1;aL[4*b]=o.x;aL[4*b+1]=o.y;aL[4*b+2]=o.z;aL[4*b+3]=U}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv){console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()")}else{var aQ=this.attributes.index.array,aP=this.attributes.position.array,aO=this.attributes.normal.array,aN=this.attributes.uv.array,aM=aP.length/3;void 0===this.attributes.tangent&&(this.attributes.tangent={itemSize:4,array:new Float32Array(4*aM)});for(var aL=this.attributes.tangent.array,aK=[],aJ=[],aI=0;aI<aM;aI++){aK[aI]=new THREE.Vector3,aJ[aI]=new THREE.Vector3}var aD,aE,aF,aB,aG,aA,ay,aC,ax,av,am,aj,ag,ak,ah,af,aa,ad,aw,ai,al,an,ac,Z,i,X,au=new THREE.Vector3,m=new THREE.Vector3,ap,ae,ao,j,ab,at=this.offsets,aI=0;for(ae=at.length;aI<ae;++aI){ap=at[aI].start;ao=at[aI].count;var aq=at[aI].index,aM=ap;for(ap+=ao;aM<ap;aM+=3){ao=aq+aQ[aM],j=aq+aQ[aM+1],ab=aq+aQ[aM+2],aS(ao,j,ab)}}var o=new THREE.Vector3,aH=new THREE.Vector3,P=new THREE.Vector3,ar=new THREE.Vector3,U,M,az,aI=0;for(ae=at.length;aI<ae;++aI){for(ap=at[aI].start,ao=at[aI].count,aq=at[aI].index,aM=ap,ap+=ao;aM<ap;aM+=3){ao=aq+aQ[aM],j=aq+aQ[aM+1],ab=aq+aQ[aM+2],aR(ao),aR(j),aR(ab)}}}},computeOffsets:function(H){var G=H;void 0===H&&(G=65535);Date.now();H=this.attributes.index.array;for(var F=this.attributes.position.array,E=H.length/3,D=new Uint16Array(H.length),C=0,B=0,A=[{start:0,count:0,index:0}],v=A[0],t=0,o=0,J=new Int32Array(6),i=new Int32Array(F.length),j=new Int32Array(F.length),I=0;I<F.length;I++){i[I]=-1,j[I]=-1}for(F=0;F<E;F++){for(var m=o=0;3>m;m++){I=H[3*F+m],-1==i[I]?(J[2*m]=I,J[2*m+1]=-1,o++):i[I]<v.index?(J[2*m]=I,J[2*m+1]=-1,t++):(J[2*m]=I,J[2*m+1]=i[I])}if(B+o>v.index+G){for(v={start:C,count:0,index:B},A.push(v),o=0;6>o;o+=2){m=J[o+1],-1<m&&m<v.index&&(J[o+1]=-1)}}for(o=0;6>o;o+=2){I=J[o],m=J[o+1],-1===m&&(m=B++),i[I]=m,j[m]=I,D[C++]=m-v.index,v.count++}}this.reorderBuffers(D,j,B);return this.offsets=A},reorderBuffers:function(v,u,t){var s={},r=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],q;for(q in this.attributes){if("index"!=q){for(var p=this.attributes[q].array,o=0,m=r.length;o<m;o++){var j=r[o];if(p instanceof j){s[q]=new j(this.attributes[q].itemSize*t);break}}}}for(r=0;r<t;r++){for(q in p=u[r],this.attributes){if("index"!=q){for(var o=this.attributes[q].array,m=this.attributes[q].itemSize,j=s[q],i=0;i<m;i++){j[r*m+i]=o[p*m+i]}}}}this.attributes.index.array=v;for(q in this.attributes){"index"!=q&&(this.attributes[q].array=s[q],this.attributes[q].numItems=this.attributes[q].itemSize*t)}},clone:function(){var j=new THREE.BufferGeometry,i=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],p;for(p in this.attributes){for(var o=this.attributes[p],n=o.array,m={itemSize:o.itemSize,array:null},o=0,l=i.length;o<l;o++){var k=i[o];if(n instanceof k){m.array=new k(n);break}}j.attributes[p]=m}o=0;for(l=this.offsets.length;o<l;o++){i=this.offsets[o],j.offsets.push({start:i.start,index:i.index,count:i.count})}return j},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.Geometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(i){for(var h=(new THREE.Matrix3).getNormalMatrix(i),n=0,m=this.vertices.length;n<m;n++){this.vertices[n].applyMatrix4(i)}n=0;for(m=this.faces.length;n<m;n++){var l=this.faces[n];l.normal.applyMatrix3(h).normalize();for(var k=0,j=l.vertexNormals.length;k<j;k++){l.vertexNormals[k].applyMatrix3(h).normalize()}l.centroid.applyMatrix4(i)}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox();this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},computeCentroids:function(){var e,d,f;e=0;for(d=this.faces.length;e<d;e++){f=this.faces[e],f.centroid.set(0,0,0),f.centroid.add(this.vertices[f.a]),f.centroid.add(this.vertices[f.b]),f.centroid.add(this.vertices[f.c]),f.centroid.divideScalar(3)}},computeFaceNormals:function(){for(var i=new THREE.Vector3,h=new THREE.Vector3,n=0,m=this.faces.length;n<m;n++){var l=this.faces[n],k=this.vertices[l.a],j=this.vertices[l.b];i.subVectors(this.vertices[l.c],j);h.subVectors(k,j);i.cross(h);i.normalize();l.normal.copy(i)}},computeVertexNormals:function(r){var q,p,o;o=Array(this.vertices.length);q=0;for(p=this.vertices.length;q<p;q++){o[q]=new THREE.Vector3}if(r){var n,m,l,j=new THREE.Vector3,i=new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r],n=this.vertices[p.a],m=this.vertices[p.b],l=this.vertices[p.c],j.subVectors(l,m),i.subVectors(n,m),j.cross(i),o[p.a].add(j),o[p.b].add(j),o[p.c].add(j)}}else{for(r=0,q=this.faces.length;r<q;r++){p=this.faces[r],o[p.a].add(p.normal),o[p.b].add(p.normal),o[p.c].add(p.normal)}}q=0;for(p=this.vertices.length;q<p;q++){o[q].normalize()}r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r],p.vertexNormals[0]=o[p.a].clone(),p.vertexNormals[1]=o[p.b].clone(),p.vertexNormals[2]=o[p.c].clone()}},computeMorphNormals:function(){var r,q,p,o,n;p=0;for(o=this.faces.length;p<o;p++){for(n=this.faces[p],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),r=0,q=n.vertexNormals.length;r<q;r++){n.__originalVertexNormals[r]?n.__originalVertexNormals[r].copy(n.vertexNormals[r]):n.__originalVertexNormals[r]=n.vertexNormals[r].clone()}}var m=new THREE.Geometry;m.faces=this.faces;r=0;for(q=this.morphTargets.length;r<q;r++){if(!this.morphNormals[r]){this.morphNormals[r]={};this.morphNormals[r].faceNormals=[];this.morphNormals[r].vertexNormals=[];n=this.morphNormals[r].faceNormals;var l=this.morphNormals[r].vertexNormals,j,i;p=0;for(o=this.faces.length;p<o;p++){j=new THREE.Vector3,i={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},n.push(j),l.push(i)}}l=this.morphNormals[r];m.vertices=this.morphTargets[r].vertices;m.computeFaceNormals();m.computeVertexNormals();p=0;for(o=this.faces.length;p<o;p++){n=this.faces[p],j=l.faceNormals[p],i=l.vertexNormals[p],j.copy(n.normal),i.a.copy(n.vertexNormals[0]),i.b.copy(n.vertexNormals[1]),i.c.copy(n.vertexNormals[2])}}p=0;for(o=this.faces.length;p<o;p++){n=this.faces[p],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals}},computeTangents:function(){var U,T,S,R,Q,P,O,N,M,L,K,F,G,I,A,J,o,m=[],D=[];S=new THREE.Vector3;var j=new THREE.Vector3,i=new THREE.Vector3,H=new THREE.Vector3,C=new THREE.Vector3;U=0;for(T=this.vertices.length;U<T;U++){m[U]=new THREE.Vector3,D[U]=new THREE.Vector3}U=0;for(T=this.faces.length;U<T;U++){Q=this.faces[U],P=this.faceVertexUvs[0][U],R=Q.a,o=Q.b,Q=Q.c,O=this.vertices[R],N=this.vertices[o],M=this.vertices[Q],L=P[0],K=P[1],F=P[2],P=N.x-O.x,G=M.x-O.x,I=N.y-O.y,A=M.y-O.y,N=N.z-O.z,O=M.z-O.z,M=K.x-L.x,J=F.x-L.x,K=K.y-L.y,L=F.y-L.y,F=1/(M*L-J*K),S.set((L*P-K*G)*F,(L*I-K*A)*F,(L*N-K*O)*F),j.set((M*G-J*P)*F,(M*A-J*I)*F,(M*O-J*N)*F),m[R].add(S),m[o].add(S),m[Q].add(S),D[R].add(j),D[o].add(j),D[Q].add(j)}j=["a","b","c","d"];U=0;for(T=this.faces.length;U<T;U++){for(Q=this.faces[U],S=0;S<Math.min(Q.vertexNormals.length,3);S++){C.copy(Q.vertexNormals[S]),R=Q[j[S]],o=m[R],i.copy(o),i.sub(C.multiplyScalar(C.dot(o))).normalize(),H.crossVectors(Q.vertexNormals[S],o),R=H.dot(D[R]),R=0>R?-1:1,Q.vertexTangents[S]=new THREE.Vector4(i.x,i.y,i.z,R)}}this.hasTangents=!0},computeLineDistances:function(){for(var f=0,e=this.vertices,h=0,g=e.length;h<g;h++){0<h&&(f+=e[h].distanceTo(e[h-1])),this.lineDistances[h]=f}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},mergeVertices:function(){var i={},h=[],n=[],m,l=Math.pow(10,4),k,j;k=0;for(j=this.vertices.length;k<j;k++){m=this.vertices[k],m=Math.round(m.x*l)+"_"+Math.round(m.y*l)+"_"+Math.round(m.z*l),void 0===i[m]?(i[m]=k,h.push(this.vertices[k]),n[k]=h.length-1):n[k]=n[i[m]]}i=[];k=0;for(j=this.faces.length;k<j;k++){for(l=this.faces[k],l.a=n[l.a],l.b=n[l.b],l.c=n[l.c],l=[l.a,l.b,l.c],m=0;3>m;m++){if(l[m]==l[(m+1)%3]){i.push(k);break}}}for(k=i.length-1;0<=k;k--){for(l=i[k],this.faces.splice(l,1),n=0,j=this.faceVertexUvs.length;n<j;n++){this.faceVertexUvs[n].splice(l,1)}}k=this.vertices.length-h.length;this.vertices=h;return k},makeGroups:function(){var b=0;return function(r){var q,p,o,n,m={},j=this.morphTargets.length,i=this.morphNormals.length;this.geometryGroups={};q=0;for(p=this.faces.length;q<p;q++){o=this.faces[q],o=r?o.materialIndex:0,o in m||(m[o]={hash:o,counter:0}),n=m[o].hash+"_"+m[o].counter,n in this.geometryGroups||(this.geometryGroups[n]={faces3:[],materialIndex:o,vertices:0,numMorphTargets:j,numMorphNormals:i}),65535<this.geometryGroups[n].vertices+3&&(m[o].counter+=1,n=m[o].hash+"_"+m[o].counter,n in this.geometryGroups||(this.geometryGroups[n]={faces3:[],materialIndex:o,vertices:0,numMorphTargets:j,numMorphNormals:i})),this.geometryGroups[n].faces3.push(q),this.geometryGroups[n].vertices+=3}this.geometryGroupsList=[];for(var a in this.geometryGroups){this.geometryGroups[a].id=b++,this.geometryGroupsList.push(this.geometryGroups[a])}}}(),clone:function(){for(var j=new THREE.Geometry,i=this.vertices,p=0,o=i.length;p<o;p++){j.vertices.push(i[p].clone())}i=this.faces;p=0;for(o=i.length;p<o;p++){j.faces.push(i[p].clone())}i=this.faceVertexUvs[0];p=0;for(o=i.length;p<o;p++){for(var n=i[p],m=[],l=0,k=n.length;l<k;l++){m.push(new THREE.Vector2(n[l].x,n[l].y))}j.faceVertexUvs[0].push(m)}return j},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;THREE.Geometry2=function(b){THREE.BufferGeometry.call(this);this.vertices=this.addAttribute("position",Float32Array,b,3).array;this.normals=this.addAttribute("normal",Float32Array,b,3).array;this.uvs=this.addAttribute("uv",Float32Array,b,2).array;this.boundingSphere=this.boundingBox=null};THREE.Geometry2.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(){var b=new THREE.Matrix4;return function(a){b.lookAt(this.position,a,this.up);this.quaternion.setFromRotationMatrix(b)}}();THREE.Camera.prototype.clone=function(b){void 0===b&&(b=new THREE.Camera);THREE.Object3D.prototype.clone.call(this,b);b.matrixWorldInverse.copy(this.matrixWorldInverse);b.projectionMatrix.copy(this.projectionMatrix);return b};THREE.OrthographicCamera=function(h,g,l,k,j,i){THREE.Camera.call(this);this.left=h;this.right=g;this.top=l;this.bottom=k;this.near=void 0!==j?j:0.1;this.far=void 0!==i?i:2000;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.OrthographicCamera.prototype.clone=function(){var b=new THREE.OrthographicCamera;THREE.Camera.prototype.clone.call(this,b);b.left=this.left;b.right=this.right;b.top=this.top;b.bottom=this.bottom;b.near=this.near;b.far=this.far;return b};THREE.PerspectiveCamera=function(f,e,h,g){THREE.Camera.call(this);this.fov=void 0!==f?f:50;this.aspect=void 0!==e?e:1;this.near=void 0!==h?h:0.1;this.far=void 0!==g?g:2000;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(d,c){void 0===c&&(c=24);this.fov=2*THREE.Math.radToDeg(Math.atan(c/(2*d)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(h,g,l,k,j,i){this.fullWidth=h;this.fullHeight=g;this.x=l;this.y=k;this.width=j;this.height=i;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var f=this.fullWidth/this.fullHeight,e=Math.tan(THREE.Math.degToRad(0.5*this.fov))*this.near,h=-e,g=f*h,f=Math.abs(f*e-g),h=Math.abs(e-h);this.projectionMatrix.makeFrustum(g+this.x*f/this.fullWidth,g+(this.x+this.width)*f/this.fullWidth,e-(this.y+this.height)*h/this.fullHeight,e-this.y*h/this.fullHeight,this.near,this.far)}else{this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)}};THREE.PerspectiveCamera.prototype.clone=function(){var b=new THREE.PerspectiveCamera;THREE.Camera.prototype.clone.call(this,b);b.fov=this.fov;b.aspect=this.aspect;b.near=this.near;b.far=this.far;return b};THREE.Light=function(b){THREE.Object3D.call(this);this.color=new THREE.Color(b)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.clone=function(b){void 0===b&&(b=new THREE.Light);THREE.Object3D.prototype.clone.call(this,b);b.color.copy(this.color);return b};THREE.AmbientLight=function(b){THREE.Light.call(this,b)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.clone=function(){var b=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,b);return b};THREE.AreaLight=function(d,c){THREE.Light.call(this,d);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==c?c:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=0.5;this.quadraticAttenuation=0.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight=function(d,c){THREE.Light.call(this,d);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==c?c:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5000;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1000);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.clone=function(){var b=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,b);b.target=this.target.clone();b.intensity=this.intensity;b.castShadow=this.castShadow;b.onlyShadow=this.onlyShadow;return b};THREE.HemisphereLight=function(e,d,f){THREE.Light.call(this,e);this.position.set(0,100,0);this.groundColor=new THREE.Color(d);this.intensity=void 0!==f?f:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.clone=function(){var b=new THREE.HemisphereLight;THREE.Light.prototype.clone.call(this,b);b.groundColor.copy(this.groundColor);b.intensity=this.intensity;return b};THREE.PointLight=function(e,d,f){THREE.Light.call(this,e);this.intensity=void 0!==d?d:1;this.distance=void 0!==f?f:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.clone=function(){var b=new THREE.PointLight;THREE.Light.prototype.clone.call(this,b);b.intensity=this.intensity;b.distance=this.distance;return b};THREE.SpotLight=function(g,f,j,i,h){THREE.Light.call(this,g);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==f?f:1;this.distance=void 0!==j?j:0;this.angle=void 0!==i?i:Math.PI/3;this.exponent=void 0!==h?h:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5000;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.clone=function(){var b=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,b);b.target=this.target.clone();b.intensity=this.intensity;b.distance=this.distance;b.angle=this.angle;b.exponent=this.exponent;b.castShadow=this.castShadow;b.onlyShadow=this.onlyShadow;return b};THREE.Loader=function(b){this.statusDomElement=(this.showStatus=b)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var b=document.createElement("div");b.style.position="absolute";b.style.right="0px";b.style.top="0px";b.style.fontSize="0.8em";b.style.textAlign="left";b.style.background="rgba(0,0,0,0.25)";b.style.color="#fff";b.style.width="120px";b.style.padding="0.5em 0.5em 0.5em 0.5em";b.style.zIndex=1000;b.innerHTML="Loading ...";return b},updateProgress:function(d){var c="Loaded ",c=d.total?c+((100*d.loaded/d.total).toFixed(0)+"%"):c+((d.loaded/1000).toFixed(2)+" KB");this.statusDomElement.innerHTML=c},extractUrlBase:function(b){b=b.split("/");if(1===b.length){return"./"}b.pop();return b.join("/")+"/"},initMaterials:function(f,e){for(var h=[],g=0;g<f.length;++g){h[g]=THREE.Loader.prototype.createMaterial(f[g],e)}return h},needsTangents:function(e){for(var d=0,f=e.length;d<f;d++){if(e[d] instanceof THREE.ShaderMaterial){return !0}}return !1},createMaterial:function(v,u){function t(b){b=Math.log(b)/Math.LN2;return Math.floor(b)==b}function s(b){b=Math.log(b)/Math.LN2;return Math.pow(2,Math.round(b))}function r(d,c){var f=new Image;f.onload=function(){if(t(this.width)&&t(this.height)){d.image=this}else{var a=s(this.width),g=s(this.height);d.image.width=a;d.image.height=g;d.image.getContext("2d").drawImage(this,0,0,a,g)}d.needsUpdate=!0};void 0!==o.crossOrigin&&(f.crossOrigin=o.crossOrigin);f.src=c}function q(H,G,E,D,C,B,A){var e=/\.dds$/i.test(E),b=u+E;if(e){var F=THREE.ImageUtils.loadCompressedTexture(b);H[G]=F}else{F=document.createElement("canvas"),H[G]=new THREE.Texture(F)}H[G].sourceFile=E;D&&(H[G].repeat.set(D[0],D[1]),1!==D[0]&&(H[G].wrapS=THREE.RepeatWrapping),1!==D[1]&&(H[G].wrapT=THREE.RepeatWrapping));C&&H[G].offset.set(C[0],C[1]);B&&(E={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==E[B[0]]&&(H[G].wrapS=E[B[0]]),void 0!==E[B[1]]&&(H[G].wrapT=E[B[1]]));A&&(H[G].anisotropy=A);e||r(H[G],b)}function p(b){return(255*b[0]<<16)+(255*b[1]<<8)+255*b[2]}var o=this,m="MeshLambertMaterial",j={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(v.shading){var i=v.shading.toLowerCase();"phong"===i?m="MeshPhongMaterial":"basic"===i&&(m="MeshBasicMaterial")}void 0!==v.blending&&void 0!==THREE[v.blending]&&(j.blending=THREE[v.blending]);if(void 0!==v.transparent||1>v.opacity){j.transparent=v.transparent}void 0!==v.depthTest&&(j.depthTest=v.depthTest);void 0!==v.depthWrite&&(j.depthWrite=v.depthWrite);void 0!==v.visible&&(j.visible=v.visible);void 0!==v.flipSided&&(j.side=THREE.BackSide);void 0!==v.doubleSided&&(j.side=THREE.DoubleSide);void 0!==v.wireframe&&(j.wireframe=v.wireframe);void 0!==v.vertexColors&&("face"===v.vertexColors?j.vertexColors=THREE.FaceColors:v.vertexColors&&(j.vertexColors=THREE.VertexColors));v.colorDiffuse?j.color=p(v.colorDiffuse):v.DbgColor&&(j.color=v.DbgColor);v.colorSpecular&&(j.specular=p(v.colorSpecular));v.colorAmbient&&(j.ambient=p(v.colorAmbient));v.transparency&&(j.opacity=v.transparency);v.specularCoef&&(j.shininess=v.specularCoef);v.mapDiffuse&&u&&q(j,"map",v.mapDiffuse,v.mapDiffuseRepeat,v.mapDiffuseOffset,v.mapDiffuseWrap,v.mapDiffuseAnisotropy);v.mapLight&&u&&q(j,"lightMap",v.mapLight,v.mapLightRepeat,v.mapLightOffset,v.mapLightWrap,v.mapLightAnisotropy);v.mapBump&&u&&q(j,"bumpMap",v.mapBump,v.mapBumpRepeat,v.mapBumpOffset,v.mapBumpWrap,v.mapBumpAnisotropy);v.mapNormal&&u&&q(j,"normalMap",v.mapNormal,v.mapNormalRepeat,v.mapNormalOffset,v.mapNormalWrap,v.mapNormalAnisotropy);v.mapSpecular&&u&&q(j,"specularMap",v.mapSpecular,v.mapSpecularRepeat,v.mapSpecularOffset,v.mapSpecularWrap,v.mapSpecularAnisotropy);v.mapBumpScale&&(j.bumpScale=v.mapBumpScale);v.mapNormal?(m=THREE.ShaderLib.normalmap,i=THREE.UniformsUtils.clone(m.uniforms),i.tNormal.value=j.normalMap,v.mapNormalFactor&&i.uNormalScale.value.set(v.mapNormalFactor,v.mapNormalFactor),j.map&&(i.tDiffuse.value=j.map,i.enableDiffuse.value=!0),j.specularMap&&(i.tSpecular.value=j.specularMap,i.enableSpecular.value=!0),j.lightMap&&(i.tAO.value=j.lightMap,i.enableAO.value=!0),i.diffuse.value.setHex(j.color),i.specular.value.setHex(j.specular),i.ambient.value.setHex(j.ambient),i.shininess.value=j.shininess,void 0!==j.opacity&&(i.opacity.value=j.opacity),m=new THREE.ShaderMaterial({fragmentShader:m.fragmentShader,vertexShader:m.vertexShader,uniforms:i,lights:!0,fog:!0}),j.transparent&&(m.transparent=!0)):m=new THREE[m](j);void 0!==v.DbgName&&(m.name=v.DbgName);return m}};THREE.XHRLoader=function(b){this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(h,g,l,k){var j=this,i=new XMLHttpRequest;void 0!==g&&i.addEventListener("load",function(a){g(a.target.responseText);j.manager.itemEnd(h)},!1);void 0!==l&&i.addEventListener("progress",function(b){l(b)},!1);void 0!==k&&i.addEventListener("error",function(b){k(b)},!1);void 0!==this.crossOrigin&&(i.crossOrigin=this.crossOrigin);i.open("GET",h,!0);i.send(null);j.manager.itemStart(h)},setCrossOrigin:function(b){this.crossOrigin=b}};THREE.ImageLoader=function(b){this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(h,g,l,k){var j=this,i=document.createElement("img");void 0!==g&&i.addEventListener("load",function(a){j.manager.itemEnd(h);g(this)},!1);void 0!==l&&i.addEventListener("progress",function(b){l(b)},!1);void 0!==k&&i.addEventListener("error",function(b){k(b)},!1);void 0!==this.crossOrigin&&(i.crossOrigin=this.crossOrigin);i.src=h;j.manager.itemStart(h);return i},setCrossOrigin:function(b){this.crossOrigin=b}};THREE.JSONLoader=function(b){THREE.Loader.call(this,b);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(e,d,f){f=f&&"string"===typeof f?f:this.extractUrlBase(e);this.onLoadStart();this.loadAjaxJSON(this,e,d,f)};THREE.JSONLoader.prototype.loadAjaxJSON=function(i,h,n,m,l){var k=new XMLHttpRequest,j=0;k.onreadystatechange=function(){if(k.readyState===k.DONE){if(200===k.status||0===k.status){if(k.responseText){var a=JSON.parse(k.responseText);if("scene"===a.metadata.type){console.error('THREE.JSONLoader: "'+h+'" seems to be a Scene. Use THREE.SceneLoader instead.');return}a=i.parse(a,m);n(a.geometry,a.materials)}else{console.error('THREE.JSONLoader: "'+h+'" seems to be unreachable or the file is empty.')}i.onLoadComplete()}else{console.error("THREE.JSONLoader: Couldn't load \""+h+'" ('+k.status+")")}}else{k.readyState===k.LOADING?l&&(0===j&&(j=k.getResponseHeader("Content-Length")),l({total:j,loaded:k.responseText.length})):k.readyState===k.HEADERS_RECEIVED&&void 0!==l&&(j=k.getResponseHeader("Content-Length"))}};k.open("GET",h,!0);k.withCredentials=this.withCredentials;k.send(null)};THREE.JSONLoader.prototype.parse=function(f,e){var h=new THREE.Geometry,g=void 0!==f.scale?1/f.scale:1;(function(M){var L,K,J,I,H,G,A,C,E,m,F,j,i,o=f.faces;G=f.vertices;var c=f.normals,a=f.colors,D=0;if(void 0!==f.uvs){for(L=0;L<f.uvs.length;L++){f.uvs[L].length&&D++}for(L=0;L<D;L++){h.faceVertexUvs[L]=[]}}I=0;for(H=G.length;I<H;){L=new THREE.Vector3,L.x=G[I++]*M,L.y=G[I++]*M,L.z=G[I++]*M,h.vertices.push(L)}I=0;for(H=o.length;I<H;){if(M=o[I++],E=M&1,J=M&2,L=M&8,A=M&16,m=M&32,G=M&64,M&=128,E){E=new THREE.Face3;E.a=o[I];E.b=o[I+1];E.c=o[I+3];F=new THREE.Face3;F.a=o[I+1];F.b=o[I+2];F.c=o[I+3];I+=4;J&&(J=o[I++],E.materialIndex=J,F.materialIndex=J);J=h.faces.length;if(L){for(L=0;L<D;L++){for(j=f.uvs[L],h.faceVertexUvs[L][J]=[],h.faceVertexUvs[L][J+1]=[],K=0;4>K;K++){C=o[I++],i=j[2*C],C=j[2*C+1],i=new THREE.Vector2(i,C),2!==K&&h.faceVertexUvs[L][J].push(i),0!==K&&h.faceVertexUvs[L][J+1].push(i)}}}A&&(A=3*o[I++],E.normal.set(c[A++],c[A++],c[A]),F.normal.copy(E.normal));if(m){for(L=0;4>L;L++){A=3*o[I++],m=new THREE.Vector3(c[A++],c[A++],c[A]),2!==L&&E.vertexNormals.push(m),0!==L&&F.vertexNormals.push(m)}}G&&(G=o[I++],G=a[G],E.color.setHex(G),F.color.setHex(G));if(M){for(L=0;4>L;L++){G=o[I++],G=a[G],2!==L&&E.vertexColors.push(new THREE.Color(G)),0!==L&&F.vertexColors.push(new THREE.Color(G))}}h.faces.push(E);h.faces.push(F)}else{E=new THREE.Face3;E.a=o[I++];E.b=o[I++];E.c=o[I++];J&&(J=o[I++],E.materialIndex=J);J=h.faces.length;if(L){for(L=0;L<D;L++){for(j=f.uvs[L],h.faceVertexUvs[L][J]=[],K=0;3>K;K++){C=o[I++],i=j[2*C],C=j[2*C+1],i=new THREE.Vector2(i,C),h.faceVertexUvs[L][J].push(i)}}}A&&(A=3*o[I++],E.normal.set(c[A++],c[A++],c[A]));if(m){for(L=0;3>L;L++){A=3*o[I++],m=new THREE.Vector3(c[A++],c[A++],c[A]),E.vertexNormals.push(m)}}G&&(G=o[I++],E.color.setHex(a[G]));if(M){for(L=0;3>L;L++){G=o[I++],E.vertexColors.push(new THREE.Color(a[G]))}}h.faces.push(E)}}})(g);(function(){if(f.skinWeights){for(var a=0,c=f.skinWeights.length;a<c;a+=2){h.skinWeights.push(new THREE.Vector4(f.skinWeights[a],f.skinWeights[a+1],0,0))}}if(f.skinIndices){for(a=0,c=f.skinIndices.length;a<c;a+=2){h.skinIndices.push(new THREE.Vector4(f.skinIndices[a],f.skinIndices[a+1],0,0))}}h.bones=f.bones;h.bones&&0<h.bones.length&&(h.skinWeights.length!==h.skinIndices.length||h.skinIndices.length!==h.vertices.length)&&console.warn("When skinning, number of vertices ("+h.vertices.length+"), skinIndices ("+h.skinIndices.length+"), and skinWeights ("+h.skinWeights.length+") should match.");h.animation=f.animation;h.animations=f.animations})();(function(a){if(void 0!==f.morphTargets){var p,o,m,i,c,q;p=0;for(o=f.morphTargets.length;p<o;p++){for(h.morphTargets[p]={},h.morphTargets[p].name=f.morphTargets[p].name,h.morphTargets[p].vertices=[],c=h.morphTargets[p].vertices,q=f.morphTargets[p].vertices,m=0,i=q.length;m<i;m+=3){var j=new THREE.Vector3;j.x=q[m]*a;j.y=q[m+1]*a;j.z=q[m+2]*a;c.push(j)}}}if(void 0!==f.morphColors){for(p=0,o=f.morphColors.length;p<o;p++){for(h.morphColors[p]={},h.morphColors[p].name=f.morphColors[p].name,h.morphColors[p].colors=[],i=h.morphColors[p].colors,c=f.morphColors[p].colors,a=0,m=c.length;a<m;a+=3){q=new THREE.Color(16755200),q.setRGB(c[a],c[a+1],c[a+2]),i.push(q)}}}})(g);h.computeCentroids();h.computeFaceNormals();h.computeBoundingSphere();if(void 0===f.materials){return{geometry:h}}g=this.initMaterials(f.materials,e);this.needsTangents(g)&&h.computeTangents();return{geometry:h,materials:g}};THREE.LoadingManager=function(h,g,l){var k=this,j=0,i=0;this.onLoad=h;this.onProgress=g;this.onError=l;this.itemStart=function(b){i++};this.itemEnd=function(b){j++;if(void 0!==k.onProgress){k.onProgress(b,j,i)}if(j===i&&void 0!==k.onLoad){k.onLoad()}}};THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.BufferGeometryLoader=function(b){this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(g,f,j,i){var h=this;j=new THREE.XHRLoader;j.setCrossOrigin(this.crossOrigin);j.load(g,function(b){f(h.parse(JSON.parse(b)))})},setCrossOrigin:function(b){this.crossOrigin=b},parse:function(h){var g=new THREE.BufferGeometry,l=h.attributes,k=h.offsets;h=h.boundingSphere;for(var j in l){var i=l[j];g.attributes[j]={itemSize:i.itemSize,array:new self[i.type](i.array)}}void 0!==k&&(g.offsets=JSON.parse(JSON.stringify(k)));void 0!==h&&(g.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==h.center?h.center:[0,0,0]),h.radius));return g}};THREE.Geometry2Loader=function(b){this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.Geometry2Loader.prototype={constructor:THREE.Geometry2Loader,load:function(g,f,j,i){var h=this;j=new THREE.XHRLoader;j.setCrossOrigin(this.crossOrigin);j.load(g,function(b){f(h.parse(JSON.parse(b)))})},setCrossOrigin:function(b){this.crossOrigin=b},parse:function(h){var g=new THREE.Geometry2(h.vertices.length/3),l=["vertices","normals","uvs"],k=h.boundingSphere,j;for(j in l){var i=l[j];g[i].set(h[i])}void 0!==k&&(g.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==k.center?k.center:[0,0,0]),k.radius));return g}};THREE.MaterialLoader=function(b){this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(g,f,j,i){var h=this;j=new THREE.XHRLoader;j.setCrossOrigin(this.crossOrigin);j.load(g,function(b){f(h.parse(JSON.parse(b)))})},setCrossOrigin:function(b){this.crossOrigin=b},parse:function(f){var e=new THREE[f.type];void 0!==f.color&&e.color.setHex(f.color);void 0!==f.ambient&&e.ambient.setHex(f.ambient);void 0!==f.emissive&&e.emissive.setHex(f.emissive);void 0!==f.specular&&e.specular.setHex(f.specular);void 0!==f.shininess&&(e.shininess=f.shininess);void 0!==f.vertexColors&&(e.vertexColors=f.vertexColors);void 0!==f.blending&&(e.blending=f.blending);void 0!==f.side&&(e.side=f.side);void 0!==f.opacity&&(e.opacity=f.opacity);void 0!==f.transparent&&(e.transparent=f.transparent);void 0!==f.wireframe&&(e.wireframe=f.wireframe);if(void 0!==f.materials){for(var h=0,g=f.materials.length;h<g;h++){e.materials.push(this.parse(f.materials[h]))}}return e}};THREE.ObjectLoader=function(b){this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(g,f,j,i){var h=this;j=new THREE.XHRLoader(h.manager);j.setCrossOrigin(this.crossOrigin);j.load(g,function(b){f(h.parse(JSON.parse(b)))})},setCrossOrigin:function(b){this.crossOrigin=b},parse:function(e){var d=this.parseGeometries(e.geometries),f=this.parseMaterials(e.materials);return this.parseObject(e.object,d,f)},parseGeometries:function(r){var q={};if(void 0!==r){for(var p=new THREE.JSONLoader,o=new THREE.Geometry2Loader,n=new THREE.BufferGeometryLoader,m=0,l=r.length;m<l;m++){var j,i=r[m];switch(i.type){case"PlaneGeometry":j=new THREE.PlaneGeometry(i.width,i.height,i.widthSegments,i.heightSegments);break;case"BoxGeometry":case"CubeGeometry":j=new THREE.BoxGeometry(i.width,i.height,i.depth,i.widthSegments,i.heightSegments,i.depthSegments);break;case"CircleGeometry":j=new THREE.CircleGeometry(i.radius,i.segments);break;case"CylinderGeometry":j=new THREE.CylinderGeometry(i.radiusTop,i.radiusBottom,i.height,i.radialSegments,i.heightSegments,i.openEnded);break;case"SphereGeometry":j=new THREE.SphereGeometry(i.radius,i.widthSegments,i.heightSegments,i.phiStart,i.phiLength,i.thetaStart,i.thetaLength);break;case"IcosahedronGeometry":j=new THREE.IcosahedronGeometry(i.radius,i.detail);break;case"TorusGeometry":j=new THREE.TorusGeometry(i.radius,i.tube,i.radialSegments,i.tubularSegments,i.arc);break;case"TorusKnotGeometry":j=new THREE.TorusKnotGeometry(i.radius,i.tube,i.radialSegments,i.tubularSegments,i.p,i.q,i.heightScale);break;case"BufferGeometry":j=n.parse(i.data);break;case"Geometry2":j=o.parse(i.data);break;case"Geometry":j=p.parse(i.data).geometry}j.uuid=i.uuid;void 0!==i.name&&(j.name=i.name);q[i.uuid]=j}}return q},parseMaterials:function(i){var h={};if(void 0!==i){for(var n=new THREE.MaterialLoader,m=0,l=i.length;m<l;m++){var k=i[m],j=n.parse(k);j.uuid=k.uuid;void 0!==k.name&&(j.name=k.name);h[k.uuid]=j}}return h},parseObject:function(){var b=new THREE.Matrix4;return function(a,l,k){var j;switch(a.type){case"Scene":j=new THREE.Scene;break;case"PerspectiveCamera":j=new THREE.PerspectiveCamera(a.fov,a.aspect,a.near,a.far);break;case"OrthographicCamera":j=new THREE.OrthographicCamera(a.left,a.right,a.top,a.bottom,a.near,a.far);break;case"AmbientLight":j=new THREE.AmbientLight(a.color);break;case"DirectionalLight":j=new THREE.DirectionalLight(a.color,a.intensity);break;case"PointLight":j=new THREE.PointLight(a.color,a.intensity,a.distance);break;case"SpotLight":j=new THREE.SpotLight(a.color,a.intensity,a.distance,a.angle,a.exponent);break;case"HemisphereLight":j=new THREE.HemisphereLight(a.color,a.groundColor,a.intensity);break;case"Mesh":j=l[a.geometry];var i=k[a.material];void 0===j&&console.error("THREE.ObjectLoader: Undefined geometry "+a.geometry);void 0===i&&console.error("THREE.ObjectLoader: Undefined material "+a.material);j=new THREE.Mesh(j,i);break;case"Sprite":i=k[a.material];void 0===i&&console.error("THREE.ObjectLoader: Undefined material "+a.material);j=new THREE.Sprite(i);break;default:j=new THREE.Object3D}j.uuid=a.uuid;void 0!==a.name&&(j.name=a.name);void 0!==a.matrix?(b.fromArray(a.matrix),b.decompose(j.position,j.quaternion,j.scale)):(void 0!==a.position&&j.position.fromArray(a.position),void 0!==a.rotation&&j.rotation.fromArray(a.rotation),void 0!==a.scale&&j.scale.fromArray(a.scale));void 0!==a.visible&&(j.visible=a.visible);void 0!==a.userData&&(j.userData=a.userData);if(void 0!==a.children){for(var h in a.children){j.add(this.parseObject(a.children[h],l,k))}}return j}}()};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlers={};this.hierarchyHandlers={};this.addGeometryHandler("ascii",THREE.JSONLoader)};THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(g,f,j,i){var h=this;j=new THREE.XHRLoader(h.manager);j.setCrossOrigin(this.crossOrigin);j.load(g,function(a){h.parse(JSON.parse(a),f,g)})},setCrossOrigin:function(b){this.crossOrigin=b},addGeometryHandler:function(d,c){this.geometryHandlers[d]={loaderClass:c}},addHierarchyHandler:function(d,c){this.hierarchyHandlers[d]={loaderClass:c}},parse:function(ap,ao,an){function am(d,c){return"relativeToHTML"==c?d:ac+d}function al(){ak(X.scene,M.objects)}function ak(C,B){var A,u,r,p,k,f;for(f in B){var F=X.objects[f],d=B[f];if(void 0===F){if(d.type&&d.type in aa.hierarchyHandlers){if(void 0===d.loading){A={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1};var E={},D;for(D in d){D in A||(E[D]=d[D])}ae=X.materials[d.material];d.loading=!0;A=aa.hierarchyHandlers[d.type].loaderObject;A.options?A.load(am(d.url,M.urlBaseType),ah(f,C,ae,d)):A.load(am(d.url,M.urlBaseType),ah(f,C,ae,d),E)}}else{if(void 0!==d.geometry){if(U=X.geometries[d.geometry]){F=!1;ae=X.materials[d.material];F=ae instanceof THREE.ShaderMaterial;u=d.position;r=d.rotation;p=d.scale;A=d.matrix;k=d.quaternion;d.material||(ae=new THREE.MeshFaceMaterial(X.face_materials[d.geometry]));ae instanceof THREE.MeshFaceMaterial&&0===ae.materials.length&&(ae=new THREE.MeshFaceMaterial(X.face_materials[d.geometry]));if(ae instanceof THREE.MeshFaceMaterial){for(E=0;E<ae.materials.length;E++){F=F||ae.materials[E] instanceof THREE.ShaderMaterial}}F&&U.computeTangents();d.skin?F=new THREE.SkinnedMesh(U,ae):d.morph?(F=new THREE.MorphAnimMesh(U,ae),void 0!==d.duration&&(F.duration=d.duration),void 0!==d.time&&(F.time=d.time),void 0!==d.mirroredLoop&&(F.mirroredLoop=d.mirroredLoop),ae.morphNormals&&U.computeMorphNormals()):F=new THREE.Mesh(U,ae);F.name=f;A?(F.matrixAutoUpdate=!1,F.matrix.set(A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12],A[13],A[14],A[15])):(F.position.fromArray(u),k?F.quaternion.fromArray(k):F.rotation.fromArray(r),F.scale.fromArray(p));F.visible=d.visible;F.castShadow=d.castShadow;F.receiveShadow=d.receiveShadow;C.add(F);X.objects[f]=F}}else{if("AmbientLight"===d.type||"PointLight"===d.type||"DirectionalLight"===d.type||"SpotLight"===d.type||"HemisphereLight"===d.type||"AreaLight"===d.type){E=d.color;A=d.intensity;u=d.distance;r=d.position;p=d.rotation;switch(d.type){case"AmbientLight":N=new THREE.AmbientLight(E);break;case"PointLight":N=new THREE.PointLight(E,A,u);N.position.fromArray(r);break;case"DirectionalLight":N=new THREE.DirectionalLight(E,A);N.position.fromArray(d.direction);break;case"SpotLight":N=new THREE.SpotLight(E,A,u,1);N.angle=d.angle;N.position.fromArray(r);N.target.set(r[0],r[1]-u,r[2]);N.target.applyEuler(new THREE.Euler(p[0],p[1],p[2],"XYZ"));break;case"HemisphereLight":N=new THREE.DirectionalLight(E,A,u);N.target.set(r[0],r[1]-u,r[2]);N.target.applyEuler(new THREE.Euler(p[0],p[1],p[2],"XYZ"));break;case"AreaLight":N=new THREE.AreaLight(E,A),N.position.fromArray(r),N.width=d.size,N.height=d.size_y}C.add(N);N.name=f;X.lights[f]=N;X.objects[f]=N}else{"PerspectiveCamera"===d.type||"OrthographicCamera"===d.type?(u=d.position,r=d.rotation,k=d.quaternion,"PerspectiveCamera"===d.type?S=new THREE.PerspectiveCamera(d.fov,d.aspect,d.near,d.far):"OrthographicCamera"===d.type&&(S=new THREE.OrthographicCamera(d.left,d.right,d.top,d.bottom,d.near,d.far)),S.name=f,S.position.fromArray(u),void 0!==k?S.quaternion.fromArray(k):void 0!==r&&S.rotation.fromArray(r),C.add(S),X.cameras[f]=S,X.objects[f]=S):(u=d.position,r=d.rotation,p=d.scale,k=d.quaternion,F=new THREE.Object3D,F.name=f,F.position.fromArray(u),k?F.quaternion.fromArray(k):F.rotation.fromArray(r),F.scale.fromArray(p),F.visible=void 0!==d.visible?d.visible:!1,C.add(F),X.objects[f]=F,X.empties[f]=F)}}}if(F){if(void 0!==d.userData){for(var v in d.userData){F.userData[v]=d.userData[v]}}if(void 0!==d.groups){for(E=0;E<d.groups.length;E++){A=d.groups[E],void 0===X.groups[A]&&(X.groups[A]=[]),X.groups[A].push(f)}}}}void 0!==F&&void 0!==d.children&&ak(F,d.children)}}function aj(v,u,t,s,r){var q=r.rotation,p=r.quaternion,n=r.scale;v.position.fromArray(r.position);p?v.quaternion.fromArray(p):v.rotation.fromArray(q);v.scale.fromArray(n);s&&v.traverse(function(b){b.material=s});var e=void 0!==r.visible?r.visible:!0;v.traverse(function(b){b.visible=e});t.add(v);v.name=u;X.objects[u]=v;al()}function ai(b){return function(a,d){a.name=b;X.geometries[b]=a;X.face_materials[b]=d;al();o-=1;aa.onLoadComplete();af()}}function ah(f,e,h,g){return function(a){aj(a.content?a.content:a.dae?a.scene:a,f,e,h,g);o-=1;aa.onLoadComplete();af()}}function ag(b){return function(a,d){a.name=b;X.geometries[b]=a;X.face_materials[b]=d}}function af(){aa.callbackProgress({totalModels:V,totalTextures:P,loadedModels:V-o,loadedTextures:P-ab},X);aa.onLoadProgress();if(0===o&&0===ab){for(var b=0;b<R.length;b++){var f=R[b],e=X.objects[f.targetName];e?f.object.target=e:(f.object.target=new THREE.Object3D,X.scene.add(f.object.target));f.object.target.userData.targetInverse=f.object}ao(X)}}function Y(e,d){d(e);if(void 0!==e.children){for(var f in e.children){Y(e.children[f],d)}}}var aa=this,ac=THREE.Loader.prototype.extractUrlBase(an),U,ae,S,Q,W,N,o,ab,V,P,X,R=[],M=ap,i;for(i in this.geometryHandlers){ap=this.geometryHandlers[i].loaderClass,this.geometryHandlers[i].loaderObject=new ap}for(i in this.hierarchyHandlers){ap=this.hierarchyHandlers[i].loaderClass,this.hierarchyHandlers[i].loaderObject=new ap}ab=o=0;X={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}};M.transform&&(i=M.transform.position,ap=M.transform.rotation,an=M.transform.scale,i&&X.scene.position.fromArray(i),ap&&X.scene.rotation.fromArray(ap),an&&X.scene.scale.fromArray(an),i||ap||an)&&(X.scene.updateMatrix(),X.scene.updateMatrixWorld());i=function(b){return function(){ab-=b;af();aa.onLoadComplete()}};for(var m in M.fogs){ap=M.fogs[m],"linear"===ap.type?Q=new THREE.Fog(0,ap.near,ap.far):"exp2"===ap.type&&(Q=new THREE.FogExp2(0,ap.density)),ap=ap.color,Q.color.setRGB(ap[0],ap[1],ap[2]),X.fogs[m]=Q}for(var J in M.geometries){Q=M.geometries[J],Q.type in this.geometryHandlers&&(o+=1,aa.onLoadStart())}for(var T in M.objects){Y(M.objects[T],function(b){b.type&&b.type in aa.hierarchyHandlers&&(o+=1,aa.onLoadStart())})}V=o;for(J in M.geometries){if(Q=M.geometries[J],"cube"===Q.type){U=new THREE.BoxGeometry(Q.width,Q.height,Q.depth,Q.widthSegments,Q.heightSegments,Q.depthSegments),U.name=J,X.geometries[J]=U}else{if("plane"===Q.type){U=new THREE.PlaneGeometry(Q.width,Q.height,Q.widthSegments,Q.heightSegments),U.name=J,X.geometries[J]=U}else{if("sphere"===Q.type){U=new THREE.SphereGeometry(Q.radius,Q.widthSegments,Q.heightSegments),U.name=J,X.geometries[J]=U}else{if("cylinder"===Q.type){U=new THREE.CylinderGeometry(Q.topRad,Q.botRad,Q.height,Q.radSegs,Q.heightSegs),U.name=J,X.geometries[J]=U}else{if("torus"===Q.type){U=new THREE.TorusGeometry(Q.radius,Q.tube,Q.segmentsR,Q.segmentsT),U.name=J,X.geometries[J]=U}else{if("icosahedron"===Q.type){U=new THREE.IcosahedronGeometry(Q.radius,Q.subdivisions),U.name=J,X.geometries[J]=U}else{if(Q.type in this.geometryHandlers){T={};for(W in Q){"type"!==W&&"url"!==W&&(T[W]=Q[W])}this.geometryHandlers[Q.type].loaderObject.load(am(Q.url,M.urlBaseType),ai(J),T)}else{"embedded"===Q.type&&(T=M.embeds[Q.id],T.metadata=M.metadata,T&&(T=this.geometryHandlers.ascii.loaderObject.parse(T,""),ag(J)(T.geometry,T.materials)))}}}}}}}}for(var Z in M.textures){if(J=M.textures[Z],J.url instanceof Array){for(ab+=J.url.length,W=0;W<J.url.length;W++){aa.onLoadStart()}}else{ab+=1,aa.onLoadStart()}}P=ab;for(Z in M.textures){J=M.textures[Z];void 0!==J.mapping&&void 0!==THREE[J.mapping]&&(J.mapping=new THREE[J.mapping]);if(J.url instanceof Array){T=J.url.length;Q=[];for(W=0;W<T;W++){Q[W]=am(J.url[W],M.urlBaseType)}W=(W=/\.dds$/i.test(Q[0]))?THREE.ImageUtils.loadCompressedTextureCube(Q,J.mapping,i(T)):THREE.ImageUtils.loadTextureCube(Q,J.mapping,i(T))}else{W=/\.dds$/i.test(J.url),T=am(J.url,M.urlBaseType),Q=i(1),W=W?THREE.ImageUtils.loadCompressedTexture(T,J.mapping,Q):THREE.ImageUtils.loadTexture(T,J.mapping,Q),void 0!==THREE[J.minFilter]&&(W.minFilter=THREE[J.minFilter]),void 0!==THREE[J.magFilter]&&(W.magFilter=THREE[J.magFilter]),J.anisotropy&&(W.anisotropy=J.anisotropy),J.repeat&&(W.repeat.set(J.repeat[0],J.repeat[1]),1!==J.repeat[0]&&(W.wrapS=THREE.RepeatWrapping),1!==J.repeat[1]&&(W.wrapT=THREE.RepeatWrapping)),J.offset&&W.offset.set(J.offset[0],J.offset[1]),J.wrap&&(T={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==T[J.wrap[0]]&&(W.wrapS=T[J.wrap[0]]),void 0!==T[J.wrap[1]]&&(W.wrapT=T[J.wrap[1]]))}X.textures[Z]=W}var ad,j;for(ad in M.materials){Z=M.materials[ad];for(j in Z.parameters){"envMap"===j||"map"===j||"lightMap"===j||"bumpMap"===j?Z.parameters[j]=X.textures[Z.parameters[j]]:"shading"===j?Z.parameters[j]="flat"===Z.parameters[j]?THREE.FlatShading:THREE.SmoothShading:"side"===j?Z.parameters[j]="double"==Z.parameters[j]?THREE.DoubleSide:"back"==Z.parameters[j]?THREE.BackSide:THREE.FrontSide:"blending"===j?Z.parameters[j]=Z.parameters[j] in THREE?THREE[Z.parameters[j]]:THREE.NormalBlending:"combine"===j?Z.parameters[j]=Z.parameters[j] in THREE?THREE[Z.parameters[j]]:THREE.MultiplyOperation:"vertexColors"===j?"face"==Z.parameters[j]?Z.parameters[j]=THREE.FaceColors:Z.parameters[j]&&(Z.parameters[j]=THREE.VertexColors):"wrapRGB"===j&&(i=Z.parameters[j],Z.parameters[j]=new THREE.Vector3(i[0],i[1],i[2]))}void 0!==Z.parameters.opacity&&1>Z.parameters.opacity&&(Z.parameters.transparent=!0);Z.parameters.normalMap?(i=THREE.ShaderLib.normalmap,J=THREE.UniformsUtils.clone(i.uniforms),W=Z.parameters.color,T=Z.parameters.specular,Q=Z.parameters.ambient,m=Z.parameters.shininess,J.tNormal.value=X.textures[Z.parameters.normalMap],Z.parameters.normalScale&&J.uNormalScale.value.set(Z.parameters.normalScale[0],Z.parameters.normalScale[1]),Z.parameters.map&&(J.tDiffuse.value=Z.parameters.map,J.enableDiffuse.value=!0),Z.parameters.envMap&&(J.tCube.value=Z.parameters.envMap,J.enableReflection.value=!0,J.reflectivity.value=Z.parameters.reflectivity),Z.parameters.lightMap&&(J.tAO.value=Z.parameters.lightMap,J.enableAO.value=!0),Z.parameters.specularMap&&(J.tSpecular.value=X.textures[Z.parameters.specularMap],J.enableSpecular.value=!0),Z.parameters.displacementMap&&(J.tDisplacement.value=X.textures[Z.parameters.displacementMap],J.enableDisplacement.value=!0,J.uDisplacementBias.value=Z.parameters.displacementBias,J.uDisplacementScale.value=Z.parameters.displacementScale),J.diffuse.value.setHex(W),J.specular.value.setHex(T),J.ambient.value.setHex(Q),J.shininess.value=m,Z.parameters.opacity&&(J.opacity.value=Z.parameters.opacity),ae=new THREE.ShaderMaterial({fragmentShader:i.fragmentShader,vertexShader:i.vertexShader,uniforms:J,lights:!0,fog:!0})):ae=new THREE[Z.type](Z.parameters);ae.name=ad;X.materials[ad]=ae}for(ad in M.materials){if(Z=M.materials[ad],Z.parameters.materials){j=[];for(W=0;W<Z.parameters.materials.length;W++){j.push(X.materials[Z.parameters.materials[W]])}X.materials[ad].materials=j}}al();X.cameras&&M.defaults.camera&&(X.currentCamera=X.cameras[M.defaults.camera]);X.fogs&&M.defaults.fog&&(X.scene.fog=X.fogs[M.defaults.fog]);aa.callbackSync(X);af()}};THREE.TextureLoader=function(b){this.manager=void 0!==b?b:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(f,e,h,g){h=new THREE.ImageLoader(this.manager);h.setCrossOrigin(this.crossOrigin);h.load(f,function(b){b=new THREE.Texture(b);b.needsUpdate=!0;void 0!==e&&e(b)})},setCrossOrigin:function(b){this.crossOrigin=b}};THREE.Material=function(){this.id=THREE.MaterialIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.needsUpdate=this.visible=!0};THREE.Material.prototype={constructor:THREE.Material,setValues:function(f){if(void 0!==f){for(var e in f){var h=f[e];if(void 0===h){console.warn("THREE.Material: '"+e+"' parameter is undefined.")}else{if(e in this){var g=this[e];g instanceof THREE.Color?g.set(h):g instanceof THREE.Vector3&&h instanceof THREE.Vector3?g.copy(h):this[e]="overdraw"==e?Number(h):h}}}}},clone:function(b){void 0===b&&(b=new THREE.Material);b.name=this.name;b.side=this.side;b.opacity=this.opacity;b.transparent=this.transparent;b.blending=this.blending;b.blendSrc=this.blendSrc;b.blendDst=this.blendDst;b.blendEquation=this.blendEquation;b.depthTest=this.depthTest;b.depthWrite=this.depthWrite;b.polygonOffset=this.polygonOffset;b.polygonOffsetFactor=this.polygonOffsetFactor;b.polygonOffsetUnits=this.polygonOffsetUnits;b.alphaTest=this.alphaTest;b.overdraw=this.overdraw;b.visible=this.visible;return b},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(b)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.clone=function(){var b=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.linewidth=this.linewidth;b.linecap=this.linecap;b.linejoin=this.linejoin;b.vertexColors=this.vertexColors;b.fog=this.fog;return b};THREE.LineDashedMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(b)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var b=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.linewidth=this.linewidth;b.scale=this.scale;b.dashSize=this.dashSize;b.gapSize=this.gapSize;b.vertexColors=this.vertexColors;b.fog=this.fog;return b};THREE.MeshBasicMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.clone=function(){var b=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.map=this.map;b.lightMap=this.lightMap;b.specularMap=this.specularMap;b.envMap=this.envMap;b.combine=this.combine;b.reflectivity=this.reflectivity;b.refractionRatio=this.refractionRatio;b.fog=this.fog;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.wireframeLinecap=this.wireframeLinecap;b.wireframeLinejoin=this.wireframeLinejoin;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;return b};THREE.MeshLambertMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.clone=function(){var b=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.ambient.copy(this.ambient);b.emissive.copy(this.emissive);b.wrapAround=this.wrapAround;b.wrapRGB.copy(this.wrapRGB);b.map=this.map;b.lightMap=this.lightMap;b.specularMap=this.specularMap;b.envMap=this.envMap;b.combine=this.combine;b.reflectivity=this.reflectivity;b.refractionRatio=this.refractionRatio;b.fog=this.fog;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.wireframeLinecap=this.wireframeLinecap;b.wireframeLinejoin=this.wireframeLinejoin;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;b.morphNormals=this.morphNormals;return b};THREE.MeshPhongMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.clone=function(){var b=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.ambient.copy(this.ambient);b.emissive.copy(this.emissive);b.specular.copy(this.specular);b.shininess=this.shininess;b.metal=this.metal;b.wrapAround=this.wrapAround;b.wrapRGB.copy(this.wrapRGB);b.map=this.map;b.lightMap=this.lightMap;b.bumpMap=this.bumpMap;b.bumpScale=this.bumpScale;b.normalMap=this.normalMap;b.normalScale.copy(this.normalScale);b.specularMap=this.specularMap;b.envMap=this.envMap;b.combine=this.combine;b.reflectivity=this.reflectivity;b.refractionRatio=this.refractionRatio;b.fog=this.fog;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.wireframeLinecap=this.wireframeLinecap;b.wireframeLinejoin=this.wireframeLinejoin;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;b.morphNormals=this.morphNormals;return b};THREE.MeshDepthMaterial=function(b){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(b)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var b=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,b);b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;return b};THREE.MeshNormalMaterial=function(b){THREE.Material.call(this,b);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(b)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var b=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,b);b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;return b};THREE.MeshFaceMaterial=function(b){this.materials=b instanceof Array?b:[]};THREE.MeshFaceMaterial.prototype.clone=function(){for(var d=new THREE.MeshFaceMaterial,c=0;c<this.materials.length;c++){d.materials.push(this.materials[c].clone())}return d};THREE.ParticleSystemMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(b)};THREE.ParticleSystemMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleSystemMaterial.prototype.clone=function(){var b=new THREE.ParticleSystemMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.map=this.map;b.size=this.size;b.sizeAttenuation=this.sizeAttenuation;b.vertexColors=this.vertexColors;b.fog=this.fog;return b};THREE.ParticleBasicMaterial=THREE.ParticleSystemMaterial;THREE.ShaderMaterial=function(b){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName="position";this.setValues(b)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.clone=function(){var b=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,b);b.fragmentShader=this.fragmentShader;b.vertexShader=this.vertexShader;b.uniforms=THREE.UniformsUtils.clone(this.uniforms);b.attributes=this.attributes;b.defines=this.defines;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.fog=this.fog;b.lights=this.lights;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;b.morphNormals=this.morphNormals;return b};THREE.SpriteMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=!1;this.setValues(b)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.clone=function(){var b=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.map=this.map;b.rotation=this.rotation;b.fog=this.fog;return b};THREE.SpriteCanvasMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(d,e){};this.setValues(b)};THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteCanvasMaterial.prototype.clone=function(){var b=new THREE.SpriteCanvasMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.program=this.program;return b};THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial;THREE.Texture=function(r,q,p,o,n,m,l,j,i){this.id=THREE.TextureIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.image=r;this.mipmaps=[];this.mapping=void 0!==q?q:new THREE.UVMapping;this.wrapS=void 0!==p?p:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==o?o:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==n?n:THREE.LinearFilter;this.minFilter=void 0!==m?m:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==i?i:1;this.format=void 0!==l?l:THREE.RGBAFormat;this.type=void 0!==j?j:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this._needsUpdate=!1;this.onUpdate=null};THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(b){!0===b&&this.update();this._needsUpdate=b},clone:function(b){void 0===b&&(b=new THREE.Texture);b.image=this.image;b.mipmaps=this.mipmaps.slice(0);b.mapping=this.mapping;b.wrapS=this.wrapS;b.wrapT=this.wrapT;b.magFilter=this.magFilter;b.minFilter=this.minFilter;b.anisotropy=this.anisotropy;b.format=this.format;b.type=this.type;b.offset.copy(this.offset);b.repeat.copy(this.repeat);b.generateMipmaps=this.generateMipmaps;b.premultiplyAlpha=this.premultiplyAlpha;b.flipY=this.flipY;b.unpackAlignment=this.unpackAlignment;return b},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CompressedTexture=function(v,u,t,s,r,q,p,o,m,j,i){THREE.Texture.call(this,null,q,p,o,m,j,s,r,i);this.image={width:u,height:t};this.mipmaps=v;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var b=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,b);return b};THREE.DataTexture=function(v,u,t,s,r,q,p,o,m,j,i){THREE.Texture.call(this,null,q,p,o,m,j,s,r,i);this.image={data:v,width:u,height:t}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var b=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,b);return b};THREE.ParticleSystem=function(d,c){THREE.Object3D.call(this);this.geometry=void 0!==d?d:new THREE.Geometry;this.material=void 0!==c?c:new THREE.ParticleSystemMaterial({color:16777215*Math.random()});this.frustumCulled=this.sortParticles=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(b){void 0===b&&(b=new THREE.ParticleSystem(this.geometry,this.material));b.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Line=function(e,d,f){THREE.Object3D.call(this);this.geometry=void 0!==e?e:new THREE.Geometry;this.material=void 0!==d?d:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==f?f:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.clone=function(b){void 0===b&&(b=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Mesh=function(d,c){THREE.Object3D.call(this);this.geometry=void 0!==d?d:new THREE.Geometry;this.material=void 0!==c?c:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var d=0,c=this.geometry.morphTargets.length;d<c;d++){this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[d].name]=d}}};THREE.Mesh.prototype.getMorphTargetIndexByName=function(b){if(void 0!==this.morphTargetDictionary[b]){return this.morphTargetDictionary[b]}console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+b+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(b){void 0===b&&(b=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Bone=function(b){THREE.Object3D.call(this);this.skin=b;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(f,e){this.matrixAutoUpdate&&(e|=this.updateMatrix());if(e||this.matrixWorldNeedsUpdate){f?this.skinMatrix.multiplyMatrices(f,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0}var h,g=this.children.length;for(h=0;h<g;h++){this.children[h].update(this.skinMatrix,e)}};THREE.SkinnedMesh=function(h,g,l){THREE.Mesh.call(this,h,g);this.useVertexTexture=void 0!==l?l:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var k,j,i;if(this.geometry&&void 0!==this.geometry.bones){for(h=0;h<this.geometry.bones.length;h++){l=this.geometry.bones[h],k=l.pos,j=l.rotq,i=l.scl,g=this.addBone(),g.name=l.name,g.position.set(k[0],k[1],k[2]),g.quaternion.set(j[0],j[1],j[2],j[3]),void 0!==i?g.scale.set(i[0],i[1],i[2]):g.scale.set(1,1,1)}for(h=0;h<this.bones.length;h++){l=this.geometry.bones[h],g=this.bones[h],-1===l.parent?this.add(g):this.bones[l.parent].add(g)}h=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=h=256<h?64:64<h?32:16<h?16:8,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*h);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(b){void 0===b&&(b=new THREE.Bone(this));this.bones.push(b);return b};THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var b=new THREE.Matrix4;return function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a){this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1}a=0;for(var f=this.children.length;a<f;a++){var e=this.children[a];e instanceof THREE.Bone?e.update(this.identityMatrix,!1):e.updateMatrixWorld(!0)}if(void 0==this.boneInverses){for(this.boneInverses=[],a=0,f=this.bones.length;a<f;a++){e=new THREE.Matrix4,e.getInverse(this.bones[a].skinMatrix),this.boneInverses.push(e)}}a=0;for(f=this.bones.length;a<f;a++){b.multiplyMatrices(this.bones[a].skinMatrix,this.boneInverses[a]),b.flattenToArrayOffset(this.boneMatrices,16*a)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}();THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);this.normalizeSkinWeights()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry){for(var e=0;e<this.geometry.skinIndices.length;e++){var d=this.geometry.skinWeights[e],f=1/d.lengthManhattan();Infinity!==f?d.multiplyScalar(f):d.set(1)}}};THREE.SkinnedMesh.prototype.clone=function(b){void 0===b&&(b=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,b);return b};THREE.MorphAnimMesh=function(d,c){THREE.Mesh.call(this,d,c);this.duration=1000;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(d,c){this.startKeyframe=d;this.endKeyframe=c;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};THREE.MorphAnimMesh.prototype.parseAnimations=function(){var j=this.geometry;j.animations||(j.animations={});for(var i,p=j.animations,o=/([a-z]+)(\d+)/,n=0,m=j.morphTargets.length;n<m;n++){var l=j.morphTargets[n].name.match(o);if(l&&1<l.length){l=l[1];p[l]||(p[l]={start:Infinity,end:-Infinity});var k=p[l];n<k.start&&(k.start=n);n>k.end&&(k.end=n);i||(i=l)}}j.firstAnimation=i};THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,d,f){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[e]={start:d,end:f}};THREE.MorphAnimMesh.prototype.playAnimation=function(e,d){var f=this.geometry.animations[e];f?(this.setFrameRange(f.start,f.end),this.duration=(f.end-f.start)/d*1000,this.time=0):console.warn("animation["+e+"] undefined")};THREE.MorphAnimMesh.prototype.updateAnimation=function(d){var c=this.duration/this.length;this.time+=this.direction*d;if(this.mirroredLoop){if(this.time>this.duration||0>this.time){this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}}else{this.time%=this.duration,0>this.time&&(this.time+=this.duration)}d=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/c),0,this.length-1);d!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[d]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=d);c=this.time%c/c;this.directionBackwards&&(c=1-c);this.morphTargetInfluences[this.currentKeyframe]=c;this.morphTargetInfluences[this.lastKeyframe]=1-c};THREE.MorphAnimMesh.prototype.clone=function(b){void 0===b&&(b=new THREE.MorphAnimMesh(this.geometry,this.material));b.duration=this.duration;b.mirroredLoop=this.mirroredLoop;b.time=this.time;b.lastKeyframe=this.lastKeyframe;b.currentKeyframe=this.currentKeyframe;b.direction=this.direction;b.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,b);return b};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(e,d){void 0===d&&(d=0);d=Math.abs(d);for(var f=0;f<this.objects.length&&!(d<this.objects[f].distance);f++){}this.objects.splice(f,0,{distance:d,object:e});this.add(e)};THREE.LOD.prototype.getObjectForDistance=function(e){for(var d=1,f=this.objects.length;d<f&&!(e<this.objects[d].distance);d++){}return this.objects[d-1].object};THREE.LOD.prototype.update=function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(f){if(1<this.objects.length){d.setFromMatrixPosition(f.matrixWorld);c.setFromMatrixPosition(this.matrixWorld);f=d.distanceTo(c);this.objects[0].object.visible=!0;for(var b=1,a=this.objects.length;b<a;b++){if(f>=this.objects[b].distance){this.objects[b-1].object.visible=!1,this.objects[b].object.visible=!0}else{break}}for(;b<a;b++){this.objects[b].object.visible=!1}}}}();THREE.LOD.prototype.clone=function(f){void 0===f&&(f=new THREE.LOD);THREE.Object3D.prototype.clone.call(this,f);for(var e=0,h=this.objects.length;e<h;e++){var g=this.objects[e].object.clone();g.visible=0===e;f.addLevel(g,this.objects[e].distance)}return f};THREE.Sprite=function(){var b=new THREE.Geometry2(3);b.vertices.set([-0.5,-0.5,0,0.5,-0.5,0,0.5,0.5,0]);return function(a){THREE.Object3D.call(this);this.geometry=b;this.material=void 0!==a?a:new THREE.SpriteMaterial}}();THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0};THREE.Sprite.prototype.clone=function(b){void 0===b&&(b=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Particle=THREE.Sprite;THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.autoUpdate=!0;this.matrixAutoUpdate=!1;this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.__addObject=function(d){if(d instanceof THREE.Light){-1===this.__lights.indexOf(d)&&this.__lights.push(d),d.target&&void 0===d.target.parent&&this.add(d.target)}else{if(!(d instanceof THREE.Camera||d instanceof THREE.Bone)){this.__objectsAdded.push(d);var c=this.__objectsRemoved.indexOf(d);-1!==c&&this.__objectsRemoved.splice(c,1)}}this.dispatchEvent({type:"objectAdded",object:d});d.dispatchEvent({type:"addedToScene",scene:this});for(c=0;c<d.children.length;c++){this.__addObject(d.children[c])}};THREE.Scene.prototype.__removeObject=function(d){if(d instanceof THREE.Light){var c=this.__lights.indexOf(d);-1!==c&&this.__lights.splice(c,1);if(d.shadowCascadeArray){for(c=0;c<d.shadowCascadeArray.length;c++){this.__removeObject(d.shadowCascadeArray[c])}}}else{d instanceof THREE.Camera||(this.__objectsRemoved.push(d),c=this.__objectsAdded.indexOf(d),-1!==c&&this.__objectsAdded.splice(c,1))}this.dispatchEvent({type:"objectRemoved",object:d});d.dispatchEvent({type:"removedFromScene",scene:this});for(c=0;c<d.children.length;c++){this.__removeObject(d.children[c])}};THREE.Scene.prototype.clone=function(b){void 0===b&&(b=new THREE.Scene);THREE.Object3D.prototype.clone.call(this,b);null!==this.fog&&(b.fog=this.fog.clone());null!==this.overrideMaterial&&(b.overrideMaterial=this.overrideMaterial.clone());b.autoUpdate=this.autoUpdate;b.matrixAutoUpdate=this.matrixAutoUpdate;return b};THREE.Fog=function(e,d,f){this.name="";this.color=new THREE.Color(e);this.near=void 0!==d?d:1;this.far=void 0!==f?f:1000};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(d,c){this.name="";this.color=new THREE.Color(d);this.density=void 0!==c?c:0.00025};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.CanvasRenderer=function(aI){function aH(l,k,s){for(var r=0,q=a6.length;r<q;r++){var p=a6[r];ac.copy(p.color);if(p instanceof THREE.DirectionalLight){var n=bm.setFromMatrixPosition(p.matrixWorld).normalize(),m=k.dot(n);0>=m||(m*=p.intensity,s.add(ac.multiplyScalar(m)))}else{p instanceof THREE.PointLight&&(n=bm.setFromMatrixPosition(p.matrixWorld),m=k.dot(bm.subVectors(n,l).normalize()),0>=m||(m*=0==p.distance?1:1-Math.min(l.distanceTo(n)/p.distance,1),0!=m&&(m*=p.intensity,s.add(ac.multiplyScalar(m)))))}}}function aF(f,e,h,g){an(e);ao(h);ak(g);ap(f.getStyle());af.stroke();be.expandByScalar(2*e)}function aD(b){aj(b.getStyle());af.fill()}function aC(b){aB(b.target)}function aB(h){var g=h.wrapS===THREE.RepeatWrapping,n=h.wrapT===THREE.RepeatWrapping,m=h.image,l=document.createElement("canvas");l.width=m.width;l.height=m.height;var k=l.getContext("2d");k.setTransform(1,0,0,-1,0,m.height);k.drawImage(m,0,0);bq[h.id]=af.createPattern(l,!0===g&&!0===n?"repeat":!0===g&&!1===n?"repeat-x":!1===g&&!0===n?"repeat-y":"no-repeat")}function aA(J,I,H,G,E,D,C,A,B,v,t,e,f){if(!(f instanceof THREE.DataTexture)){!1===f.hasEventListener("update",aC)&&(void 0!==f.image&&0<f.image.width&&aB(f),f.addEventListener("update",aC));var L=bq[f.id];if(void 0!==L){aj(L);var L=f.offset.x/f.repeat.x,K=f.offset.y/f.repeat.y,F=f.image.width*f.repeat.x;f=f.image.height*f.repeat.y;C=(C+L)*F;A=(A+K)*f;H-=J;G-=I;E-=J;D-=I;B=(B+L)*F-C;v=(v+K)*f-A;t=(t+L)*F-C;e=(e+K)*f-A;f=B*e-t*v;0!==f&&(L=1/f,f=(e*H-v*E)*L,v=(e*G-v*D)*L,H=(B*E-t*H)*L,G=(B*D-t*G)*L,J=J-f*C-H*A,I=I-v*C-G*A,af.save(),af.transform(f,v,H,G,J,I),af.fill(),af.restore())}else{aj("rgba(0,0,0,1)"),af.fill()}}}function ay(K,J,I,H,G,F,E,D,C,A,B,v,u){var t,s;t=u.width-1;s=u.height-1;E*=t;D*=s;I-=K;H-=J;G-=K;F-=J;C=C*t-E;A=A*s-D;B=B*t-E;v=v*s-D;s=1/(C*v-B*A);t=(v*I-A*G)*s;A=(v*H-A*F)*s;I=(C*G-B*I)*s;H=(C*F-B*H)*s;K=K-t*E-I*D;J=J-A*E-H*D;af.save();af.transform(t,A,I,H,K,J);af.clip();af.drawImage(u,0,0);af.restore()}function aw(f,e,h,g){P[0]=255*f.r|0;P[1]=255*f.g|0;P[2]=255*f.b|0;P[4]=255*e.r|0;P[5]=255*e.g|0;P[6]=255*e.b|0;P[8]=255*h.r|0;P[9]=255*h.g|0;P[10]=255*h.b|0;P[12]=255*g.r|0;P[13]=255*g.g|0;P[14]=255*g.b|0;br.putImageData(aJ,0,0);M.drawImage(ad,0,0);return aq}function av(h,g,n){var m=g.x-h.x,l=g.y-h.y,k=m*m+l*l;0!==k&&(n/=Math.sqrt(k),m*=n,l*=n,g.x+=m,g.y+=l,h.x-=m,h.y-=l)}function ar(b){bc!==b&&(bc=af.globalAlpha=b)}function am(b){aV!==b&&(b===THREE.NormalBlending?af.globalCompositeOperation="source-over":b===THREE.AdditiveBlending?af.globalCompositeOperation="lighter":b===THREE.SubtractiveBlending&&(af.globalCompositeOperation="darker"),aV=b)}function an(b){aQ!==b&&(aQ=af.lineWidth=b)}function ao(b){bo!==b&&(bo=af.lineCap=b)}function ak(b){aN!==b&&(aN=af.lineJoin=b)}function ap(b){aR!==b&&(aR=af.strokeStyle=b)}function aj(b){aL!==b&&(aL=af.fillStyle=b)}function ai(d,c){if(bh!==d||aZ!==c){af.setLineDash([d,c]),bh=d,aZ=c}}console.log("THREE.CanvasRenderer",THREE.REVISION);var al=THREE.Math.smoothstep;aI=aI||{};var ag=this,ae,bb,a6,a2=new THREE.Projector,a7=void 0!==aI.canvas?aI.canvas:document.createElement("canvas"),a3=a7.width,a0=a7.height,aT=Math.floor(a3/2),aX=Math.floor(a0/2),af=a7.getContext("2d",{alpha:!0===aI.alpha}),a4=new THREE.Color(0),a9=0,bc=1,aV=0,aR=null,aL=null,aQ=null,bo=null,aN=null,bh=null,aZ=0,aa,aM,aU,at;new THREE.RenderableVertex;new THREE.RenderableVertex;var bl,aO,aG,aP,bk,o,bd=new THREE.Color,aE=new THREE.Color,bf=new THREE.Color,bp=new THREE.Color,bg=new THREE.Color,aK=new THREE.Color,j=new THREE.Color,ac=new THREE.Color,bq={},bi,a8,bj,a1,aS,X,i,az,ah,U,ab=new THREE.Box2,a5=new THREE.Box2,be=new THREE.Box2,aW=new THREE.Color,bn=new THREE.Color,ax=new THREE.Color,bm=new THREE.Vector3,aY=new THREE.Vector3,au=new THREE.Matrix3,ad,br,aJ,P,aq,M,Z=16;ad=document.createElement("canvas");ad.width=ad.height=2;br=ad.getContext("2d");br.fillStyle="rgba(0,0,0,1)";br.fillRect(0,0,2,2);aJ=br.getImageData(0,0,2,2);P=aJ.data;aq=document.createElement("canvas");aq.width=aq.height=Z;M=aq.getContext("2d");M.translate(-Z/2,-Z/2);M.scale(Z,Z);Z--;void 0===af.setLineDash&&(af.setLineDash=void 0!==af.mozDash?function(b){af.mozDash=null!==b[0]?b:null}:function(){});this.domElement=a7;this.devicePixelRatio=void 0!==aI.devicePixelRatio?aI.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=function(e,d,f){a3=e*this.devicePixelRatio;a0=d*this.devicePixelRatio;aT=Math.floor(a3/2);aX=Math.floor(a0/2);a7.width=a3;a7.height=a0;1!==this.devicePixelRatio&&!1!==f&&(a7.style.width=e+"px",a7.style.height=d+"px");ab.min.set(-aT,-aX);ab.max.set(aT,aX);a5.min.set(-aT,-aX);a5.max.set(aT,aX);bc=1;aV=0;aN=bo=aQ=aL=aR=null};this.setClearColor=function(d,c){a4.set(d);a9=void 0!==c?c:1;a5.min.set(-aT,-aX);a5.max.set(aT,aX)};this.setClearColorHex=function(d,c){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(d,c)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){af.setTransform(1,0,0,-1,aT,aX);!1===a5.empty()&&(a5.intersect(ab),a5.expandByScalar(2),1>a9&&af.clearRect(a5.min.x|0,a5.min.y|0,a5.max.x-a5.min.x|0,a5.max.y-a5.min.y|0),0<a9&&(am(THREE.NormalBlending),ar(1),aj("rgba("+Math.floor(255*a4.r)+","+Math.floor(255*a4.g)+","+Math.floor(255*a4.b)+","+a9+")"),af.fillRect(a5.min.x|0,a5.min.y|0,a5.max.x-a5.min.x|0,a5.max.y-a5.min.y|0)),a5.makeEmpty())};this.clearColor=function(){};this.clearDepth=function(){};this.clearStencil=function(){};this.render=function(q,b){if(!1===b instanceof THREE.Camera){console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.")}else{!0===this.autoClear&&this.clear();af.setTransform(1,0,0,-1,aT,aX);ag.info.render.vertices=0;ag.info.render.faces=0;ae=a2.projectScene(q,b,this.sortObjects,this.sortElements);bb=ae.elements;a6=ae.lights;aa=b;au.getNormalMatrix(b.matrixWorldInverse);aW.setRGB(0,0,0);bn.setRGB(0,0,0);ax.setRGB(0,0,0);for(var r=0,n=a6.length;r<n;r++){var c=a6[r],s=c.color;c instanceof THREE.AmbientLight?aW.add(s):c instanceof THREE.DirectionalLight?bn.add(s):c instanceof THREE.PointLight&&ax.add(s)}r=0;for(n=bb.length;r<n;r++){var e=bb[r],u=e.material;if(void 0!==u&&!1!==u.visible){be.makeEmpty();if(e instanceof THREE.RenderableSprite){aM=e;aM.x*=aT;aM.y*=aX;c=aM;s=u;ar(s.opacity);am(s.blending);var p=e.scale.x*aT,e=e.scale.y*aX,u=0.5*Math.sqrt(p*p+e*e);be.min.set(c.x-u,c.y-u);be.max.set(c.x+u,c.y+u);if(s instanceof THREE.SpriteMaterial||s instanceof THREE.ParticleSystemMaterial){var l=s.map;if(null!==l){!1===l.hasEventListener("update",aC)&&(void 0!==l.image&&0<l.image.width&&aB(l),l.addEventListener("update",aC));u=bq[l.id];void 0!==u?aj(u):aj("rgba( 0, 0, 0, 1 )");var k=l.image,u=k.width*l.offset.x,d=k.height*l.offset.y,f=k.width*l.repeat.x,l=k.height*l.repeat.y,k=p/f,g=e/l;af.save();af.translate(c.x,c.y);0!==s.rotation&&af.rotate(s.rotation);af.translate(-p/2,-e/2);af.scale(k,g);af.translate(-u,-d);af.fillRect(u,d,f,l)}else{aj(s.color.getStyle()),af.save(),af.translate(c.x,c.y),0!==s.rotation&&af.rotate(s.rotation),af.scale(p,-e),af.fillRect(-0.5,-0.5,1,1)}af.restore()}else{s instanceof THREE.SpriteCanvasMaterial&&(ap(s.color.getStyle()),aj(s.color.getStyle()),af.save(),af.translate(c.x,c.y),0!==s.rotation&&af.rotate(s.rotation),af.scale(p,e),s.program(af),af.restore())}}else{if(e instanceof THREE.RenderableLine){if(aM=e.v1,aU=e.v2,aM.positionScreen.x*=aT,aM.positionScreen.y*=aX,aU.positionScreen.x*=aT,aU.positionScreen.y*=aX,be.setFromPoints([aM.positionScreen,aU.positionScreen]),!0===ab.isIntersectionBox(be)){if(c=aM,s=aU,p=e,e=u,ar(e.opacity),am(e.blending),af.beginPath(),af.moveTo(c.positionScreen.x,c.positionScreen.y),af.lineTo(s.positionScreen.x,s.positionScreen.y),e instanceof THREE.LineBasicMaterial){an(e.linewidth);ao(e.linecap);ak(e.linejoin);if(e.vertexColors!==THREE.VertexColors){ap(e.color.getStyle())}else{if(u=p.vertexColors[0].getStyle(),p=p.vertexColors[1].getStyle(),u===p){ap(u)}else{try{var t=af.createLinearGradient(c.positionScreen.x,c.positionScreen.y,s.positionScreen.x,s.positionScreen.y);t.addColorStop(0,u);t.addColorStop(1,p)}catch(m){t=u}ap(t)}}af.stroke();be.expandByScalar(2*e.linewidth)}else{e instanceof THREE.LineDashedMaterial&&(an(e.linewidth),ao(e.linecap),ak(e.linejoin),ap(e.color.getStyle()),ai(e.dashSize,e.gapSize),af.stroke(),be.expandByScalar(2*e.linewidth),ai(null,null))}}}else{if(e instanceof THREE.RenderableFace){aM=e.v1;aU=e.v2;at=e.v3;if(-1>aM.positionScreen.z||1<aM.positionScreen.z){continue}if(-1>aU.positionScreen.z||1<aU.positionScreen.z){continue}if(-1>at.positionScreen.z||1<at.positionScreen.z){continue}aM.positionScreen.x*=aT;aM.positionScreen.y*=aX;aU.positionScreen.x*=aT;aU.positionScreen.y*=aX;at.positionScreen.x*=aT;at.positionScreen.y*=aX;0<u.overdraw&&(av(aM.positionScreen,aU.positionScreen,u.overdraw),av(aU.positionScreen,at.positionScreen,u.overdraw),av(at.positionScreen,aM.positionScreen,u.overdraw));be.setFromPoints([aM.positionScreen,aU.positionScreen,at.positionScreen]);if(!0===ab.isIntersectionBox(be)){c=aM;s=aU;p=at;ag.info.render.vertices+=3;ag.info.render.faces++;ar(u.opacity);am(u.blending);bl=c.positionScreen.x;aO=c.positionScreen.y;aG=s.positionScreen.x;aP=s.positionScreen.y;bk=p.positionScreen.x;o=p.positionScreen.y;var d=bl,f=aO,l=aG,k=aP,g=bk,h=o;af.beginPath();af.moveTo(d,f);af.lineTo(l,k);af.lineTo(g,h);af.closePath();(u instanceof THREE.MeshLambertMaterial||u instanceof THREE.MeshPhongMaterial)&&null===u.map?(aK.copy(u.color),j.copy(u.emissive),u.vertexColors===THREE.FaceColors&&aK.multiply(e.color),!1===u.wireframe&&u.shading===THREE.SmoothShading&&3===e.vertexNormalsLength?(aE.copy(aW),bf.copy(aW),bp.copy(aW),aH(e.v1.positionWorld,e.vertexNormalsModel[0],aE),aH(e.v2.positionWorld,e.vertexNormalsModel[1],bf),aH(e.v3.positionWorld,e.vertexNormalsModel[2],bp),aE.multiply(aK).add(j),bf.multiply(aK).add(j),bp.multiply(aK).add(j),bg.addColors(bf,bp).multiplyScalar(0.5),bj=aw(aE,bf,bp,bg),ay(bl,aO,aG,aP,bk,o,0,0,1,0,0,1,bj)):(bd.copy(aW),aH(e.centroidModel,e.normalModel,bd),bd.multiply(aK).add(j),!0===u.wireframe?aF(bd,u.wireframeLinewidth,u.wireframeLinecap,u.wireframeLinejoin):aD(bd))):u instanceof THREE.MeshBasicMaterial||u instanceof THREE.MeshLambertMaterial||u instanceof THREE.MeshPhongMaterial?null!==u.map?u.map.mapping instanceof THREE.UVMapping&&(a1=e.uvs[0],aA(bl,aO,aG,aP,bk,o,a1[0].x,a1[0].y,a1[1].x,a1[1].y,a1[2].x,a1[2].y,u.map)):null!==u.envMap?u.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(aY.copy(e.vertexNormalsModel[0]).applyMatrix3(au),aS=0.5*aY.x+0.5,X=0.5*aY.y+0.5,aY.copy(e.vertexNormalsModel[1]).applyMatrix3(au),i=0.5*aY.x+0.5,az=0.5*aY.y+0.5,aY.copy(e.vertexNormalsModel[2]).applyMatrix3(au),ah=0.5*aY.x+0.5,U=0.5*aY.y+0.5,aA(bl,aO,aG,aP,bk,o,aS,X,i,az,ah,U,u.envMap)):(bd.copy(u.color),u.vertexColors===THREE.FaceColors&&bd.multiply(e.color),!0===u.wireframe?aF(bd,u.wireframeLinewidth,u.wireframeLinecap,u.wireframeLinejoin):aD(bd)):u instanceof THREE.MeshDepthMaterial?(bi=aa.near,a8=aa.far,aE.r=aE.g=aE.b=1-al(c.positionScreen.z*c.positionScreen.w,bi,a8),bf.r=bf.g=bf.b=1-al(s.positionScreen.z*s.positionScreen.w,bi,a8),bp.r=bp.g=bp.b=1-al(p.positionScreen.z*p.positionScreen.w,bi,a8),bg.addColors(bf,bp).multiplyScalar(0.5),bj=aw(aE,bf,bp,bg),ay(bl,aO,aG,aP,bk,o,0,0,1,0,0,1,bj)):u instanceof THREE.MeshNormalMaterial&&(u.shading===THREE.FlatShading?(aY.copy(e.normalModel).applyMatrix3(au),bd.setRGB(aY.x,aY.y,aY.z).multiplyScalar(0.5).addScalar(0.5),!0===u.wireframe?aF(bd,u.wireframeLinewidth,u.wireframeLinecap,u.wireframeLinejoin):aD(bd)):u.shading===THREE.SmoothShading&&(aY.copy(e.vertexNormalsModel[0]).applyMatrix3(au),aE.setRGB(aY.x,aY.y,aY.z).multiplyScalar(0.5).addScalar(0.5),aY.copy(e.vertexNormalsModel[1]).applyMatrix3(au),bf.setRGB(aY.x,aY.y,aY.z).multiplyScalar(0.5).addScalar(0.5),aY.copy(e.vertexNormalsModel[2]).applyMatrix3(au),bp.setRGB(aY.x,aY.y,aY.z).multiplyScalar(0.5).addScalar(0.5),bg.addColors(bf,bp).multiplyScalar(0.5),bj=aw(aE,bf,bp,bg),ay(bl,aO,aG,aP,bk,o,0,0,1,0,0,1,bj)))}}}}a5.union(be)}}af.setTransform(1,0,0,1,0,0)}}};THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nuniform int boneTextureWidth;\nuniform int boneTextureHeight;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, float( boneTextureWidth ) );\nfloat y = floor( j / float( boneTextureWidth ) );\nfloat dx = 1.0 / float( boneTextureWidth );\nfloat dy = 1.0 / float( boneTextureHeight );\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\nmat4 boneMatZ = getBoneMatrix( skinIndex.z );\nmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned      += boneMatY * skinVertex * skinWeight.y;\nskinned      += boneMatZ * skinVertex * skinWeight.z;\nskinned      += boneMatW * skinVertex * skinWeight.w;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nvec3 shadowZ = vec3( shadowCoord.z );\nshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\nshadowKernel[0] *= vec3(0.25);\nshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\nshadowKernel[1] *= vec3(0.25);\nshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\nshadowKernel[2] *= vec3(0.25);\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};THREE.UniformsUtils={merge:function(g){var f,j,i,h={};for(f=0;f<g.length;f++){for(j in i=this.clone(g[f]),i){h[j]=i[j]}}return h},clone:function(g){var f,j,i,h={};for(f in g){for(j in h[f]={},g[f]){i=g[f][j],h[f][j]=i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture?i.clone():i instanceof Array?i.slice():i}}return h}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2000},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:0.98},reflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float reflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), opacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\n}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};THREE.WebGLRenderer=function(aP){function aO(k,h){var q=k.vertices.length,p=h.material;if(p.attributes){void 0===k.__webglCustomAttributesList&&(k.__webglCustomAttributesList=[]);for(var n in p.attributes){var m=p.attributes[n];if(!m.__webglInitialized||m.createUniqueBuffers){m.__webglInitialized=!0;var l=1;"v2"===m.type?l=2:"v3"===m.type?l=3:"v4"===m.type?l=4:"c"===m.type&&(l=3);m.size=l;m.array=new Float32Array(q*l);m.buffer=az.createBuffer();m.buffer.belongsToAttribute=n;m.needsUpdate=!0}k.__webglCustomAttributesList.push(m)}}}function aM(D,C){var B=C.geometry,A=D.faces3,v=3*A.length,u=1*A.length,t=3*A.length,A=aK(C,D),m=aH(A),f=aI(A),e=A.vertexColors?A.vertexColors:!1;D.__vertexArray=new Float32Array(3*v);f&&(D.__normalArray=new Float32Array(3*v));B.hasTangents&&(D.__tangentArray=new Float32Array(4*v));e&&(D.__colorArray=new Float32Array(3*v));m&&(0<B.faceVertexUvs.length&&(D.__uvArray=new Float32Array(2*v)),1<B.faceVertexUvs.length&&(D.__uv2Array=new Float32Array(2*v)));C.geometry.skinWeights.length&&C.geometry.skinIndices.length&&(D.__skinIndexArray=new Float32Array(4*v),D.__skinWeightArray=new Float32Array(4*v));D.__faceArray=new Uint16Array(3*u);D.__lineArray=new Uint16Array(2*t);if(D.numMorphTargets){for(D.__morphTargetsArrays=[],B=0,m=D.numMorphTargets;B<m;B++){D.__morphTargetsArrays.push(new Float32Array(3*v))}}if(D.numMorphNormals){for(D.__morphNormalsArrays=[],B=0,m=D.numMorphNormals;B<m;B++){D.__morphNormalsArrays.push(new Float32Array(3*v))}}D.__webglFaceCount=3*u;D.__webglLineCount=2*t;if(A.attributes){void 0===D.__webglCustomAttributesList&&(D.__webglCustomAttributesList=[]);for(var d in A.attributes){var u=A.attributes[d],t={},E;for(E in u){t[E]=u[E]}if(!t.__webglInitialized||t.createUniqueBuffers){t.__webglInitialized=!0,B=1,"v2"===t.type?B=2:"v3"===t.type?B=3:"v4"===t.type?B=4:"c"===t.type&&(B=3),t.size=B,t.array=new Float32Array(v*B),t.buffer=az.createBuffer(),t.buffer.belongsToAttribute=d,u.needsUpdate=!0,t.__original=u}D.__webglCustomAttributesList.push(t)}}D.__inittedArrays=!0}function aK(d,c){return d.material instanceof THREE.MeshFaceMaterial?d.material.materials[c.materialIndex]:d.material}function aI(b){return b instanceof THREE.MeshBasicMaterial&&!b.envMap||b instanceof THREE.MeshDepthMaterial?!1:b&&void 0!==b.shading&&b.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function aH(b){return b.map||b.lightMap||b.bumpMap||b.normalMap||b.specularMap||b instanceof THREE.ShaderMaterial?!0:!1}function aG(l,h,s,r){var q,p,n,m;for(p in h){n=h[p],q=s[p],0<=n&&(q?(m=q.itemSize,az.bindBuffer(az.ARRAY_BUFFER,q.buffer),aE(n),az.vertexAttribPointer(n,m,az.FLOAT,!1,0,r*m*4)):l.defaultAttributeValues&&(2===l.defaultAttributeValues[p].length?az.vertexAttrib2fv(n,l.defaultAttributeValues[p]):3===l.defaultAttributeValues[p].length&&az.vertexAttrib3fv(n,l.defaultAttributeValues[p])))}}function aE(b){0===af[b]&&(az.enableVertexAttribArray(b),af[b]=1)}function aB(){for(var b in af){1===af[b]&&(az.disableVertexAttribArray(b),af[b]=0)}}function aA(d,c){return d.z!==c.z?c.z-d.z:d.id-c.id}function ax(d,c){return c[0]-d[0]}function ar(g,f,l){if(g.length){for(var k=0,h=g.length;k<h;k++){M=aW=null,aX=by=br=aL=bG=ah=bF=-1,bA=!0,g[k].render(f,l,am,Z),M=aW=null,aX=by=br=aL=bG=ah=bF=-1,bA=!0}}}function at(G,F,E,D,C,B,A,v){var u,s,t,r;F?(s=G.length-1,r=F=-1):(s=0,F=G.length,r=1);for(var q=s;q!==F;q+=r){if(u=G[q],u.render){s=u.object;t=u.buffer;if(v){u=v}else{u=u[E];if(!u){continue}A&&a3.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst);a3.setDepthTest(u.depthTest);a3.setDepthWrite(u.depthWrite);bb(u.polygonOffset,u.polygonOffsetFactor,u.polygonOffsetUnits)}a3.setMaterialFaces(u);t instanceof THREE.BufferGeometry?a3.renderBufferDirect(D,C,B,u,t,s):a3.renderBuffer(D,C,B,u,t,s)}}}function au(C,B,A,v,u,t,s){for(var r,q,n=0,p=C.length;n<p;n++){if(r=C[n],q=r.object,q.visible){if(s){r=s}else{r=r[B];if(!r){continue}t&&a3.setBlending(r.blending,r.blendEquation,r.blendSrc,r.blendDst);a3.setDepthTest(r.depthTest);a3.setDepthWrite(r.depthWrite);bb(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits)}a3.renderImmediateObject(A,v,u,r,q)}}}function ap(c,s){var r,q,p;if(void 0===c.__webglInit&&(c.__webglInit=!0,c._modelViewMatrix=new THREE.Matrix4,c._normalMatrix=new THREE.Matrix3,void 0!==c.geometry&&void 0===c.geometry.__webglInit&&(c.geometry.__webglInit=!0,c.geometry.addEventListener("dispose",ag)),q=c.geometry,void 0!==q)){if(q instanceof THREE.BufferGeometry){var n,m;for(p in q.attributes){m="index"===p?az.ELEMENT_ARRAY_BUFFER:az.ARRAY_BUFFER,n=q.attributes[p],n.buffer=az.createBuffer(),az.bindBuffer(m,n.buffer),az.bufferData(m,n.array,az.STATIC_DRAW)}}else{if(c instanceof THREE.Mesh){for(r in p=c.material,void 0===q.geometryGroups&&q.makeGroups(p instanceof THREE.MeshFaceMaterial),q.geometryGroups){if(p=q.geometryGroups[r],!p.__webglVertexBuffer){n=p;n.__webglVertexBuffer=az.createBuffer();n.__webglNormalBuffer=az.createBuffer();n.__webglTangentBuffer=az.createBuffer();n.__webglColorBuffer=az.createBuffer();n.__webglUVBuffer=az.createBuffer();n.__webglUV2Buffer=az.createBuffer();n.__webglSkinIndicesBuffer=az.createBuffer();n.__webglSkinWeightsBuffer=az.createBuffer();n.__webglFaceBuffer=az.createBuffer();n.__webglLineBuffer=az.createBuffer();var b=m=void 0;if(n.numMorphTargets){for(n.__webglMorphTargetsBuffers=[],m=0,b=n.numMorphTargets;m<b;m++){n.__webglMorphTargetsBuffers.push(az.createBuffer())}}if(n.numMorphNormals){for(n.__webglMorphNormalsBuffers=[],m=0,b=n.numMorphNormals;m<b;m++){n.__webglMorphNormalsBuffers.push(az.createBuffer())}}a3.info.memory.geometries++;aM(p,c);q.verticesNeedUpdate=!0;q.morphTargetsNeedUpdate=!0;q.elementsNeedUpdate=!0;q.uvsNeedUpdate=!0;q.normalsNeedUpdate=!0;q.tangentsNeedUpdate=!0;q.colorsNeedUpdate=!0}}}else{c instanceof THREE.Line?q.__webglVertexBuffer||(p=q,p.__webglVertexBuffer=az.createBuffer(),p.__webglColorBuffer=az.createBuffer(),p.__webglLineDistanceBuffer=az.createBuffer(),a3.info.memory.geometries++,p=q,n=p.vertices.length,p.__vertexArray=new Float32Array(3*n),p.__colorArray=new Float32Array(3*n),p.__lineDistanceArray=new Float32Array(1*n),p.__webglLineCount=n,aO(p,c),q.verticesNeedUpdate=!0,q.colorsNeedUpdate=!0,q.lineDistancesNeedUpdate=!0):c instanceof THREE.ParticleSystem&&!q.__webglVertexBuffer&&(p=q,p.__webglVertexBuffer=az.createBuffer(),p.__webglColorBuffer=az.createBuffer(),a3.info.memory.geometries++,p=q,n=p.vertices.length,p.__vertexArray=new Float32Array(3*n),p.__colorArray=new Float32Array(3*n),p.__sortArray=[],p.__webglParticleCount=n,aO(p,c),q.verticesNeedUpdate=!0,q.colorsNeedUpdate=!0)}}}if(void 0===c.__webglActive){if(c instanceof THREE.Mesh){if(q=c.geometry,q instanceof THREE.BufferGeometry){av(s.__webglObjects,q,c)}else{if(q instanceof THREE.Geometry){for(r in q.geometryGroups){p=q.geometryGroups[r],av(s.__webglObjects,p,c)}}}}else{c instanceof THREE.Line||c instanceof THREE.ParticleSystem?(q=c.geometry,av(s.__webglObjects,q,c)):c instanceof THREE.ImmediateRenderObject||c.immediateRenderCallback?s.__webglObjectsImmediate.push({id:null,object:c,opaque:null,transparent:null,z:0}):c instanceof THREE.Sprite?s.__webglSprites.push(c):c instanceof THREE.LensFlare&&s.__webglFlares.push(c)}c.__webglActive=!0}}function av(e,d,f){e.push({id:null,buffer:d,object:f,opaque:null,transparent:null,z:0})}function ao(d){for(var c in d.attributes){if(d.attributes[c].needsUpdate){return !0}}return !1}function an(d){for(var c in d.attributes){d.attributes[c].needsUpdate=!1}}function aq(d,c){d instanceof THREE.Mesh||d instanceof THREE.ParticleSystem||d instanceof THREE.Line?al(c.__webglObjects,d):d instanceof THREE.Sprite?aj(c.__webglSprites,d):d instanceof THREE.LensFlare?aj(c.__webglFlares,d):(d instanceof THREE.ImmediateRenderObject||d.immediateRenderCallback)&&al(c.__webglObjectsImmediate,d);delete d.__webglActive}function al(e,d){for(var f=e.length-1;0<=f;f--){e[f].object===d&&e.splice(f,1)}}function aj(e,d){for(var f=e.length-1;0<=f;f--){e[f]===d&&e.splice(f,1)}}function bn(cd,cb,b9,b8,b7){bp=0;b8.needsUpdate&&(b8.program&&ae(b8),a3.initMaterial(b8,cb,b9,b7),b8.needsUpdate=!1);b8.morphTargets&&!b7.__webglMorphTargetInfluences&&(b7.__webglMorphTargetInfluences=new Float32Array(a3.maxMorphTargets));var b6=!1,b5=b8.program,b4=b5.uniforms,b3=b8.uniforms;b5!==aW&&(az.useProgram(b5),aW=b5,b6=!0);b8.id!==aX&&(aX=b8.id,b6=!0);if(b6||cd!==M){az.uniformMatrix4fv(b4.projectionMatrix,!1,cd.projectionMatrix.elements),cd!==M&&(M=cd)}if(b8.skinning){if(aQ&&b7.useVertexTexture){if(null!==b4.boneTexture){var b2=bi();az.uniform1i(b4.boneTexture,b2);a3.setTexture(b7.boneTexture,b2)}null!==b4.boneTextureWidth&&az.uniform1i(b4.boneTextureWidth,b7.boneTextureWidth);null!==b4.boneTextureHeight&&az.uniform1i(b4.boneTextureHeight,b7.boneTextureHeight)}else{null!==b4.boneGlobalMatrices&&az.uniformMatrix4fv(b4.boneGlobalMatrices,!1,b7.boneMatrices)}}if(b6){b9&&b8.fog&&(b3.fogColor.value=b9.color,b9 instanceof THREE.Fog?(b3.fogNear.value=b9.near,b3.fogFar.value=b9.far):b9 instanceof THREE.FogExp2&&(b3.fogDensity.value=b9.density));if(b8 instanceof THREE.MeshPhongMaterial||b8 instanceof THREE.MeshLambertMaterial||b8.lights){if(bA){var b1,b0=b2=0,bZ=0,bY,bX,bV,bW=a8,bU=bW.directional.colors,bS=bW.directional.positions,bR=bW.point.colors,bQ=bW.point.positions,bK=bW.point.distances,ac=bW.spot.colors,bJ=bW.spot.positions,bc=bW.spot.distances,ba=bW.spot.directions,N=bW.spot.anglesCos,T=bW.spot.exponents,L=bW.hemi.skyColors,S=bW.hemi.groundColors,bP=bW.hemi.positions,H=0,A=0,D=0,bM=0,bO=0,bL=0,m=0,bT=0,E=b1=0;b9=bV=E=0;for(b6=cb.length;b9<b6;b9++){if(b1=cb[b9],!b1.onlyShadow){if(bY=b1.color,bX=b1.intensity,bV=b1.distance,b1 instanceof THREE.AmbientLight){b1.visible&&(a3.gammaInput?(b2+=bY.r*bY.r,b0+=bY.g*bY.g,bZ+=bY.b*bY.b):(b2+=bY.r,b0+=bY.g,bZ+=bY.b))}else{if(b1 instanceof THREE.DirectionalLight){if(bO+=1,b1.visible&&(aD.setFromMatrixPosition(b1.matrixWorld),bC.setFromMatrixPosition(b1.target.matrixWorld),aD.sub(bC),aD.normalize(),0!==aD.x||0!==aD.y||0!==aD.z)){b1=3*H,bS[b1]=aD.x,bS[b1+1]=aD.y,bS[b1+2]=aD.z,a3.gammaInput?be(bU,b1,bY,bX*bX):bk(bU,b1,bY,bX),H+=1}}else{b1 instanceof THREE.PointLight?(bL+=1,b1.visible&&(E=3*A,a3.gammaInput?be(bR,E,bY,bX*bX):bk(bR,E,bY,bX),bC.setFromMatrixPosition(b1.matrixWorld),bQ[E]=bC.x,bQ[E+1]=bC.y,bQ[E+2]=bC.z,bK[A]=bV,A+=1)):b1 instanceof THREE.SpotLight?(m+=1,b1.visible&&(E=3*D,a3.gammaInput?be(ac,E,bY,bX*bX):bk(ac,E,bY,bX),bC.setFromMatrixPosition(b1.matrixWorld),bJ[E]=bC.x,bJ[E+1]=bC.y,bJ[E+2]=bC.z,bc[D]=bV,aD.copy(bC),bC.setFromMatrixPosition(b1.target.matrixWorld),aD.sub(bC),aD.normalize(),ba[E]=aD.x,ba[E+1]=aD.y,ba[E+2]=aD.z,N[D]=Math.cos(b1.angle),T[D]=b1.exponent,D+=1)):b1 instanceof THREE.HemisphereLight&&(bT+=1,b1.visible&&(aD.setFromMatrixPosition(b1.matrixWorld),aD.normalize(),0!==aD.x||0!==aD.y||0!==aD.z))&&(bV=3*bM,bP[bV]=aD.x,bP[bV+1]=aD.y,bP[bV+2]=aD.z,bY=b1.color,b1=b1.groundColor,a3.gammaInput?(bX*=bX,be(L,bV,bY,bX),be(S,bV,b1,bX)):(bk(L,bV,bY,bX),bk(S,bV,b1,bX)),bM+=1)}}}}b9=3*H;for(b6=Math.max(bU.length,3*bO);b9<b6;b9++){bU[b9]=0}b9=3*A;for(b6=Math.max(bR.length,3*bL);b9<b6;b9++){bR[b9]=0}b9=3*D;for(b6=Math.max(ac.length,3*m);b9<b6;b9++){ac[b9]=0}b9=3*bM;for(b6=Math.max(L.length,3*bT);b9<b6;b9++){L[b9]=0}b9=3*bM;for(b6=Math.max(S.length,3*bT);b9<b6;b9++){S[b9]=0}bW.directional.length=H;bW.point.length=A;bW.spot.length=D;bW.hemi.length=bM;bW.ambient[0]=b2;bW.ambient[1]=b0;bW.ambient[2]=bZ;bA=!1}b9=a8;b3.ambientLightColor.value=b9.ambient;b3.directionalLightColor.value=b9.directional.colors;b3.directionalLightDirection.value=b9.directional.positions;b3.pointLightColor.value=b9.point.colors;b3.pointLightPosition.value=b9.point.positions;b3.pointLightDistance.value=b9.point.distances;b3.spotLightColor.value=b9.spot.colors;b3.spotLightPosition.value=b9.spot.positions;b3.spotLightDistance.value=b9.spot.distances;b3.spotLightDirection.value=b9.spot.directions;b3.spotLightAngleCos.value=b9.spot.anglesCos;b3.spotLightExponent.value=b9.spot.exponents;b3.hemisphereLightSkyColor.value=b9.hemi.skyColors;b3.hemisphereLightGroundColor.value=b9.hemi.groundColors;b3.hemisphereLightDirection.value=b9.hemi.positions}if(b8 instanceof THREE.MeshBasicMaterial||b8 instanceof THREE.MeshLambertMaterial||b8 instanceof THREE.MeshPhongMaterial){b3.opacity.value=b8.opacity;a3.gammaInput?b3.diffuse.value.copyGammaToLinear(b8.color):b3.diffuse.value=b8.color;b3.map.value=b8.map;b3.lightMap.value=b8.lightMap;b3.specularMap.value=b8.specularMap;b8.bumpMap&&(b3.bumpMap.value=b8.bumpMap,b3.bumpScale.value=b8.bumpScale);b8.normalMap&&(b3.normalMap.value=b8.normalMap,b3.normalScale.value.copy(b8.normalScale));var bN;b8.map?bN=b8.map:b8.specularMap?bN=b8.specularMap:b8.normalMap?bN=b8.normalMap:b8.bumpMap&&(bN=b8.bumpMap);void 0!==bN&&(b9=bN.offset,bN=bN.repeat,b3.offsetRepeat.value.set(b9.x,b9.y,bN.x,bN.y));b3.envMap.value=b8.envMap;b3.flipEnvMap.value=b8.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;b3.reflectivity.value=b8.reflectivity;b3.refractionRatio.value=b8.refractionRatio;b3.combine.value=b8.combine;b3.useRefract.value=b8.envMap&&b8.envMap.mapping instanceof THREE.CubeRefractionMapping}b8 instanceof THREE.LineBasicMaterial?(b3.diffuse.value=b8.color,b3.opacity.value=b8.opacity):b8 instanceof THREE.LineDashedMaterial?(b3.diffuse.value=b8.color,b3.opacity.value=b8.opacity,b3.dashSize.value=b8.dashSize,b3.totalSize.value=b8.dashSize+b8.gapSize,b3.scale.value=b8.scale):b8 instanceof THREE.ParticleSystemMaterial?(b3.psColor.value=b8.color,b3.opacity.value=b8.opacity,b3.size.value=b8.size,b3.scale.value=a4.height/2,b3.map.value=b8.map):b8 instanceof THREE.MeshPhongMaterial?(b3.shininess.value=b8.shininess,a3.gammaInput?(b3.ambient.value.copyGammaToLinear(b8.ambient),b3.emissive.value.copyGammaToLinear(b8.emissive),b3.specular.value.copyGammaToLinear(b8.specular)):(b3.ambient.value=b8.ambient,b3.emissive.value=b8.emissive,b3.specular.value=b8.specular),b8.wrapAround&&b3.wrapRGB.value.copy(b8.wrapRGB)):b8 instanceof THREE.MeshLambertMaterial?(a3.gammaInput?(b3.ambient.value.copyGammaToLinear(b8.ambient),b3.emissive.value.copyGammaToLinear(b8.emissive)):(b3.ambient.value=b8.ambient,b3.emissive.value=b8.emissive),b8.wrapAround&&b3.wrapRGB.value.copy(b8.wrapRGB)):b8 instanceof THREE.MeshDepthMaterial?(b3.mNear.value=cd.near,b3.mFar.value=cd.far,b3.opacity.value=b8.opacity):b8 instanceof THREE.MeshNormalMaterial&&(b3.opacity.value=b8.opacity);if(b7.receiveShadow&&!b8._shadowPass&&b3.shadowMatrix){for(b9=bN=0,b6=cb.length;b9<b6;b9++){b2=cb[b9],b2.castShadow&&(b2 instanceof THREE.SpotLight||b2 instanceof THREE.DirectionalLight&&!b2.shadowCascade)&&(b3.shadowMap.value[bN]=b2.shadowMap,b3.shadowMapSize.value[bN]=b2.shadowMapSize,b3.shadowMatrix.value[bN]=b2.shadowMatrix,b3.shadowDarkness.value[bN]=b2.shadowDarkness,b3.shadowBias.value[bN]=b2.shadowBias,bN++)}}cb=b8.uniformsList;b3=0;for(bN=cb.length;b3<bN;b3++){if(b6=b5.uniforms[cb[b3][1]]){if(b9=cb[b3][0],b0=b9.type,b2=b9.value,"i"===b0){az.uniform1i(b6,b2)}else{if("f"===b0){az.uniform1f(b6,b2)}else{if("v2"===b0){az.uniform2f(b6,b2.x,b2.y)}else{if("v3"===b0){az.uniform3f(b6,b2.x,b2.y,b2.z)}else{if("v4"===b0){az.uniform4f(b6,b2.x,b2.y,b2.z,b2.w)}else{if("c"===b0){az.uniform3f(b6,b2.r,b2.g,b2.b)}else{if("iv1"===b0){az.uniform1iv(b6,b2)}else{if("iv"===b0){az.uniform3iv(b6,b2)}else{if("fv1"===b0){az.uniform1fv(b6,b2)}else{if("fv"===b0){az.uniform3fv(b6,b2)}else{if("v2v"===b0){void 0===b9._array&&(b9._array=new Float32Array(2*b2.length));b0=0;for(bZ=b2.length;b0<bZ;b0++){bW=2*b0,b9._array[bW]=b2[b0].x,b9._array[bW+1]=b2[b0].y}az.uniform2fv(b6,b9._array)}else{if("v3v"===b0){void 0===b9._array&&(b9._array=new Float32Array(3*b2.length));b0=0;for(bZ=b2.length;b0<bZ;b0++){bW=3*b0,b9._array[bW]=b2[b0].x,b9._array[bW+1]=b2[b0].y,b9._array[bW+2]=b2[b0].z}az.uniform3fv(b6,b9._array)}else{if("v4v"===b0){void 0===b9._array&&(b9._array=new Float32Array(4*b2.length));b0=0;for(bZ=b2.length;b0<bZ;b0++){bW=4*b0,b9._array[bW]=b2[b0].x,b9._array[bW+1]=b2[b0].y,b9._array[bW+2]=b2[b0].z,b9._array[bW+3]=b2[b0].w}az.uniform4fv(b6,b9._array)}else{if("m4"===b0){void 0===b9._array&&(b9._array=new Float32Array(16)),b2.flattenToArray(b9._array),az.uniformMatrix4fv(b6,!1,b9._array)}else{if("m4v"===b0){void 0===b9._array&&(b9._array=new Float32Array(16*b2.length));b0=0;for(bZ=b2.length;b0<bZ;b0++){b2[b0].flattenToArrayOffset(b9._array,16*b0)}az.uniformMatrix4fv(b6,!1,b9._array)}else{if("t"===b0){if(bW=b2,b2=bi(),az.uniform1i(b6,b2),bW){if(bW.image instanceof Array&&6===bW.image.length){if(b9=bW,b6=b2,6===b9.image.length){if(b9.needsUpdate){b9.image.__webglTextureCube||(b9.addEventListener("dispose",a7),b9.image.__webglTextureCube=az.createTexture(),a3.info.memory.textures++);az.activeTexture(az.TEXTURE0+b6);az.bindTexture(az.TEXTURE_CUBE_MAP,b9.image.__webglTextureCube);az.pixelStorei(az.UNPACK_FLIP_Y_WEBGL,b9.flipY);b6=b9 instanceof THREE.CompressedTexture;b2=[];for(b0=0;6>b0;b0++){a3.autoScaleCubemaps&&!b6?(bZ=b2,bW=b0,bU=b9.image[b0],bR=ab,bU.width<=bR&&bU.height<=bR||(bQ=Math.max(bU.width,bU.height),bS=Math.floor(bU.width*bR/bQ),bR=Math.floor(bU.height*bR/bQ),bQ=document.createElement("canvas"),bQ.width=bS,bQ.height=bR,bQ.getContext("2d").drawImage(bU,0,0,bU.width,bU.height,0,0,bS,bR),bU=bQ),bZ[bW]=bU):b2[b0]=b9.image[b0]}b0=b2[0];bZ=THREE.Math.isPowerOfTwo(b0.width)&&THREE.Math.isPowerOfTwo(b0.height);bW=bo(b9.format);bU=bo(b9.type);ak(az.TEXTURE_CUBE_MAP,b9,bZ);for(b0=0;6>b0;b0++){if(b6){for(bR=b2[b0].mipmaps,bQ=0,bK=bR.length;bQ<bK;bQ++){bS=bR[bQ],b9.format!==THREE.RGBAFormat?az.compressedTexImage2D(az.TEXTURE_CUBE_MAP_POSITIVE_X+b0,bQ,bW,bS.width,bS.height,0,bS.data):az.texImage2D(az.TEXTURE_CUBE_MAP_POSITIVE_X+b0,bQ,bW,bS.width,bS.height,0,bW,bU,bS.data)}}else{az.texImage2D(az.TEXTURE_CUBE_MAP_POSITIVE_X+b0,0,bW,bW,bU,b2[b0])}}b9.generateMipmaps&&bZ&&az.generateMipmap(az.TEXTURE_CUBE_MAP);b9.needsUpdate=!1;if(b9.onUpdate){b9.onUpdate()}}else{az.activeTexture(az.TEXTURE0+b6),az.bindTexture(az.TEXTURE_CUBE_MAP,b9.image.__webglTextureCube)}}}else{bW instanceof THREE.WebGLRenderTargetCube?(b9=bW,az.activeTexture(az.TEXTURE0+b2),az.bindTexture(az.TEXTURE_CUBE_MAP,b9.__webglTexture)):a3.setTexture(bW,b2)}}}else{if("tv"===b0){void 0===b9._array&&(b9._array=[]);b0=0;for(bZ=b9.value.length;b0<bZ;b0++){b9._array[b0]=bi()}az.uniform1iv(b6,b9._array);b0=0;for(bZ=b9.value.length;b0<bZ;b0++){bW=b9.value[b0],b2=b9._array[b0],bW&&a3.setTexture(bW,b2)}}else{console.warn("THREE.WebGLRenderer: Unknown uniform type: "+b0)}}}}}}}}}}}}}}}}}}}(b8 instanceof THREE.ShaderMaterial||b8 instanceof THREE.MeshPhongMaterial||b8.envMap)&&null!==b4.cameraPosition&&(bC.setFromMatrixPosition(cd.matrixWorld),az.uniform3f(b4.cameraPosition,bC.x,bC.y,bC.z));(b8 instanceof THREE.MeshPhongMaterial||b8 instanceof THREE.MeshLambertMaterial||b8 instanceof THREE.ShaderMaterial||b8.skinning)&&null!==b4.viewMatrix&&az.uniformMatrix4fv(b4.viewMatrix,!1,cd.matrixWorldInverse.elements)}az.uniformMatrix4fv(b4.modelViewMatrix,!1,b7._modelViewMatrix.elements);b4.normalMatrix&&az.uniformMatrix3fv(b4.normalMatrix,!1,b7._normalMatrix.elements);null!==b4.modelMatrix&&az.uniformMatrix4fv(b4.modelMatrix,!1,b7.matrixWorld.elements);return b5}function bi(){var b=bp;b>=aw&&console.warn("WebGLRenderer: trying to use "+b+" texture units while this GPU supports only "+aw);bp+=1;return b}function be(f,e,h,g){f[e]=h.r*h.r*g;f[e+1]=h.g*h.g*g;f[e+2]=h.b*h.b*g}function bk(f,e,h,g){f[e]=h.r*g;f[e+1]=h.g*g;f[e+2]=h.b*g}function bf(b){b!==bd&&(az.lineWidth(b),bd=b)}function bb(e,d,f){bw!==e&&(e?az.enable(az.POLYGON_OFFSET_FILL):az.disable(az.POLYGON_OFFSET_FILL),bw=e);!e||bl===d&&bx===f||(az.polygonOffset(d,f),bl=d,bx=f)}function a2(e){e=e.split("\n");for(var d=0,f=e.length;d<f;d++){e[d]=d+1+": "+e[d]}return e.join("\n")}function a6(e,d){var f;"fragment"===e?f=az.createShader(az.FRAGMENT_SHADER):"vertex"===e&&(f=az.createShader(az.VERTEX_SHADER));az.shaderSource(f,d);az.compileShader(f);return az.getShaderParameter(f,az.COMPILE_STATUS)?f:(console.error(az.getShaderInfoLog(f)),console.error(a2(d)),null)}function ak(e,d,f){f?(az.texParameteri(e,az.TEXTURE_WRAP_S,bo(d.wrapS)),az.texParameteri(e,az.TEXTURE_WRAP_T,bo(d.wrapT)),az.texParameteri(e,az.TEXTURE_MAG_FILTER,bo(d.magFilter)),az.texParameteri(e,az.TEXTURE_MIN_FILTER,bo(d.minFilter))):(az.texParameteri(e,az.TEXTURE_WRAP_S,az.CLAMP_TO_EDGE),az.texParameteri(e,az.TEXTURE_WRAP_T,az.CLAMP_TO_EDGE),az.texParameteri(e,az.TEXTURE_MAG_FILTER,bm(d.magFilter)),az.texParameteri(e,az.TEXTURE_MIN_FILTER,bm(d.minFilter)));aR&&d.type!==THREE.FloatType&&(1<d.anisotropy||d.__oldAnisotropy)&&(az.texParameterf(e,aR.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(d.anisotropy,bu)),d.__oldAnisotropy=d.anisotropy)}function bg(d,c){az.bindRenderbuffer(az.RENDERBUFFER,d);c.depthBuffer&&!c.stencilBuffer?(az.renderbufferStorage(az.RENDERBUFFER,az.DEPTH_COMPONENT16,c.width,c.height),az.framebufferRenderbuffer(az.FRAMEBUFFER,az.DEPTH_ATTACHMENT,az.RENDERBUFFER,d)):c.depthBuffer&&c.stencilBuffer?(az.renderbufferStorage(az.RENDERBUFFER,az.DEPTH_STENCIL,c.width,c.height),az.framebufferRenderbuffer(az.FRAMEBUFFER,az.DEPTH_STENCIL_ATTACHMENT,az.RENDERBUFFER,d)):az.renderbufferStorage(az.RENDERBUFFER,az.RGBA4,c.width,c.height)}function bm(b){return b===THREE.NearestFilter||b===THREE.NearestMipMapNearestFilter||b===THREE.NearestMipMapLinearFilter?az.NEAREST:az.LINEAR}function bo(b){if(b===THREE.RepeatWrapping){return az.REPEAT}if(b===THREE.ClampToEdgeWrapping){return az.CLAMP_TO_EDGE}if(b===THREE.MirroredRepeatWrapping){return az.MIRRORED_REPEAT}if(b===THREE.NearestFilter){return az.NEAREST}if(b===THREE.NearestMipMapNearestFilter){return az.NEAREST_MIPMAP_NEAREST}if(b===THREE.NearestMipMapLinearFilter){return az.NEAREST_MIPMAP_LINEAR}if(b===THREE.LinearFilter){return az.LINEAR}if(b===THREE.LinearMipMapNearestFilter){return az.LINEAR_MIPMAP_NEAREST}if(b===THREE.LinearMipMapLinearFilter){return az.LINEAR_MIPMAP_LINEAR}if(b===THREE.UnsignedByteType){return az.UNSIGNED_BYTE}if(b===THREE.UnsignedShort4444Type){return az.UNSIGNED_SHORT_4_4_4_4}if(b===THREE.UnsignedShort5551Type){return az.UNSIGNED_SHORT_5_5_5_1}if(b===THREE.UnsignedShort565Type){return az.UNSIGNED_SHORT_5_6_5}if(b===THREE.ByteType){return az.BYTE}if(b===THREE.ShortType){return az.SHORT}if(b===THREE.UnsignedShortType){return az.UNSIGNED_SHORT}if(b===THREE.IntType){return az.INT}if(b===THREE.UnsignedIntType){return az.UNSIGNED_INT}if(b===THREE.FloatType){return az.FLOAT}if(b===THREE.AlphaFormat){return az.ALPHA}if(b===THREE.RGBFormat){return az.RGB}if(b===THREE.RGBAFormat){return az.RGBA}if(b===THREE.LuminanceFormat){return az.LUMINANCE}if(b===THREE.LuminanceAlphaFormat){return az.LUMINANCE_ALPHA}if(b===THREE.AddEquation){return az.FUNC_ADD}if(b===THREE.SubtractEquation){return az.FUNC_SUBTRACT}if(b===THREE.ReverseSubtractEquation){return az.FUNC_REVERSE_SUBTRACT}if(b===THREE.ZeroFactor){return az.ZERO}if(b===THREE.OneFactor){return az.ONE}if(b===THREE.SrcColorFactor){return az.SRC_COLOR}if(b===THREE.OneMinusSrcColorFactor){return az.ONE_MINUS_SRC_COLOR}if(b===THREE.SrcAlphaFactor){return az.SRC_ALPHA}if(b===THREE.OneMinusSrcAlphaFactor){return az.ONE_MINUS_SRC_ALPHA}if(b===THREE.DstAlphaFactor){return az.DST_ALPHA}if(b===THREE.OneMinusDstAlphaFactor){return az.ONE_MINUS_DST_ALPHA}if(b===THREE.DstColorFactor){return az.DST_COLOR}if(b===THREE.OneMinusDstColorFactor){return az.ONE_MINUS_DST_COLOR}if(b===THREE.SrcAlphaSaturateFactor){return az.SRC_ALPHA_SATURATE}if(void 0!==X){if(b===THREE.RGB_S3TC_DXT1_Format){return X.COMPRESSED_RGB_S3TC_DXT1_EXT}if(b===THREE.RGBA_S3TC_DXT1_Format){return X.COMPRESSED_RGBA_S3TC_DXT1_EXT}if(b===THREE.RGBA_S3TC_DXT3_Format){return X.COMPRESSED_RGBA_S3TC_DXT3_EXT}if(b===THREE.RGBA_S3TC_DXT5_Format){return X.COMPRESSED_RGBA_S3TC_DXT5_EXT}}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);aP=aP||{};var a4=void 0!==aP.canvas?aP.canvas:document.createElement("canvas"),a0=void 0!==aP.context?aP.context:null,aT=void 0!==aP.precision?aP.precision:"highp",aY=void 0!==aP.alpha?aP.alpha:!1,bE=void 0!==aP.premultipliedAlpha?aP.premultipliedAlpha:!0,aV=void 0!==aP.antialias?aP.antialias:!1,bv=void 0!==aP.stencil?aP.stencil:!0,a9=void 0!==aP.preserveDrawingBuffer?aP.preserveDrawingBuffer:!1,ad=new THREE.Color(0),aU=0;this.domElement=a4;this.context=null;this.devicePixelRatio=void 0!==aP.devicePixelRatio?aP.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1;this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.gammaOutput=this.gammaInput=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var a3=this,ay=[],bz=0,aW=null,aN=null,aX=-1,by=null,M=null,bp=0,aL=-1,br=-1,bF=-1,bs=-1,aS=-1,o=-1,ah=-1,bG=-1,bw=null,bl=null,bx=null,bd=null,a1=0,aa=0,i=a4.width,aF=a4.height,am=0,Z=0,af=new Uint8Array(16),bh=new THREE.Frustum,bq=new THREE.Matrix4,a5=new THREE.Matrix4,bC=new THREE.Vector3,aD=new THREE.Vector3,bA=!0,a8={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},az,ai,bI,aR,X;(function(){try{var d={alpha:aY,premultipliedAlpha:bE,antialias:aV,stencil:bv,preserveDrawingBuffer:a9};az=a0||a4.getContext("webgl",d)||a4.getContext("experimental-webgl",d);if(null===az){throw"Error creating WebGL context."}}catch(c){console.error(c)}ai=az.getExtension("OES_texture_float");az.getExtension("OES_texture_float_linear");bI=az.getExtension("OES_standard_derivatives");aR=az.getExtension("EXT_texture_filter_anisotropic")||az.getExtension("MOZ_EXT_texture_filter_anisotropic")||az.getExtension("WEBKIT_EXT_texture_filter_anisotropic");X=az.getExtension("WEBGL_compressed_texture_s3tc")||az.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||az.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");ai||console.log("THREE.WebGLRenderer: Float textures not supported.");bI||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");aR||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");X||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");void 0===az.getShaderPrecisionFormat&&(az.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})})();az.clearColor(0,0,0,1);az.clearDepth(1);az.clearStencil(0);az.enable(az.DEPTH_TEST);az.depthFunc(az.LEQUAL);az.frontFace(az.CCW);az.cullFace(az.BACK);az.enable(az.CULL_FACE);az.enable(az.BLEND);az.blendEquation(az.FUNC_ADD);az.blendFunc(az.SRC_ALPHA,az.ONE_MINUS_SRC_ALPHA);az.viewport(a1,aa,i,aF);az.clearColor(ad.r,ad.g,ad.b,aU);this.context=az;var aw=az.getParameter(az.MAX_TEXTURE_IMAGE_UNITS),P=az.getParameter(az.MAX_VERTEX_TEXTURE_IMAGE_UNITS);az.getParameter(az.MAX_TEXTURE_SIZE);var ab=az.getParameter(az.MAX_CUBE_MAP_TEXTURE_SIZE),bu=aR?az.getParameter(aR.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,bB=0<P,aQ=bB&&ai;X&&az.getParameter(az.COMPRESSED_TEXTURE_FORMATS);var j=az.getShaderPrecisionFormat(az.VERTEX_SHADER,az.HIGH_FLOAT),bD=az.getShaderPrecisionFormat(az.VERTEX_SHADER,az.MEDIUM_FLOAT);az.getShaderPrecisionFormat(az.VERTEX_SHADER,az.LOW_FLOAT);var bj=az.getShaderPrecisionFormat(az.FRAGMENT_SHADER,az.HIGH_FLOAT),bt=az.getShaderPrecisionFormat(az.FRAGMENT_SHADER,az.MEDIUM_FLOAT);az.getShaderPrecisionFormat(az.FRAGMENT_SHADER,az.LOW_FLOAT);az.getShaderPrecisionFormat(az.VERTEX_SHADER,az.HIGH_INT);az.getShaderPrecisionFormat(az.VERTEX_SHADER,az.MEDIUM_INT);az.getShaderPrecisionFormat(az.VERTEX_SHADER,az.LOW_INT);az.getShaderPrecisionFormat(az.FRAGMENT_SHADER,az.HIGH_INT);az.getShaderPrecisionFormat(az.FRAGMENT_SHADER,az.MEDIUM_INT);az.getShaderPrecisionFormat(az.FRAGMENT_SHADER,az.LOW_INT);var aZ=0<j.precision&&0<bj.precision,aJ=0<bD.precision&&0<bt.precision;"highp"!==aT||aZ||(aJ?(aT="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(aT="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp")));"mediump"!==aT||aJ||(aT="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp"));this.getContext=function(){return az};this.supportsVertexTextures=function(){return bB};this.supportsFloatTextures=function(){return ai};this.supportsStandardDerivatives=function(){return bI};this.supportsCompressedTextureS3TC=function(){return X};this.getMaxAnisotropy=function(){return bu};this.getPrecision=function(){return aT};this.setSize=function(e,d,f){a4.width=e*this.devicePixelRatio;a4.height=d*this.devicePixelRatio;1!==this.devicePixelRatio&&!1!==f&&(a4.style.width=e+"px",a4.style.height=d+"px");this.setViewport(0,0,e,d)};this.setViewport=function(f,e,h,g){a1=f*this.devicePixelRatio;aa=e*this.devicePixelRatio;i=h*this.devicePixelRatio;aF=g*this.devicePixelRatio;az.viewport(a1,aa,i,aF)};this.setScissor=function(f,e,h,g){az.scissor(f*this.devicePixelRatio,e*this.devicePixelRatio,h*this.devicePixelRatio,g*this.devicePixelRatio)};this.enableScissorTest=function(b){b?az.enable(az.SCISSOR_TEST):az.disable(az.SCISSOR_TEST)};this.setClearColor=function(d,c){ad.set(d);aU=void 0!==c?c:1;az.clearColor(ad.r,ad.g,ad.b,aU)};this.setClearColorHex=function(d,c){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(d,c)};this.getClearColor=function(){return ad};this.getClearAlpha=function(){return aU};this.clear=function(f,e,h){var g=0;if(void 0===f||f){g|=az.COLOR_BUFFER_BIT}if(void 0===e||e){g|=az.DEPTH_BUFFER_BIT}if(void 0===h||h){g|=az.STENCIL_BUFFER_BIT}az.clear(g)};this.clearColor=function(){az.clear(az.COLOR_BUFFER_BIT)};this.clearDepth=function(){az.clear(az.DEPTH_BUFFER_BIT)};this.clearStencil=function(){az.clear(az.STENCIL_BUFFER_BIT)};this.clearTarget=function(f,e,h,g){this.setRenderTarget(f);this.clear(e,h,g)};this.addPostPlugin=function(b){b.init(this);this.renderPluginsPost.push(b)};this.addPrePlugin=function(b){b.init(this);this.renderPluginsPre.push(b)};this.updateShadowMap=function(d,c){aW=null;aX=by=bG=ah=bF=-1;bA=!0;br=aL=-1;this.shadowMapPlugin.update(d,c)};var ag=function(g){g=g.target;g.removeEventListener("dispose",ag);g.__webglInit=void 0;if(g instanceof THREE.BufferGeometry){var f=g.attributes,l;for(l in f){void 0!==f[l].buffer&&az.deleteBuffer(f[l].buffer)}a3.info.memory.geometries--}else{if(void 0!==g.geometryGroups){for(f in g.geometryGroups){l=g.geometryGroups[f];if(void 0!==l.numMorphTargets){for(var k=0,h=l.numMorphTargets;k<h;k++){az.deleteBuffer(l.__webglMorphTargetsBuffers[k])}}if(void 0!==l.numMorphNormals){for(k=0,h=l.numMorphNormals;k<h;k++){az.deleteBuffer(l.__webglMorphNormalsBuffers[k])}}aC(l)}}else{aC(g)}}},a7=function(b){b=b.target;b.removeEventListener("dispose",a7);b.image&&b.image.__webglTextureCube?az.deleteTexture(b.image.__webglTextureCube):b.__webglInit&&(b.__webglInit=!1,az.deleteTexture(b.__webglTexture));a3.info.memory.textures--},U=function(d){d=d.target;d.removeEventListener("dispose",U);if(d&&d.__webglTexture){if(az.deleteTexture(d.__webglTexture),d instanceof THREE.WebGLRenderTargetCube){for(var c=0;6>c;c++){az.deleteFramebuffer(d.__webglFramebuffer[c]),az.deleteRenderbuffer(d.__webglRenderbuffer[c])}}else{az.deleteFramebuffer(d.__webglFramebuffer),az.deleteRenderbuffer(d.__webglRenderbuffer)}}a3.info.memory.textures--},bH=function(b){b=b.target;b.removeEventListener("dispose",bH);ae(b)},aC=function(d){void 0!==d.__webglVertexBuffer&&az.deleteBuffer(d.__webglVertexBuffer);void 0!==d.__webglNormalBuffer&&az.deleteBuffer(d.__webglNormalBuffer);void 0!==d.__webglTangentBuffer&&az.deleteBuffer(d.__webglTangentBuffer);void 0!==d.__webglColorBuffer&&az.deleteBuffer(d.__webglColorBuffer);void 0!==d.__webglUVBuffer&&az.deleteBuffer(d.__webglUVBuffer);void 0!==d.__webglUV2Buffer&&az.deleteBuffer(d.__webglUV2Buffer);void 0!==d.__webglSkinIndicesBuffer&&az.deleteBuffer(d.__webglSkinIndicesBuffer);void 0!==d.__webglSkinWeightsBuffer&&az.deleteBuffer(d.__webglSkinWeightsBuffer);void 0!==d.__webglFaceBuffer&&az.deleteBuffer(d.__webglFaceBuffer);void 0!==d.__webglLineBuffer&&az.deleteBuffer(d.__webglLineBuffer);void 0!==d.__webglLineDistanceBuffer&&az.deleteBuffer(d.__webglLineDistanceBuffer);if(void 0!==d.__webglCustomAttributesList){for(var c in d.__webglCustomAttributesList){az.deleteBuffer(d.__webglCustomAttributesList[c].buffer)}}a3.info.memory.geometries--},ae=function(g){var f=g.program;if(void 0!==f){g.program=void 0;var l,k,h=!1;g=0;for(l=ay.length;g<l;g++){if(k=ay[g],k.program===f){k.usedTimes--;0===k.usedTimes&&(h=!0);break}}if(!0===h){h=[];g=0;for(l=ay.length;g<l;g++){k=ay[g],k.program!==f&&h.push(k)}ay=h;az.deleteProgram(f);a3.info.memory.programs--}}};this.renderBufferImmediate=function(J,I,H){J.hasPositions&&!J.__webglVertexBuffer&&(J.__webglVertexBuffer=az.createBuffer());J.hasNormals&&!J.__webglNormalBuffer&&(J.__webglNormalBuffer=az.createBuffer());J.hasUvs&&!J.__webglUvBuffer&&(J.__webglUvBuffer=az.createBuffer());J.hasColors&&!J.__webglColorBuffer&&(J.__webglColorBuffer=az.createBuffer());J.hasPositions&&(az.bindBuffer(az.ARRAY_BUFFER,J.__webglVertexBuffer),az.bufferData(az.ARRAY_BUFFER,J.positionArray,az.DYNAMIC_DRAW),az.enableVertexAttribArray(I.attributes.position),az.vertexAttribPointer(I.attributes.position,3,az.FLOAT,!1,0,0));if(J.hasNormals){az.bindBuffer(az.ARRAY_BUFFER,J.__webglNormalBuffer);if(H.shading===THREE.FlatShading){var G,F,E,D,C,B,A,v,u,t,m,K=3*J.count;for(m=0;m<K;m+=9){t=J.normalArray,G=t[m],F=t[m+1],E=t[m+2],D=t[m+3],B=t[m+4],v=t[m+5],C=t[m+6],A=t[m+7],u=t[m+8],G=(G+D+C)/3,F=(F+B+A)/3,E=(E+v+u)/3,t[m]=G,t[m+1]=F,t[m+2]=E,t[m+3]=G,t[m+4]=F,t[m+5]=E,t[m+6]=G,t[m+7]=F,t[m+8]=E}}az.bufferData(az.ARRAY_BUFFER,J.normalArray,az.DYNAMIC_DRAW);az.enableVertexAttribArray(I.attributes.normal);az.vertexAttribPointer(I.attributes.normal,3,az.FLOAT,!1,0,0)}J.hasUvs&&H.map&&(az.bindBuffer(az.ARRAY_BUFFER,J.__webglUvBuffer),az.bufferData(az.ARRAY_BUFFER,J.uvArray,az.DYNAMIC_DRAW),az.enableVertexAttribArray(I.attributes.uv),az.vertexAttribPointer(I.attributes.uv,2,az.FLOAT,!1,0,0));J.hasColors&&H.vertexColors!==THREE.NoColors&&(az.bindBuffer(az.ARRAY_BUFFER,J.__webglColorBuffer),az.bufferData(az.ARRAY_BUFFER,J.colorArray,az.DYNAMIC_DRAW),az.enableVertexAttribArray(I.attributes.color),az.vertexAttribPointer(I.attributes.color,3,az.FLOAT,!1,0,0));az.drawArrays(az.TRIANGLES,0,J.count);J.count=0};this.renderBufferDirect=function(E,D,C,B,A,v){if(!1!==B.visible){var u,m,k,h;u=bn(E,D,C,B,v);E=u.attributes;D=A.attributes;C=!1;u=16777215*A.id+2*u.id+(B.wireframe?1:0);u!==by&&(by=u,C=!0);C&&aB();if(v instanceof THREE.Mesh){if(v=D.index){A=A.offsets;1<A.length&&(C=!0);for(var g=0,G=A.length;g<G;g++){var F=A[g].index;if(C){for(m in E){k=E[m],u=D[m],0<=k&&(u?(h=u.itemSize,az.bindBuffer(az.ARRAY_BUFFER,u.buffer),aE(k),az.vertexAttribPointer(k,h,az.FLOAT,!1,0,F*h*4)):B.defaultAttributeValues&&(2===B.defaultAttributeValues[m].length?az.vertexAttrib2fv(k,B.defaultAttributeValues[m]):3===B.defaultAttributeValues[m].length&&az.vertexAttrib3fv(k,B.defaultAttributeValues[m])))}az.bindBuffer(az.ELEMENT_ARRAY_BUFFER,v.buffer)}az.drawElements(az.TRIANGLES,A[g].count,az.UNSIGNED_SHORT,2*A[g].start);a3.info.render.calls++;a3.info.render.vertices+=A[g].count;a3.info.render.faces+=A[g].count/3}}else{if(C){for(m in E){"index"!==m&&(k=E[m],u=D[m],0<=k&&(u?(h=u.itemSize,az.bindBuffer(az.ARRAY_BUFFER,u.buffer),aE(k),az.vertexAttribPointer(k,h,az.FLOAT,!1,0,0)):B.defaultAttributeValues&&B.defaultAttributeValues[m]&&(2===B.defaultAttributeValues[m].length?az.vertexAttrib2fv(k,B.defaultAttributeValues[m]):3===B.defaultAttributeValues[m].length&&az.vertexAttrib3fv(k,B.defaultAttributeValues[m]))))}}B=A.attributes.position;az.drawArrays(az.TRIANGLES,0,B.array.length/3);a3.info.render.calls++;a3.info.render.vertices+=B.array.length/3;a3.info.render.faces+=B.array.length/3/3}}else{if(v instanceof THREE.ParticleSystem){if(C){for(m in E){k=E[m],u=D[m],0<=k&&(u?(h=u.itemSize,az.bindBuffer(az.ARRAY_BUFFER,u.buffer),aE(k),az.vertexAttribPointer(k,h,az.FLOAT,!1,0,0)):B.defaultAttributeValues&&B.defaultAttributeValues[m]&&(2===B.defaultAttributeValues[m].length?az.vertexAttrib2fv(k,B.defaultAttributeValues[m]):3===B.defaultAttributeValues[m].length&&az.vertexAttrib3fv(k,B.defaultAttributeValues[m])))}}B=D.position;az.drawArrays(az.POINTS,0,B.array.length/3);a3.info.render.calls++;a3.info.render.points+=B.array.length/3}else{if(v instanceof THREE.Line){if(m=v.type===THREE.LineStrip?az.LINE_STRIP:az.LINES,bf(B.linewidth),v=D.index){for(A=A.offsets,1<A.length&&(C=!0),g=0,G=A.length;g<G;g++){F=A[g].index,C&&(aG(B,E,D,F),az.bindBuffer(az.ELEMENT_ARRAY_BUFFER,v.buffer)),az.drawElements(az.LINES,A[g].count,az.UNSIGNED_SHORT,2*A[g].start),a3.info.render.calls++,a3.info.render.vertices+=A[g].count}}else{C&&aG(B,E,D,0),B=D.position,az.drawArrays(m,0,B.array.length/3),a3.info.render.calls++,a3.info.render.points+=B.array.length}}}}}};this.renderBuffer=function(C,B,A,v,u,t){if(!1!==v.visible){var s,n;A=bn(C,B,A,v,t);C=A.attributes;B=!1;A=16777215*u.id+2*A.id+(v.wireframe?1:0);A!==by&&(by=A,B=!0);B&&aB();if(!v.morphTargets&&0<=C.position){B&&(az.bindBuffer(az.ARRAY_BUFFER,u.__webglVertexBuffer),aE(C.position),az.vertexAttribPointer(C.position,3,az.FLOAT,!1,0,0))}else{if(t.morphTargetBase){A=v.program.attributes;-1!==t.morphTargetBase&&0<=A.position?(az.bindBuffer(az.ARRAY_BUFFER,u.__webglMorphTargetsBuffers[t.morphTargetBase]),aE(A.position),az.vertexAttribPointer(A.position,3,az.FLOAT,!1,0,0)):0<=A.position&&(az.bindBuffer(az.ARRAY_BUFFER,u.__webglVertexBuffer),aE(A.position),az.vertexAttribPointer(A.position,3,az.FLOAT,!1,0,0));if(t.morphTargetForcedOrder.length){var m=0;n=t.morphTargetForcedOrder;for(s=t.morphTargetInfluences;m<v.numSupportedMorphTargets&&m<n.length;){0<=A["morphTarget"+m]&&(az.bindBuffer(az.ARRAY_BUFFER,u.__webglMorphTargetsBuffers[n[m]]),aE(A["morphTarget"+m]),az.vertexAttribPointer(A["morphTarget"+m],3,az.FLOAT,!1,0,0)),0<=A["morphNormal"+m]&&v.morphNormals&&(az.bindBuffer(az.ARRAY_BUFFER,u.__webglMorphNormalsBuffers[n[m]]),aE(A["morphNormal"+m]),az.vertexAttribPointer(A["morphNormal"+m],3,az.FLOAT,!1,0,0)),t.__webglMorphTargetInfluences[m]=s[n[m]],m++}}else{n=[];s=t.morphTargetInfluences;var k,h=s.length;for(k=0;k<h;k++){m=s[k],0<m&&n.push([m,k])}n.length>v.numSupportedMorphTargets?(n.sort(ax),n.length=v.numSupportedMorphTargets):n.length>v.numSupportedMorphNormals?n.sort(ax):0===n.length&&n.push([0,0]);for(m=0;m<v.numSupportedMorphTargets;){n[m]?(k=n[m][1],0<=A["morphTarget"+m]&&(az.bindBuffer(az.ARRAY_BUFFER,u.__webglMorphTargetsBuffers[k]),aE(A["morphTarget"+m]),az.vertexAttribPointer(A["morphTarget"+m],3,az.FLOAT,!1,0,0)),0<=A["morphNormal"+m]&&v.morphNormals&&(az.bindBuffer(az.ARRAY_BUFFER,u.__webglMorphNormalsBuffers[k]),aE(A["morphNormal"+m]),az.vertexAttribPointer(A["morphNormal"+m],3,az.FLOAT,!1,0,0)),t.__webglMorphTargetInfluences[m]=s[k]):t.__webglMorphTargetInfluences[m]=0,m++}}null!==v.program.uniforms.morphTargetInfluences&&az.uniform1fv(v.program.uniforms.morphTargetInfluences,t.__webglMorphTargetInfluences)}}if(B){if(u.__webglCustomAttributesList){for(s=0,n=u.__webglCustomAttributesList.length;s<n;s++){A=u.__webglCustomAttributesList[s],0<=C[A.buffer.belongsToAttribute]&&(az.bindBuffer(az.ARRAY_BUFFER,A.buffer),aE(C[A.buffer.belongsToAttribute]),az.vertexAttribPointer(C[A.buffer.belongsToAttribute],A.size,az.FLOAT,!1,0,0))}}0<=C.color&&(0<t.geometry.colors.length||0<t.geometry.faces.length?(az.bindBuffer(az.ARRAY_BUFFER,u.__webglColorBuffer),aE(C.color),az.vertexAttribPointer(C.color,3,az.FLOAT,!1,0,0)):v.defaultAttributeValues&&az.vertexAttrib3fv(C.color,v.defaultAttributeValues.color));0<=C.normal&&(az.bindBuffer(az.ARRAY_BUFFER,u.__webglNormalBuffer),aE(C.normal),az.vertexAttribPointer(C.normal,3,az.FLOAT,!1,0,0));0<=C.tangent&&(az.bindBuffer(az.ARRAY_BUFFER,u.__webglTangentBuffer),aE(C.tangent),az.vertexAttribPointer(C.tangent,4,az.FLOAT,!1,0,0));0<=C.uv&&(t.geometry.faceVertexUvs[0]?(az.bindBuffer(az.ARRAY_BUFFER,u.__webglUVBuffer),aE(C.uv),az.vertexAttribPointer(C.uv,2,az.FLOAT,!1,0,0)):v.defaultAttributeValues&&az.vertexAttrib2fv(C.uv,v.defaultAttributeValues.uv));0<=C.uv2&&(t.geometry.faceVertexUvs[1]?(az.bindBuffer(az.ARRAY_BUFFER,u.__webglUV2Buffer),aE(C.uv2),az.vertexAttribPointer(C.uv2,2,az.FLOAT,!1,0,0)):v.defaultAttributeValues&&az.vertexAttrib2fv(C.uv2,v.defaultAttributeValues.uv2));v.skinning&&0<=C.skinIndex&&0<=C.skinWeight&&(az.bindBuffer(az.ARRAY_BUFFER,u.__webglSkinIndicesBuffer),aE(C.skinIndex),az.vertexAttribPointer(C.skinIndex,4,az.FLOAT,!1,0,0),az.bindBuffer(az.ARRAY_BUFFER,u.__webglSkinWeightsBuffer),aE(C.skinWeight),az.vertexAttribPointer(C.skinWeight,4,az.FLOAT,!1,0,0));0<=C.lineDistance&&(az.bindBuffer(az.ARRAY_BUFFER,u.__webglLineDistanceBuffer),aE(C.lineDistance),az.vertexAttribPointer(C.lineDistance,1,az.FLOAT,!1,0,0))}t instanceof THREE.Mesh?(v.wireframe?(bf(v.wireframeLinewidth),B&&az.bindBuffer(az.ELEMENT_ARRAY_BUFFER,u.__webglLineBuffer),az.drawElements(az.LINES,u.__webglLineCount,az.UNSIGNED_SHORT,0)):(B&&az.bindBuffer(az.ELEMENT_ARRAY_BUFFER,u.__webglFaceBuffer),az.drawElements(az.TRIANGLES,u.__webglFaceCount,az.UNSIGNED_SHORT,0)),a3.info.render.calls++,a3.info.render.vertices+=u.__webglFaceCount,a3.info.render.faces+=u.__webglFaceCount/3):t instanceof THREE.Line?(t=t.type===THREE.LineStrip?az.LINE_STRIP:az.LINES,bf(v.linewidth),az.drawArrays(t,0,u.__webglLineCount),a3.info.render.calls++):t instanceof THREE.ParticleSystem&&(az.drawArrays(az.POINTS,0,u.__webglParticleCount),a3.info.render.calls++,a3.info.render.points+=u.__webglParticleCount)}};this.render=function(F,E,D,C){if(!1===E instanceof THREE.Camera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")}else{var B,A,s,r,q=F.__lights,l=F.fog;aX=-1;bA=!0;!0===F.autoUpdate&&F.updateMatrixWorld();void 0===E.parent&&E.updateMatrixWorld();E.matrixWorldInverse.getInverse(E.matrixWorld);bq.multiplyMatrices(E.projectionMatrix,E.matrixWorldInverse);bh.setFromMatrix(bq);this.autoUpdateObjects&&this.initWebGLObjects(F);ar(this.renderPluginsPre,F,E);a3.info.render.calls=0;a3.info.render.vertices=0;a3.info.render.faces=0;a3.info.render.points=0;this.setRenderTarget(D);(this.autoClear||C)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);r=F.__webglObjects;C=0;for(B=r.length;C<B;C++){if(A=r[C],s=A.object,A.id=C,A.render=!1,s.visible&&(!(s instanceof THREE.Mesh||s instanceof THREE.ParticleSystem)||!s.frustumCulled||bh.intersectsObject(s))){var m=s;m._modelViewMatrix.multiplyMatrices(E.matrixWorldInverse,m.matrixWorld);m._normalMatrix.getNormalMatrix(m._modelViewMatrix);var m=A,I=m.object,H=m.buffer,G=I.geometry,I=I.material;I instanceof THREE.MeshFaceMaterial?(I=I.materials[G instanceof THREE.BufferGeometry?0:H.materialIndex],I.transparent?(m.transparent=I,m.opaque=null):(m.opaque=I,m.transparent=null)):I&&(I.transparent?(m.transparent=I,m.opaque=null):(m.opaque=I,m.transparent=null));A.render=!0;!0===this.sortObjects&&(null!==s.renderDepth?A.z=s.renderDepth:(bC.setFromMatrixPosition(s.matrixWorld),bC.applyProjection(bq),A.z=bC.z))}}this.sortObjects&&r.sort(aA);r=F.__webglObjectsImmediate;C=0;for(B=r.length;C<B;C++){A=r[C],s=A.object,s.visible&&(s._modelViewMatrix.multiplyMatrices(E.matrixWorldInverse,s.matrixWorld),s._normalMatrix.getNormalMatrix(s._modelViewMatrix),s=A.object.material,s.transparent?(A.transparent=s,A.opaque=null):(A.opaque=s,A.transparent=null))}F.overrideMaterial?(C=F.overrideMaterial,this.setBlending(C.blending,C.blendEquation,C.blendSrc,C.blendDst),this.setDepthTest(C.depthTest),this.setDepthWrite(C.depthWrite),bb(C.polygonOffset,C.polygonOffsetFactor,C.polygonOffsetUnits),at(F.__webglObjects,!1,"",E,q,l,!0,C),au(F.__webglObjectsImmediate,"",E,q,l,!1,C)):(C=null,this.setBlending(THREE.NoBlending),at(F.__webglObjects,!0,"opaque",E,q,l,!1,C),au(F.__webglObjectsImmediate,"opaque",E,q,l,!1,C),at(F.__webglObjects,!1,"transparent",E,q,l,!0,C),au(F.__webglObjectsImmediate,"transparent",E,q,l,!0,C));ar(this.renderPluginsPost,F,E);D&&D.generateMipmaps&&D.minFilter!==THREE.NearestFilter&&D.minFilter!==THREE.LinearFilter&&(D instanceof THREE.WebGLRenderTargetCube?(az.bindTexture(az.TEXTURE_CUBE_MAP,D.__webglTexture),az.generateMipmap(az.TEXTURE_CUBE_MAP),az.bindTexture(az.TEXTURE_CUBE_MAP,null)):(az.bindTexture(az.TEXTURE_2D,D.__webglTexture),az.generateMipmap(az.TEXTURE_2D),az.bindTexture(az.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(h,g,n,m,l){var k=bn(h,g,n,m,l);by=-1;a3.setMaterialFaces(m);l.immediateRenderCallback?l.immediateRenderCallback(k,az,bh):l.render(function(b){a3.renderBufferImmediate(b,k,m)})};this.initWebGLObjects=function(dc){dc.__webglObjects||(dc.__webglObjects=[],dc.__webglObjectsImmediate=[],dc.__webglSprites=[],dc.__webglFlares=[]);for(;dc.__objectsAdded.length;){ap(dc.__objectsAdded[0],dc),dc.__objectsAdded.splice(0,1)}for(;dc.__objectsRemoved.length;){aq(dc.__objectsRemoved[0],dc),dc.__objectsRemoved.splice(0,1)}for(var c9=0,c6=dc.__webglObjects.length;c9<c6;c9++){var c5=dc.__webglObjects[c9].object;void 0===c5.__webglInit&&(void 0!==c5.__webglActive&&aq(c5,dc),ap(c5,dc));var c4=c5,c3=c4.geometry,c2=void 0,c0=void 0,cY=void 0;if(c3 instanceof THREE.BufferGeometry){var cX=az.DYNAMIC_DRAW,cW=c3.attributes,cT=void 0,cV=void 0;for(cT in cW){cV=cW[cT],cV.needsUpdate&&("index"===cT?(az.bindBuffer(az.ELEMENT_ARRAY_BUFFER,cV.buffer),az.bufferData(az.ELEMENT_ARRAY_BUFFER,cV.array,cX)):(az.bindBuffer(az.ARRAY_BUFFER,cV.buffer),az.bufferData(az.ARRAY_BUFFER,cV.array,cX)),cV.needsUpdate=!1)}}else{if(c4 instanceof THREE.Mesh){for(var dM=0,dC=c3.geometryGroupsList.length;dM<dC;dM++){if(c2=c3.geometryGroupsList[dM],cY=aK(c4,c2),c3.buffersNeedUpdate&&aM(c2,c4),c0=cY.attributes&&ao(cY),c3.verticesNeedUpdate||c3.morphTargetsNeedUpdate||c3.elementsNeedUpdate||c3.uvsNeedUpdate||c3.normalsNeedUpdate||c3.colorsNeedUpdate||c3.tangentsNeedUpdate||c0){var dN=c2,dK=c4,dL=az.DYNAMIC_DRAW,dI=!c3.dynamic,dG=cY;if(dN.__inittedArrays){var dE=aI(dG),dw=dG.vertexColors?dG.vertexColors:!1,dz=aH(dG),dx=dE===THREE.SmoothShading,dJ=void 0,dB=void 0,du=void 0,dA=void 0,c8=void 0,ds=void 0,dj=void 0,dl=void 0,dm=void 0,d2=void 0,co=void 0,dq=void 0,dp=void 0,di=void 0,dh=void 0,cf=void 0,u=void 0,cO=void 0,de=void 0,cv=void 0,ck=void 0,cc=void 0,dY=void 0,bK=void 0,b2=void 0,d=void 0,dU=void 0,cK=void 0,cs=void 0,dH=void 0,bR=void 0,b8=void 0,cQ=void 0,dR=void 0,d7=void 0,cI=void 0,bO=void 0,n=void 0,dW=void 0,dt=void 0,ch=0,b0=0,cm=0,b4=0,bV=0,b1=0,cC=0,cy=0,cE=0,bX=0,ef=0,dv=0,cM=void 0,bS=dN.__vertexArray,c7=dN.__uvArray,cN=dN.__uv2Array,c1=dN.__normalArray,cq=dN.__tangentArray,bJ=dN.__colorArray,dP=dN.__skinIndexArray,d0=dN.__skinWeightArray,cJ=dN.__morphTargetsArrays,ed=dN.__morphNormalsArrays,b5=dN.__webglCustomAttributesList,dy=void 0,cd=dN.__faceArray,bW=dN.__lineArray,bM=dK.geometry,b7=bM.elementsNeedUpdate,cg=bM.uvsNeedUpdate,dd=bM.normalsNeedUpdate,cP=bM.tangentsNeedUpdate,cG=bM.colorsNeedUpdate,cw=bM.morphTargetsNeedUpdate,cD=bM.vertices,cF=dN.faces3,c=bM.faces,bY=bM.faceVertexUvs[0],bP=bM.faceVertexUvs[1],ct=bM.skinIndices,b3=bM.skinWeights,bU=bM.morphTargets,v=bM.morphNormals;if(bM.verticesNeedUpdate){dJ=0;for(dB=cF.length;dJ<dB;dJ++){dA=c[cF[dJ]],dq=cD[dA.a],dp=cD[dA.b],di=cD[dA.c],bS[b0]=dq.x,bS[b0+1]=dq.y,bS[b0+2]=dq.z,bS[b0+3]=dp.x,bS[b0+4]=dp.y,bS[b0+5]=dp.z,bS[b0+6]=di.x,bS[b0+7]=di.y,bS[b0+8]=di.z,b0+=9}az.bindBuffer(az.ARRAY_BUFFER,dN.__webglVertexBuffer);az.bufferData(az.ARRAY_BUFFER,bS,dL)}if(cw){for(d7=0,cI=bU.length;d7<cI;d7++){dJ=ef=0;for(dB=cF.length;dJ<dB;dJ++){dW=cF[dJ],dA=c[dW],dq=bU[d7].vertices[dA.a],dp=bU[d7].vertices[dA.b],di=bU[d7].vertices[dA.c],bO=cJ[d7],bO[ef]=dq.x,bO[ef+1]=dq.y,bO[ef+2]=dq.z,bO[ef+3]=dp.x,bO[ef+4]=dp.y,bO[ef+5]=dp.z,bO[ef+6]=di.x,bO[ef+7]=di.y,bO[ef+8]=di.z,dG.morphNormals&&(dx?(dt=v[d7].vertexNormals[dW],cO=dt.a,de=dt.b,cv=dt.c):cv=de=cO=v[d7].faceNormals[dW],n=ed[d7],n[ef]=cO.x,n[ef+1]=cO.y,n[ef+2]=cO.z,n[ef+3]=de.x,n[ef+4]=de.y,n[ef+5]=de.z,n[ef+6]=cv.x,n[ef+7]=cv.y,n[ef+8]=cv.z),ef+=9}az.bindBuffer(az.ARRAY_BUFFER,dN.__webglMorphTargetsBuffers[d7]);az.bufferData(az.ARRAY_BUFFER,cJ[d7],dL);dG.morphNormals&&(az.bindBuffer(az.ARRAY_BUFFER,dN.__webglMorphNormalsBuffers[d7]),az.bufferData(az.ARRAY_BUFFER,ed[d7],dL))}}if(b3.length){dJ=0;for(dB=cF.length;dJ<dB;dJ++){dA=c[cF[dJ]],bK=b3[dA.a],b2=b3[dA.b],d=b3[dA.c],d0[bX]=bK.x,d0[bX+1]=bK.y,d0[bX+2]=bK.z,d0[bX+3]=bK.w,d0[bX+4]=b2.x,d0[bX+5]=b2.y,d0[bX+6]=b2.z,d0[bX+7]=b2.w,d0[bX+8]=d.x,d0[bX+9]=d.y,d0[bX+10]=d.z,d0[bX+11]=d.w,dU=ct[dA.a],cK=ct[dA.b],cs=ct[dA.c],dP[bX]=dU.x,dP[bX+1]=dU.y,dP[bX+2]=dU.z,dP[bX+3]=dU.w,dP[bX+4]=cK.x,dP[bX+5]=cK.y,dP[bX+6]=cK.z,dP[bX+7]=cK.w,dP[bX+8]=cs.x,dP[bX+9]=cs.y,dP[bX+10]=cs.z,dP[bX+11]=cs.w,bX+=12}0<bX&&(az.bindBuffer(az.ARRAY_BUFFER,dN.__webglSkinIndicesBuffer),az.bufferData(az.ARRAY_BUFFER,dP,dL),az.bindBuffer(az.ARRAY_BUFFER,dN.__webglSkinWeightsBuffer),az.bufferData(az.ARRAY_BUFFER,d0,dL))}if(cG&&dw){dJ=0;for(dB=cF.length;dJ<dB;dJ++){dA=c[cF[dJ]],dj=dA.vertexColors,dl=dA.color,3===dj.length&&dw===THREE.VertexColors?(ck=dj[0],cc=dj[1],dY=dj[2]):dY=cc=ck=dl,bJ[cE]=ck.r,bJ[cE+1]=ck.g,bJ[cE+2]=ck.b,bJ[cE+3]=cc.r,bJ[cE+4]=cc.g,bJ[cE+5]=cc.b,bJ[cE+6]=dY.r,bJ[cE+7]=dY.g,bJ[cE+8]=dY.b,cE+=9}0<cE&&(az.bindBuffer(az.ARRAY_BUFFER,dN.__webglColorBuffer),az.bufferData(az.ARRAY_BUFFER,bJ,dL))}if(cP&&bM.hasTangents){dJ=0;for(dB=cF.length;dJ<dB;dJ++){dA=c[cF[dJ]],dm=dA.vertexTangents,dh=dm[0],cf=dm[1],u=dm[2],cq[cC]=dh.x,cq[cC+1]=dh.y,cq[cC+2]=dh.z,cq[cC+3]=dh.w,cq[cC+4]=cf.x,cq[cC+5]=cf.y,cq[cC+6]=cf.z,cq[cC+7]=cf.w,cq[cC+8]=u.x,cq[cC+9]=u.y,cq[cC+10]=u.z,cq[cC+11]=u.w,cC+=12}az.bindBuffer(az.ARRAY_BUFFER,dN.__webglTangentBuffer);az.bufferData(az.ARRAY_BUFFER,cq,dL)}if(dd&&dE){dJ=0;for(dB=cF.length;dJ<dB;dJ++){if(dA=c[cF[dJ]],c8=dA.vertexNormals,ds=dA.normal,3===c8.length&&dx){for(dH=0;3>dH;dH++){b8=c8[dH],c1[b1]=b8.x,c1[b1+1]=b8.y,c1[b1+2]=b8.z,b1+=3}}else{for(dH=0;3>dH;dH++){c1[b1]=ds.x,c1[b1+1]=ds.y,c1[b1+2]=ds.z,b1+=3}}}az.bindBuffer(az.ARRAY_BUFFER,dN.__webglNormalBuffer);az.bufferData(az.ARRAY_BUFFER,c1,dL)}if(cg&&bY&&dz){dJ=0;for(dB=cF.length;dJ<dB;dJ++){if(du=cF[dJ],d2=bY[du],void 0!==d2){for(dH=0;3>dH;dH++){cQ=d2[dH],c7[cm]=cQ.x,c7[cm+1]=cQ.y,cm+=2}}}0<cm&&(az.bindBuffer(az.ARRAY_BUFFER,dN.__webglUVBuffer),az.bufferData(az.ARRAY_BUFFER,c7,dL))}if(cg&&bP&&dz){dJ=0;for(dB=cF.length;dJ<dB;dJ++){if(du=cF[dJ],co=bP[du],void 0!==co){for(dH=0;3>dH;dH++){dR=co[dH],cN[b4]=dR.x,cN[b4+1]=dR.y,b4+=2}}}0<b4&&(az.bindBuffer(az.ARRAY_BUFFER,dN.__webglUV2Buffer),az.bufferData(az.ARRAY_BUFFER,cN,dL))}if(b7){dJ=0;for(dB=cF.length;dJ<dB;dJ++){cd[bV]=ch,cd[bV+1]=ch+1,cd[bV+2]=ch+2,bV+=3,bW[cy]=ch,bW[cy+1]=ch+1,bW[cy+2]=ch,bW[cy+3]=ch+2,bW[cy+4]=ch+1,bW[cy+5]=ch+2,cy+=6,ch+=3}az.bindBuffer(az.ELEMENT_ARRAY_BUFFER,dN.__webglFaceBuffer);az.bufferData(az.ELEMENT_ARRAY_BUFFER,cd,dL);az.bindBuffer(az.ELEMENT_ARRAY_BUFFER,dN.__webglLineBuffer);az.bufferData(az.ELEMENT_ARRAY_BUFFER,bW,dL)}if(b5){for(dH=0,bR=b5.length;dH<bR;dH++){if(dy=b5[dH],dy.__original.needsUpdate){dv=0;if(1===dy.size){if(void 0===dy.boundTo||"vertices"===dy.boundTo){for(dJ=0,dB=cF.length;dJ<dB;dJ++){dA=c[cF[dJ]],dy.array[dv]=dy.value[dA.a],dy.array[dv+1]=dy.value[dA.b],dy.array[dv+2]=dy.value[dA.c],dv+=3}}else{if("faces"===dy.boundTo){for(dJ=0,dB=cF.length;dJ<dB;dJ++){cM=dy.value[cF[dJ]],dy.array[dv]=cM,dy.array[dv+1]=cM,dy.array[dv+2]=cM,dv+=3}}}}else{if(2===dy.size){if(void 0===dy.boundTo||"vertices"===dy.boundTo){for(dJ=0,dB=cF.length;dJ<dB;dJ++){dA=c[cF[dJ]],dq=dy.value[dA.a],dp=dy.value[dA.b],di=dy.value[dA.c],dy.array[dv]=dq.x,dy.array[dv+1]=dq.y,dy.array[dv+2]=dp.x,dy.array[dv+3]=dp.y,dy.array[dv+4]=di.x,dy.array[dv+5]=di.y,dv+=6}}else{if("faces"===dy.boundTo){for(dJ=0,dB=cF.length;dJ<dB;dJ++){di=dp=dq=cM=dy.value[cF[dJ]],dy.array[dv]=dq.x,dy.array[dv+1]=dq.y,dy.array[dv+2]=dp.x,dy.array[dv+3]=dp.y,dy.array[dv+4]=di.x,dy.array[dv+5]=di.y,dv+=6}}}}else{if(3===dy.size){var b6;b6="c"===dy.type?["r","g","b"]:["x","y","z"];if(void 0===dy.boundTo||"vertices"===dy.boundTo){for(dJ=0,dB=cF.length;dJ<dB;dJ++){dA=c[cF[dJ]],dq=dy.value[dA.a],dp=dy.value[dA.b],di=dy.value[dA.c],dy.array[dv]=dq[b6[0]],dy.array[dv+1]=dq[b6[1]],dy.array[dv+2]=dq[b6[2]],dy.array[dv+3]=dp[b6[0]],dy.array[dv+4]=dp[b6[1]],dy.array[dv+5]=dp[b6[2]],dy.array[dv+6]=di[b6[0]],dy.array[dv+7]=di[b6[1]],dy.array[dv+8]=di[b6[2]],dv+=9}}else{if("faces"===dy.boundTo){for(dJ=0,dB=cF.length;dJ<dB;dJ++){di=dp=dq=cM=dy.value[cF[dJ]],dy.array[dv]=dq[b6[0]],dy.array[dv+1]=dq[b6[1]],dy.array[dv+2]=dq[b6[2]],dy.array[dv+3]=dp[b6[0]],dy.array[dv+4]=dp[b6[1]],dy.array[dv+5]=dp[b6[2]],dy.array[dv+6]=di[b6[0]],dy.array[dv+7]=di[b6[1]],dy.array[dv+8]=di[b6[2]],dv+=9}}else{if("faceVertices"===dy.boundTo){for(dJ=0,dB=cF.length;dJ<dB;dJ++){cM=dy.value[cF[dJ]],dq=cM[0],dp=cM[1],di=cM[2],dy.array[dv]=dq[b6[0]],dy.array[dv+1]=dq[b6[1]],dy.array[dv+2]=dq[b6[2]],dy.array[dv+3]=dp[b6[0]],dy.array[dv+4]=dp[b6[1]],dy.array[dv+5]=dp[b6[2]],dy.array[dv+6]=di[b6[0]],dy.array[dv+7]=di[b6[1]],dy.array[dv+8]=di[b6[2]],dv+=9}}}}}else{if(4===dy.size){if(void 0===dy.boundTo||"vertices"===dy.boundTo){for(dJ=0,dB=cF.length;dJ<dB;dJ++){dA=c[cF[dJ]],dq=dy.value[dA.a],dp=dy.value[dA.b],di=dy.value[dA.c],dy.array[dv]=dq.x,dy.array[dv+1]=dq.y,dy.array[dv+2]=dq.z,dy.array[dv+3]=dq.w,dy.array[dv+4]=dp.x,dy.array[dv+5]=dp.y,dy.array[dv+6]=dp.z,dy.array[dv+7]=dp.w,dy.array[dv+8]=di.x,dy.array[dv+9]=di.y,dy.array[dv+10]=di.z,dy.array[dv+11]=di.w,dv+=12}}else{if("faces"===dy.boundTo){for(dJ=0,dB=cF.length;dJ<dB;dJ++){di=dp=dq=cM=dy.value[cF[dJ]],dy.array[dv]=dq.x,dy.array[dv+1]=dq.y,dy.array[dv+2]=dq.z,dy.array[dv+3]=dq.w,dy.array[dv+4]=dp.x,dy.array[dv+5]=dp.y,dy.array[dv+6]=dp.z,dy.array[dv+7]=dp.w,dy.array[dv+8]=di.x,dy.array[dv+9]=di.y,dy.array[dv+10]=di.z,dy.array[dv+11]=di.w,dv+=12}}else{if("faceVertices"===dy.boundTo){for(dJ=0,dB=cF.length;dJ<dB;dJ++){cM=dy.value[cF[dJ]],dq=cM[0],dp=cM[1],di=cM[2],dy.array[dv]=dq.x,dy.array[dv+1]=dq.y,dy.array[dv+2]=dq.z,dy.array[dv+3]=dq.w,dy.array[dv+4]=dp.x,dy.array[dv+5]=dp.y,dy.array[dv+6]=dp.z,dy.array[dv+7]=dp.w,dy.array[dv+8]=di.x,dy.array[dv+9]=di.y,dy.array[dv+10]=di.z,dy.array[dv+11]=di.w,dv+=12}}}}}}}}az.bindBuffer(az.ARRAY_BUFFER,dy.buffer);az.bufferData(az.ARRAY_BUFFER,dy.array,dL)}}}dI&&(delete dN.__inittedArrays,delete dN.__colorArray,delete dN.__normalArray,delete dN.__tangentArray,delete dN.__uvArray,delete dN.__uv2Array,delete dN.__faceArray,delete dN.__vertexArray,delete dN.__lineArray,delete dN.__skinIndexArray,delete dN.__skinWeightArray)}}}c3.verticesNeedUpdate=!1;c3.morphTargetsNeedUpdate=!1;c3.elementsNeedUpdate=!1;c3.uvsNeedUpdate=!1;c3.normalsNeedUpdate=!1;c3.colorsNeedUpdate=!1;c3.tangentsNeedUpdate=!1;c3.buffersNeedUpdate=!1;cY.attributes&&an(cY)}else{if(c4 instanceof THREE.Line){cY=aK(c4,c3);c0=cY.attributes&&ao(cY);if(c3.verticesNeedUpdate||c3.colorsNeedUpdate||c3.lineDistancesNeedUpdate||c0){var dF=c3,bL=az.DYNAMIC_DRAW,t=void 0,ee=void 0,d3=void 0,e=void 0,cA=void 0,d8=void 0,eg=dF.vertices,d5=dF.colors,dS=dF.lineDistances,cB=eg.length,cp=d5.length,dO=dS.length,dV=dF.__vertexArray,dr=dF.__colorArray,df=dF.__lineDistanceArray,dZ=dF.colorsNeedUpdate,dD=dF.lineDistancesNeedUpdate,ci=dF.__webglCustomAttributesList,cZ=void 0,cR=void 0,d4=void 0,dX=void 0,f=void 0,cU=void 0;if(dF.verticesNeedUpdate){for(t=0;t<cB;t++){e=eg[t],cA=3*t,dV[cA]=e.x,dV[cA+1]=e.y,dV[cA+2]=e.z}az.bindBuffer(az.ARRAY_BUFFER,dF.__webglVertexBuffer);az.bufferData(az.ARRAY_BUFFER,dV,bL)}if(dZ){for(ee=0;ee<cp;ee++){d8=d5[ee],cA=3*ee,dr[cA]=d8.r,dr[cA+1]=d8.g,dr[cA+2]=d8.b}az.bindBuffer(az.ARRAY_BUFFER,dF.__webglColorBuffer);az.bufferData(az.ARRAY_BUFFER,dr,bL)}if(dD){for(d3=0;d3<dO;d3++){df[d3]=dS[d3]}az.bindBuffer(az.ARRAY_BUFFER,dF.__webglLineDistanceBuffer);az.bufferData(az.ARRAY_BUFFER,df,bL)}if(ci){for(cZ=0,cR=ci.length;cZ<cR;cZ++){if(cU=ci[cZ],cU.needsUpdate&&(void 0===cU.boundTo||"vertices"===cU.boundTo)){cA=0;dX=cU.value.length;if(1===cU.size){for(d4=0;d4<dX;d4++){cU.array[d4]=cU.value[d4]}}else{if(2===cU.size){for(d4=0;d4<dX;d4++){f=cU.value[d4],cU.array[cA]=f.x,cU.array[cA+1]=f.y,cA+=2}}else{if(3===cU.size){if("c"===cU.type){for(d4=0;d4<dX;d4++){f=cU.value[d4],cU.array[cA]=f.r,cU.array[cA+1]=f.g,cU.array[cA+2]=f.b,cA+=3}}else{for(d4=0;d4<dX;d4++){f=cU.value[d4],cU.array[cA]=f.x,cU.array[cA+1]=f.y,cU.array[cA+2]=f.z,cA+=3}}}else{if(4===cU.size){for(d4=0;d4<dX;d4++){f=cU.value[d4],cU.array[cA]=f.x,cU.array[cA+1]=f.y,cU.array[cA+2]=f.z,cU.array[cA+3]=f.w,cA+=4}}}}}az.bindBuffer(az.ARRAY_BUFFER,cU.buffer);az.bufferData(az.ARRAY_BUFFER,cU.array,bL)}}}}c3.verticesNeedUpdate=!1;c3.colorsNeedUpdate=!1;c3.lineDistancesNeedUpdate=!1;cY.attributes&&an(cY)}else{if(c4 instanceof THREE.ParticleSystem){cY=aK(c4,c3);c0=cY.attributes&&ao(cY);if(c3.verticesNeedUpdate||c3.colorsNeedUpdate||c4.sortParticles||c0){var d6=c3,b9=az.DYNAMIC_DRAW,dQ=c4,d9=void 0,dT=void 0,dg=void 0,dk=void 0,cS=void 0,ce=void 0,cL=d6.vertices,bZ=cL.length,bQ=d6.colors,cH=bQ.length,bN=d6.__vertexArray,m=d6.__colorArray,cz=d6.__sortArray,cx=d6.verticesNeedUpdate,cl=d6.colorsNeedUpdate,cn=d6.__webglCustomAttributesList,cu=void 0,cr=void 0,d1=void 0,cj=void 0,bT=void 0,dn=void 0;if(dQ.sortParticles){a5.copy(bq);a5.multiply(dQ.matrixWorld);for(d9=0;d9<bZ;d9++){dg=cL[d9],bC.copy(dg),bC.applyProjection(a5),cz[d9]=[bC.z,d9]}cz.sort(ax);for(d9=0;d9<bZ;d9++){dg=cL[cz[d9][1]],dk=3*d9,bN[dk]=dg.x,bN[dk+1]=dg.y,bN[dk+2]=dg.z}for(dT=0;dT<cH;dT++){dk=3*dT,ce=bQ[cz[dT][1]],m[dk]=ce.r,m[dk+1]=ce.g,m[dk+2]=ce.b}if(cn){for(cu=0,cr=cn.length;cu<cr;cu++){if(dn=cn[cu],void 0===dn.boundTo||"vertices"===dn.boundTo){if(dk=0,cj=dn.value.length,1===dn.size){for(d1=0;d1<cj;d1++){cS=cz[d1][1],dn.array[d1]=dn.value[cS]}}else{if(2===dn.size){for(d1=0;d1<cj;d1++){cS=cz[d1][1],bT=dn.value[cS],dn.array[dk]=bT.x,dn.array[dk+1]=bT.y,dk+=2}}else{if(3===dn.size){if("c"===dn.type){for(d1=0;d1<cj;d1++){cS=cz[d1][1],bT=dn.value[cS],dn.array[dk]=bT.r,dn.array[dk+1]=bT.g,dn.array[dk+2]=bT.b,dk+=3}}else{for(d1=0;d1<cj;d1++){cS=cz[d1][1],bT=dn.value[cS],dn.array[dk]=bT.x,dn.array[dk+1]=bT.y,dn.array[dk+2]=bT.z,dk+=3}}}else{if(4===dn.size){for(d1=0;d1<cj;d1++){cS=cz[d1][1],bT=dn.value[cS],dn.array[dk]=bT.x,dn.array[dk+1]=bT.y,dn.array[dk+2]=bT.z,dn.array[dk+3]=bT.w,dk+=4}}}}}}}}}else{if(cx){for(d9=0;d9<bZ;d9++){dg=cL[d9],dk=3*d9,bN[dk]=dg.x,bN[dk+1]=dg.y,bN[dk+2]=dg.z}}if(cl){for(dT=0;dT<cH;dT++){ce=bQ[dT],dk=3*dT,m[dk]=ce.r,m[dk+1]=ce.g,m[dk+2]=ce.b}}if(cn){for(cu=0,cr=cn.length;cu<cr;cu++){if(dn=cn[cu],dn.needsUpdate&&(void 0===dn.boundTo||"vertices"===dn.boundTo)){if(cj=dn.value.length,dk=0,1===dn.size){for(d1=0;d1<cj;d1++){dn.array[d1]=dn.value[d1]}}else{if(2===dn.size){for(d1=0;d1<cj;d1++){bT=dn.value[d1],dn.array[dk]=bT.x,dn.array[dk+1]=bT.y,dk+=2}}else{if(3===dn.size){if("c"===dn.type){for(d1=0;d1<cj;d1++){bT=dn.value[d1],dn.array[dk]=bT.r,dn.array[dk+1]=bT.g,dn.array[dk+2]=bT.b,dk+=3}}else{for(d1=0;d1<cj;d1++){bT=dn.value[d1],dn.array[dk]=bT.x,dn.array[dk+1]=bT.y,dn.array[dk+2]=bT.z,dk+=3}}}else{if(4===dn.size){for(d1=0;d1<cj;d1++){bT=dn.value[d1],dn.array[dk]=bT.x,dn.array[dk+1]=bT.y,dn.array[dk+2]=bT.z,dn.array[dk+3]=bT.w,dk+=4}}}}}}}}}if(cx||dQ.sortParticles){az.bindBuffer(az.ARRAY_BUFFER,d6.__webglVertexBuffer),az.bufferData(az.ARRAY_BUFFER,bN,b9)}if(cl||dQ.sortParticles){az.bindBuffer(az.ARRAY_BUFFER,d6.__webglColorBuffer),az.bufferData(az.ARRAY_BUFFER,m,b9)}if(cn){for(cu=0,cr=cn.length;cu<cr;cu++){if(dn=cn[cu],dn.needsUpdate||dQ.sortParticles){az.bindBuffer(az.ARRAY_BUFFER,dn.buffer),az.bufferData(az.ARRAY_BUFFER,dn.array,b9)}}}}c3.verticesNeedUpdate=!1;c3.colorsNeedUpdate=!1;cY.attributes&&an(cY)}}}}}};this.initMaterial=function(W,V,T,S){var R,Q,O,N;W.addEventListener("dispose",bH);var L,K,I,J,G;W instanceof THREE.MeshDepthMaterial?G="depth":W instanceof THREE.MeshNormalMaterial?G="normal":W instanceof THREE.MeshBasicMaterial?G="basic":W instanceof THREE.MeshLambertMaterial?G="lambert":W instanceof THREE.MeshPhongMaterial?G="phong":W instanceof THREE.LineBasicMaterial?G="basic":W instanceof THREE.LineDashedMaterial?G="dashed":W instanceof THREE.ParticleSystemMaterial&&(G="particle_basic");if(G){var H=THREE.ShaderLib[G];W.uniforms=THREE.UniformsUtils.clone(H.uniforms);W.vertexShader=H.vertexShader;W.fragmentShader=H.fragmentShader}var F=R=0,E=0,D=H=0;for(Q=V.length;D<Q;D++){O=V[D],O.onlyShadow||!1===O.visible||(O instanceof THREE.DirectionalLight&&R++,O instanceof THREE.PointLight&&F++,O instanceof THREE.SpotLight&&E++,O instanceof THREE.HemisphereLight&&H++)}Q=F;O=E;N=H;E=H=0;for(F=V.length;E<F;E++){D=V[E],D.castShadow&&(D instanceof THREE.SpotLight&&H++,D instanceof THREE.DirectionalLight&&!D.shadowCascade&&H++)}J=H;aQ&&S&&S.useVertexTexture?I=1024:(V=az.getParameter(az.MAX_VERTEX_UNIFORM_VECTORS),V=Math.floor((V-20)/4),void 0!==S&&S instanceof THREE.SkinnedMesh&&(V=Math.min(S.bones.length,V),V<S.bones.length&&console.warn("WebGLRenderer: too many bones - "+S.bones.length+", this GPU supports just "+V+" (try OpenGL instead of ANGLE)")),I=V);W:{E=W.fragmentShader;F=W.vertexShader;H=W.uniforms;V=W.attributes;D=W.defines;T={map:!!W.map,envMap:!!W.envMap,lightMap:!!W.lightMap,bumpMap:!!W.bumpMap,normalMap:!!W.normalMap,specularMap:!!W.specularMap,vertexColors:W.vertexColors,fog:T,useFog:W.fog,fogExp:T instanceof THREE.FogExp2,sizeAttenuation:W.sizeAttenuation,skinning:W.skinning,maxBones:I,useVertexTexture:aQ&&S&&S.useVertexTexture,morphTargets:W.morphTargets,morphNormals:W.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:R,maxPointLights:Q,maxSpotLights:O,maxHemiLights:N,maxShadows:J,shadowMapEnabled:this.shadowMapEnabled&&S.receiveShadow&&0<J,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:W.alphaTest,metal:W.metal,wrapAround:W.wrapAround,doubleSided:W.side===THREE.DoubleSide,flipSided:W.side===THREE.BackSide};S=W.index0AttributeName;var C,B,A;R=[];G?R.push(G):(R.push(E),R.push(F));for(B in D){R.push(B),R.push(D[B])}for(C in T){R.push(C),R.push(T[C])}G=R.join();C=0;for(B=ay.length;C<B;C++){if(R=ay[C],R.code===G){R.usedTimes++;K=R.program;break W}}C="SHADOWMAP_TYPE_BASIC";T.shadowMapType===THREE.PCFShadowMap?C="SHADOWMAP_TYPE_PCF":T.shadowMapType===THREE.PCFSoftShadowMap&&(C="SHADOWMAP_TYPE_PCF_SOFT");B=[];for(A in D){R=D[A],!1!==R&&(R="#define "+A+" "+R,B.push(R))}R=B.join("\n");A=az.createProgram();B=["precision "+aT+" float;","precision "+aT+" int;",R,bB?"#define VERTEX_TEXTURES":"",a3.gammaInput?"#define GAMMA_INPUT":"",a3.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+T.maxDirLights,"#define MAX_POINT_LIGHTS "+T.maxPointLights,"#define MAX_SPOT_LIGHTS "+T.maxSpotLights,"#define MAX_HEMI_LIGHTS "+T.maxHemiLights,"#define MAX_SHADOWS "+T.maxShadows,"#define MAX_BONES "+T.maxBones,T.map?"#define USE_MAP":"",T.envMap?"#define USE_ENVMAP":"",T.lightMap?"#define USE_LIGHTMAP":"",T.bumpMap?"#define USE_BUMPMAP":"",T.normalMap?"#define USE_NORMALMAP":"",T.specularMap?"#define USE_SPECULARMAP":"",T.vertexColors?"#define USE_COLOR":"",T.skinning?"#define USE_SKINNING":"",T.useVertexTexture?"#define BONE_TEXTURE":"",T.morphTargets?"#define USE_MORPHTARGETS":"",T.morphNormals?"#define USE_MORPHNORMALS":"",T.wrapAround?"#define WRAP_AROUND":"",T.doubleSided?"#define DOUBLE_SIDED":"",T.flipSided?"#define FLIP_SIDED":"",T.shadowMapEnabled?"#define USE_SHADOWMAP":"",T.shadowMapEnabled?"#define "+C:"",T.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",T.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",T.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");C=["precision "+aT+" float;","precision "+aT+" int;",T.bumpMap||T.normalMap?"#extension GL_OES_standard_derivatives : enable":"",R,"#define MAX_DIR_LIGHTS "+T.maxDirLights,"#define MAX_POINT_LIGHTS "+T.maxPointLights,"#define MAX_SPOT_LIGHTS "+T.maxSpotLights,"#define MAX_HEMI_LIGHTS "+T.maxHemiLights,"#define MAX_SHADOWS "+T.maxShadows,T.alphaTest?"#define ALPHATEST "+T.alphaTest:"",a3.gammaInput?"#define GAMMA_INPUT":"",a3.gammaOutput?"#define GAMMA_OUTPUT":"",T.useFog&&T.fog?"#define USE_FOG":"",T.useFog&&T.fogExp?"#define FOG_EXP2":"",T.map?"#define USE_MAP":"",T.envMap?"#define USE_ENVMAP":"",T.lightMap?"#define USE_LIGHTMAP":"",T.bumpMap?"#define USE_BUMPMAP":"",T.normalMap?"#define USE_NORMALMAP":"",T.specularMap?"#define USE_SPECULARMAP":"",T.vertexColors?"#define USE_COLOR":"",T.metal?"#define METAL":"",T.wrapAround?"#define WRAP_AROUND":"",T.doubleSided?"#define DOUBLE_SIDED":"",T.flipSided?"#define FLIP_SIDED":"",T.shadowMapEnabled?"#define USE_SHADOWMAP":"",T.shadowMapEnabled?"#define "+C:"",T.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",T.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");B=a6("vertex",B+F);C=a6("fragment",C+E);az.attachShader(A,B);az.attachShader(A,C);void 0!==S&&az.bindAttribLocation(A,0,S);az.linkProgram(A);!1===az.getProgramParameter(A,az.LINK_STATUS)&&(console.error("Could not initialise shader"),console.error("gl.VALIDATE_STATUS",az.getProgramParameter(A,az.VALIDATE_STATUS)),console.error("gl.getError()",az.getError()));""!==az.getProgramInfoLog(A)&&console.error("gl.getProgramInfoLog()",az.getProgramInfoLog(A));az.deleteShader(C);az.deleteShader(B);A.uniforms={};A.attributes={};var m;C="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");T.useVertexTexture?(C.push("boneTexture"),C.push("boneTextureWidth"),C.push("boneTextureHeight")):C.push("boneGlobalMatrices");for(m in H){C.push(m)}m=C;C=0;for(B=m.length;C<B;C++){H=m[C],A.uniforms[H]=az.getUniformLocation(A,H)}C="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(m=0;m<T.maxMorphTargets;m++){C.push("morphTarget"+m)}for(m=0;m<T.maxMorphNormals;m++){C.push("morphNormal"+m)}for(K in V){C.push(K)}K=C;m=0;for(V=K.length;m<V;m++){C=K[m],A.attributes[C]=az.getAttribLocation(A,C)}A.id=bz++;ay.push({program:A,code:G,usedTimes:1});a3.info.memory.programs=ay.length;K=A}W.program=K;m=W.program.attributes;if(W.morphTargets){for(W.numSupportedMorphTargets=0,V="morphTarget",K=0;K<this.maxMorphTargets;K++){A=V+K,0<=m[A]&&W.numSupportedMorphTargets++}}if(W.morphNormals){for(W.numSupportedMorphNormals=0,V="morphNormal",K=0;K<this.maxMorphNormals;K++){A=V+K,0<=m[A]&&W.numSupportedMorphNormals++}}W.uniformsList=[];for(L in W.uniforms){W.uniformsList.push([W.uniforms[L],L])}};this.setFaceCulling=function(d,c){d===THREE.CullFaceNone?az.disable(az.CULL_FACE):(c===THREE.FrontFaceDirectionCW?az.frontFace(az.CW):az.frontFace(az.CCW),d===THREE.CullFaceBack?az.cullFace(az.BACK):d===THREE.CullFaceFront?az.cullFace(az.FRONT):az.cullFace(az.FRONT_AND_BACK),az.enable(az.CULL_FACE))};this.setMaterialFaces=function(d){var c=d.side===THREE.DoubleSide;d=d.side===THREE.BackSide;aL!==c&&(c?az.disable(az.CULL_FACE):az.enable(az.CULL_FACE),aL=c);br!==d&&(d?az.frontFace(az.CW):az.frontFace(az.CCW),br=d)};this.setDepthTest=function(b){ah!==b&&(b?az.enable(az.DEPTH_TEST):az.disable(az.DEPTH_TEST),ah=b)};this.setDepthWrite=function(b){bG!==b&&(az.depthMask(b),bG=b)};this.setBlending=function(f,e,h,g){f!==bF&&(f===THREE.NoBlending?az.disable(az.BLEND):f===THREE.AdditiveBlending?(az.enable(az.BLEND),az.blendEquation(az.FUNC_ADD),az.blendFunc(az.SRC_ALPHA,az.ONE)):f===THREE.SubtractiveBlending?(az.enable(az.BLEND),az.blendEquation(az.FUNC_ADD),az.blendFunc(az.ZERO,az.ONE_MINUS_SRC_COLOR)):f===THREE.MultiplyBlending?(az.enable(az.BLEND),az.blendEquation(az.FUNC_ADD),az.blendFunc(az.ZERO,az.SRC_COLOR)):f===THREE.CustomBlending?az.enable(az.BLEND):(az.enable(az.BLEND),az.blendEquationSeparate(az.FUNC_ADD,az.FUNC_ADD),az.blendFuncSeparate(az.SRC_ALPHA,az.ONE_MINUS_SRC_ALPHA,az.ONE,az.ONE_MINUS_SRC_ALPHA)),bF=f);if(f===THREE.CustomBlending){if(e!==bs&&(az.blendEquation(bo(e)),bs=e),h!==aS||g!==o){az.blendFunc(bo(h),bo(g)),aS=h,o=g}}else{o=aS=bs=null}};this.setTexture=function(u,t){if(u.needsUpdate){u.__webglInit||(u.__webglInit=!0,u.addEventListener("dispose",a7),u.__webglTexture=az.createTexture(),a3.info.memory.textures++);az.activeTexture(az.TEXTURE0+t);az.bindTexture(az.TEXTURE_2D,u.__webglTexture);az.pixelStorei(az.UNPACK_FLIP_Y_WEBGL,u.flipY);az.pixelStorei(az.UNPACK_PREMULTIPLY_ALPHA_WEBGL,u.premultiplyAlpha);az.pixelStorei(az.UNPACK_ALIGNMENT,u.unpackAlignment);var s=u.image,r=THREE.Math.isPowerOfTwo(s.width)&&THREE.Math.isPowerOfTwo(s.height),q=bo(u.format),p=bo(u.type);ak(az.TEXTURE_2D,u,r);var n=u.mipmaps;if(u instanceof THREE.DataTexture){if(0<n.length&&r){for(var m=0,l=n.length;m<l;m++){s=n[m],az.texImage2D(az.TEXTURE_2D,m,q,s.width,s.height,0,q,p,s.data)}u.generateMipmaps=!1}else{az.texImage2D(az.TEXTURE_2D,0,q,s.width,s.height,0,q,p,s.data)}}else{if(u instanceof THREE.CompressedTexture){for(m=0,l=n.length;m<l;m++){s=n[m],u.format!==THREE.RGBAFormat?az.compressedTexImage2D(az.TEXTURE_2D,m,q,s.width,s.height,0,s.data):az.texImage2D(az.TEXTURE_2D,m,q,s.width,s.height,0,q,p,s.data)}}else{if(0<n.length&&r){m=0;for(l=n.length;m<l;m++){s=n[m],az.texImage2D(az.TEXTURE_2D,m,q,q,p,s)}u.generateMipmaps=!1}else{az.texImage2D(az.TEXTURE_2D,0,q,q,p,u.image)}}}u.generateMipmaps&&r&&az.generateMipmap(az.TEXTURE_2D);u.needsUpdate=!1;if(u.onUpdate){u.onUpdate()}}else{az.activeTexture(az.TEXTURE0+t),az.bindTexture(az.TEXTURE_2D,u.__webglTexture)}};this.setRenderTarget=function(l){var k=l instanceof THREE.WebGLRenderTargetCube;if(l&&!l.__webglFramebuffer){void 0===l.depthBuffer&&(l.depthBuffer=!0);void 0===l.stencilBuffer&&(l.stencilBuffer=!0);l.addEventListener("dispose",U);l.__webglTexture=az.createTexture();a3.info.memory.textures++;var s=THREE.Math.isPowerOfTwo(l.width)&&THREE.Math.isPowerOfTwo(l.height),r=bo(l.format),q=bo(l.type);if(k){l.__webglFramebuffer=[];l.__webglRenderbuffer=[];az.bindTexture(az.TEXTURE_CUBE_MAP,l.__webglTexture);ak(az.TEXTURE_CUBE_MAP,l,s);for(var p=0;6>p;p++){l.__webglFramebuffer[p]=az.createFramebuffer();l.__webglRenderbuffer[p]=az.createRenderbuffer();az.texImage2D(az.TEXTURE_CUBE_MAP_POSITIVE_X+p,0,r,l.width,l.height,0,r,q,null);var n=l,m=az.TEXTURE_CUBE_MAP_POSITIVE_X+p;az.bindFramebuffer(az.FRAMEBUFFER,l.__webglFramebuffer[p]);az.framebufferTexture2D(az.FRAMEBUFFER,az.COLOR_ATTACHMENT0,m,n.__webglTexture,0);bg(l.__webglRenderbuffer[p],l)}s&&az.generateMipmap(az.TEXTURE_CUBE_MAP)}else{l.__webglFramebuffer=az.createFramebuffer(),l.__webglRenderbuffer=l.shareDepthFrom?l.shareDepthFrom.__webglRenderbuffer:az.createRenderbuffer(),az.bindTexture(az.TEXTURE_2D,l.__webglTexture),ak(az.TEXTURE_2D,l,s),az.texImage2D(az.TEXTURE_2D,0,r,l.width,l.height,0,r,q,null),r=az.TEXTURE_2D,az.bindFramebuffer(az.FRAMEBUFFER,l.__webglFramebuffer),az.framebufferTexture2D(az.FRAMEBUFFER,az.COLOR_ATTACHMENT0,r,l.__webglTexture,0),l.shareDepthFrom?l.depthBuffer&&!l.stencilBuffer?az.framebufferRenderbuffer(az.FRAMEBUFFER,az.DEPTH_ATTACHMENT,az.RENDERBUFFER,l.__webglRenderbuffer):l.depthBuffer&&l.stencilBuffer&&az.framebufferRenderbuffer(az.FRAMEBUFFER,az.DEPTH_STENCIL_ATTACHMENT,az.RENDERBUFFER,l.__webglRenderbuffer):bg(l.__webglRenderbuffer,l),s&&az.generateMipmap(az.TEXTURE_2D)}k?az.bindTexture(az.TEXTURE_CUBE_MAP,null):az.bindTexture(az.TEXTURE_2D,null);az.bindRenderbuffer(az.RENDERBUFFER,null);az.bindFramebuffer(az.FRAMEBUFFER,null)}l?(k=k?l.__webglFramebuffer[l.activeCubeFace]:l.__webglFramebuffer,s=l.width,l=l.height,q=r=0):(k=null,s=i,l=aF,r=a1,q=aa);k!==aN&&(az.bindFramebuffer(az.FRAMEBUFFER,k),az.viewport(r,q,s,l),aN=k);am=s;Z=l};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};THREE.WebGLRenderTarget=function(e,d,f){this.width=e;this.height=d;f=f||{};this.wrapS=void 0!==f.wrapS?f.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==f.wrapT?f.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==f.magFilter?f.magFilter:THREE.LinearFilter;this.minFilter=void 0!==f.minFilter?f.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==f.anisotropy?f.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==f.format?f.format:THREE.RGBAFormat;this.type=void 0!==f.type?f.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==f.depthBuffer?f.depthBuffer:!0;this.stencilBuffer=void 0!==f.stencilBuffer?f.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,clone:function(){var b=new THREE.WebGLRenderTarget(this.width,this.height);b.wrapS=this.wrapS;b.wrapT=this.wrapT;b.magFilter=this.magFilter;b.minFilter=this.minFilter;b.anisotropy=this.anisotropy;b.offset.copy(this.offset);b.repeat.copy(this.repeat);b.format=this.format;b.type=this.type;b.depthBuffer=this.depthBuffer;b.stencilBuffer=this.stencilBuffer;b.generateMipmaps=this.generateMipmaps;b.shareDepthFrom=this.shareDepthFrom;return b},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(e,d,f){THREE.WebGLRenderTarget.call(this,e,d,f);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.position=new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(b){this.positionWorld.copy(b.positionWorld);this.positionScreen.copy(b.positionScreen)};THREE.RenderableFace=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[[]];this.z=0};THREE.RenderableObject=function(){this.id=0;this.object=null;this.z=0};THREE.RenderableSprite=function(){this.id=0;this.object=null;this.rotation=this.z=this.y=this.x=0;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.vertexColors=[new THREE.Color,new THREE.Color];this.material=null;this.z=0};THREE.GeometryUtils={merge:function(I,H,G){var F,E,D=I.vertices.length,C=H instanceof THREE.Mesh?H.geometry:H,B=I.vertices,A=C.vertices,t=I.faces,o=C.faces;I=I.faceVertexUvs[0];C=C.faceVertexUvs[0];void 0===G&&(G=0);H instanceof THREE.Mesh&&(H.matrixAutoUpdate&&H.updateMatrix(),F=H.matrix,E=(new THREE.Matrix3).getNormalMatrix(F));H=0;for(var L=A.length;H<L;H++){var i=A[H].clone();F&&i.applyMatrix4(F);B.push(i)}H=0;for(L=o.length;H<L;H++){var i=o[H],j,K,m=i.vertexNormals,J=i.vertexColors;j=new THREE.Face3(i.a+D,i.b+D,i.c+D);j.normal.copy(i.normal);E&&j.normal.applyMatrix3(E).normalize();B=0;for(A=m.length;B<A;B++){K=m[B].clone(),E&&K.applyMatrix3(E).normalize(),j.vertexNormals.push(K)}j.color.copy(i.color);B=0;for(A=J.length;B<A;B++){K=J[B],j.vertexColors.push(K.clone())}j.materialIndex=i.materialIndex+G;j.centroid.copy(i.centroid);F&&j.centroid.applyMatrix4(F);t.push(j)}H=0;for(L=C.length;H<L;H++){G=C[H];F=[];B=0;for(A=G.length;B<A;B++){F.push(new THREE.Vector2(G[B].x,G[B].y))}I.push(F)}},randomPointInTriangle:function(){var b=new THREE.Vector3;return function(a,n,m){var l=new THREE.Vector3,k=THREE.Math.random16(),j=THREE.Math.random16();1<k+j&&(k=1-k,j=1-j);var i=1-k-j;l.copy(a);l.multiplyScalar(k);b.copy(n);b.multiplyScalar(j);l.add(b);b.copy(m);b.multiplyScalar(i);l.add(b);return l}}(),randomPointInFace:function(e,d,f){return THREE.GeometryUtils.randomPointInTriangle(d.vertices[e.a],d.vertices[e.b],d.vertices[e.c])},randomPointsInGeometry:function(C,B){function A(d){function c(f,b){if(b<f){return f}var a=f+Math.floor((b-f)/2);return m[a]>d?c(f,a-1):m[a]<d?c(a+1,b):a}return c(0,m.length-1)}var v,u,t=C.faces,q=C.vertices,p=t.length,o=0,m=[],j,D,i;for(u=0;u<p;u++){v=t[u],j=q[v.a],D=q[v.b],i=q[v.c],v._area=THREE.GeometryUtils.triangleArea(j,D,i),o+=v._area,m[u]=o}v=[];for(u=0;u<B;u++){q=THREE.Math.random16()*o,q=A(q),v[u]=THREE.GeometryUtils.randomPointInFace(t[q],C,!0)}return v},triangleArea:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(f,b,a){d.subVectors(b,f);c.subVectors(a,f);d.cross(c);return 0.5*d.length()}}(),center:function(e){e.computeBoundingBox();var d=e.boundingBox,f=new THREE.Vector3;f.addVectors(d.min,d.max);f.multiplyScalar(-0.5);e.applyMatrix((new THREE.Matrix4).makeTranslation(f.x,f.y,f.z));e.computeBoundingBox();return f},triangulateQuads:function(i){var h,n,m,l,k=[],j=[];h=0;for(n=i.faceVertexUvs.length;h<n;h++){j[h]=[]}h=0;for(n=i.faces.length;h<n;h++){for(k.push(i.faces[h]),m=0,l=i.faceVertexUvs.length;m<l;m++){j[m].push(i.faceVertexUvs[m][h])}}i.faces=k;i.faceVertexUvs=j;i.computeCentroids();i.computeFaceNormals();i.computeVertexNormals();i.hasTangents&&i.computeTangents()}};THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(g,f,j,i){i=new THREE.ImageLoader;i.crossOrigin=this.crossOrigin;var h=new THREE.Texture(void 0,f);f=i.load(g,function(){h.needsUpdate=!0;j&&j(h)});h.image=f;h.sourceFile=g;return h},loadCompressedTexture:function(h,g,l,k){var j=new THREE.CompressedTexture;j.mapping=g;var i=new XMLHttpRequest;i.onload=function(){var b=THREE.ImageUtils.parseDDS(i.response,!0);j.format=b.format;j.mipmaps=b.mipmaps;j.image.width=b.width;j.image.height=b.height;j.generateMipmaps=!1;j.needsUpdate=!0;l&&l(j)};i.onerror=k;i.open("GET",h,!0);i.responseType="arraybuffer";i.send(null);return j},loadTextureCube:function(j,i,p,o){var n=[];n.loadCount=0;var m=new THREE.Texture;m.image=n;void 0!==i&&(m.mapping=i);m.flipY=!1;i=0;for(var l=j.length;i<l;++i){var k=new Image;n[i]=k;k.onload=function(){n.loadCount+=1;6===n.loadCount&&(m.needsUpdate=!0,p&&p(m))};k.onerror=o;k.crossOrigin=this.crossOrigin;k.src=j[i]}return m},loadCompressedTextureCube:function(t,s,r,q){var p=[];p.loadCount=0;var o=new THREE.CompressedTexture;o.image=p;void 0!==s&&(o.mapping=s);o.flipY=!1;o.generateMipmaps=!1;s=function(d,c){return function(){var a=THREE.ImageUtils.parseDDS(d.response,!0);c.format=a.format;c.mipmaps=a.mipmaps;c.width=a.width;c.height=a.height;p.loadCount+=1;6===p.loadCount&&(o.format=a.format,o.needsUpdate=!0,r&&r(o))}};if(t instanceof Array){for(var n=0,m=t.length;n<m;++n){var j={};p[n]=j;var i=new XMLHttpRequest;i.onload=s(i,j);i.onerror=q;j=t[n];i.open("GET",j,!0);i.responseType="arraybuffer";i.send(null)}}else{i=new XMLHttpRequest,i.onload=function(){var e=THREE.ImageUtils.parseDDS(i.response,!0);if(e.isCubemap){for(var c=e.mipmaps.length/e.mipmapCount,h=0;h<c;h++){p[h]={mipmaps:[]};for(var f=0;f<e.mipmapCount;f++){p[h].mipmaps.push(e.mipmaps[h*e.mipmapCount+f]),p[h].format=e.format,p[h].width=e.width,p[h].height=e.height}}o.format=e.format;o.needsUpdate=!0;r&&r(o)}},i.onerror=q,i.open("GET",t,!0),i.responseType="arraybuffer",i.send(null)}return o},loadDDSTexture:function(i,h,n,m){var l=[];l.loadCount=0;var k=new THREE.CompressedTexture;k.image=l;void 0!==h&&(k.mapping=h);k.flipY=!1;k.generateMipmaps=!1;var j=new XMLHttpRequest;j.onload=function(){var e=THREE.ImageUtils.parseDDS(j.response,!0);if(e.isCubemap){for(var c=e.mipmaps.length/e.mipmapCount,f=0;f<c;f++){l[f]={mipmaps:[]};for(var g=0;g<e.mipmapCount;g++){l[f].mipmaps.push(e.mipmaps[f*e.mipmapCount+g]),l[f].format=e.format,l[f].width=e.width,l[f].height=e.height}}}else{k.image.width=e.width,k.image.height=e.height,k.mipmaps=e.mipmaps}k.format=e.format;k.needsUpdate=!0;n&&n(k)};j.onerror=m;j.open("GET",i,!0);j.responseType="arraybuffer";j.send(null);return k},parseDDS:function(F,E){function D(b){return b.charCodeAt(0)+(b.charCodeAt(1)<<8)+(b.charCodeAt(2)<<16)+(b.charCodeAt(3)<<24)}function C(Q,P,O,N){var M=O*N*4;Q=new Uint8Array(Q,P,M);for(var M=new Uint8Array(M),L=P=0,K=0;K<N;K++){for(var J=0;J<O;J++){var I=Q[L];L++;var u=Q[L];L++;var s=Q[L];L++;var r=Q[L];L++;M[P]=s;P++;M[P]=u;P++;M[P]=I;P++;M[P]=r;P++}}return M}var B={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},A=D("DXT1"),v=D("DXT3"),t=D("DXT5"),p=new Int32Array(F,0,31);if(542327876!==p[0]){return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),B}if(!p[20]&4){return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),B}var o=p[21],m=!1;switch(o){case A:A=8;B.format=THREE.RGB_S3TC_DXT1_Format;break;case v:A=16;B.format=THREE.RGBA_S3TC_DXT3_Format;break;case t:A=16;B.format=THREE.RGBA_S3TC_DXT5_Format;break;default:if(32==p[22]&&p[23]&16711680&&p[24]&65280&&p[25]&255&&p[26]&4278190080){m=!0,A=64,B.format=THREE.RGBAFormat}else{return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(o&255,o>>8&255,o>>16&255,o>>24&255)),B}}B.mipmapCount=1;p[2]&131072&&!1!==E&&(B.mipmapCount=Math.max(1,p[7]));B.isCubemap=p[28]&512?!0:!1;B.width=p[4];B.height=p[3];for(var p=p[1]+4,v=B.width,t=B.height,o=B.isCubemap?6:1,H=0;H<o;H++){for(var i=0;i<B.mipmapCount;i++){if(m){var j=C(F,p,v,t),G=j.length}else{G=Math.max(4,v)/4*Math.max(4,t)/4*A,j=new Uint8Array(F,p,G)}B.mipmaps.push({data:j,width:v,height:t});p+=G;v=Math.max(0.5*v,1);t=Math.max(0.5*t,1)}v=B.width;t=B.height}return B},getNormalMap:function(O,N){var M=function(d){var c=Math.sqrt(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]);return[d[0]/c,d[1]/c,d[2]/c]};N|=1;var L=O.width,K=O.height,J=document.createElement("canvas");J.width=L;J.height=K;var I=J.getContext("2d");I.drawImage(O,0,0);for(var H=I.getImageData(0,0,L,K).data,G=I.createImageData(L,K),F=G.data,E=0;E<L;E++){for(var A=0;A<K;A++){var B=0>A-1?0:A-1,C=A+1>K-1?K-1:A+1,m=0>E-1?0:E-1,D=E+1>L-1?L-1:E+1,j=[],i=[0,0,H[4*(A*L+E)]/255*N];j.push([-1,0,H[4*(A*L+m)]/255*N]);j.push([-1,-1,H[4*(B*L+m)]/255*N]);j.push([0,-1,H[4*(B*L+E)]/255*N]);j.push([1,-1,H[4*(B*L+D)]/255*N]);j.push([1,0,H[4*(A*L+D)]/255*N]);j.push([1,1,H[4*(C*L+D)]/255*N]);j.push([0,1,H[4*(C*L+E)]/255*N]);j.push([-1,1,H[4*(C*L+m)]/255*N]);B=[];m=j.length;for(C=0;C<m;C++){var D=j[C],o=j[(C+1)%m],D=[D[0]-i[0],D[1]-i[1],D[2]-i[2]],o=[o[0]-i[0],o[1]-i[1],o[2]-i[2]];B.push(M([D[1]*o[2]-D[2]*o[1],D[2]*o[0]-D[0]*o[2],D[0]*o[1]-D[1]*o[0]]))}j=[0,0,0];for(C=0;C<B.length;C++){j[0]+=B[C][0],j[1]+=B[C][1],j[2]+=B[C][2]}j[0]/=B.length;j[1]/=B.length;j[2]/=B.length;i=4*(A*L+E);F[i]=(j[0]+1)/2*255|0;F[i+1]=(j[1]+1)/2*255|0;F[i+2]=255*j[2]|0;F[i+3]=255}}I.putImageData(G,0,0);return J},generateDataTexture:function(j,i,p){var o=j*i,n=new Uint8Array(3*o),m=Math.floor(255*p.r),l=Math.floor(255*p.g);p=Math.floor(255*p.b);for(var k=0;k<o;k++){n[3*k]=m,n[3*k+1]=l,n[3*k+2]=p}j=new THREE.DataTexture(n,j,i,THREE.RGBFormat);j.needsUpdate=!0;return j}};THREE.SceneUtils={createMultiMaterialObject:function(g,f){for(var j=new THREE.Object3D,i=0,h=f.length;i<h;i++){j.add(new THREE.Mesh(g,f[i]))}return j},detach:function(e,d,f){e.applyMatrix(d.matrixWorld);d.remove(e);f.add(e)},attach:function(f,e,h){var g=new THREE.Matrix4;g.getInverse(h.matrixWorld);f.applyMatrix(g);e.remove(f);h.add(f)}};THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(d){var c=d.familyName.toLowerCase();this.faces[c]=this.faces[c]||{};this.faces[c][d.cssFontWeight]=this.faces[c][d.cssFontWeight]||{};this.faces[c][d.cssFontWeight][d.cssFontStyle]=d;return this.faces[c][d.cssFontWeight][d.cssFontStyle]=d},drawText:function(j){var i=this.getFace(),p=this.size/i.resolution,o=0,n=String(j).split(""),m=n.length,l=[];for(j=0;j<m;j++){var k=new THREE.Path,k=this.extractGlyphPoints(n[j],i,p,o,k),o=o+k.offset;l.push(k.path)}return{paths:l,offset:o/2}},extractGlyphPoints:function(O,N,M,L,K){var J=[],I,H,G,F,E,A,B,C,m,D,j,i=N.glyphs[O]||N.glyphs["?"];if(i){if(i.o){for(N=i._cachedOutline||(i._cachedOutline=i.o.split(" ")),F=N.length,O=0;O<F;){switch(G=N[O++],G){case"m":G=N[O++]*M+L;E=N[O++]*M;K.moveTo(G,E);break;case"l":G=N[O++]*M+L;E=N[O++]*M;K.lineTo(G,E);break;case"q":G=N[O++]*M+L;E=N[O++]*M;C=N[O++]*M+L;m=N[O++]*M;K.quadraticCurveTo(C,m,G,E);if(I=J[J.length-1]){for(A=I.x,B=I.y,I=1,H=this.divisions;I<=H;I++){var o=I/H;THREE.Shape.Utils.b2(o,A,C,G);THREE.Shape.Utils.b2(o,B,m,E)}}break;case"b":if(G=N[O++]*M+L,E=N[O++]*M,C=N[O++]*M+L,m=N[O++]*-M,D=N[O++]*M+L,j=N[O++]*-M,K.bezierCurveTo(G,E,C,m,D,j),I=J[J.length-1]){for(A=I.x,B=I.y,I=1,H=this.divisions;I<=H;I++){o=I/H,THREE.Shape.Utils.b3(o,A,C,D,G),THREE.Shape.Utils.b3(o,B,m,j,E)}}}}}return{offset:i.ha*M,path:K}}}};THREE.FontUtils.generateShapes=function(h,g){g=g||{};var l=void 0!==g.curveSegments?g.curveSegments:4,k=void 0!==g.font?g.font:"helvetiker",j=void 0!==g.weight?g.weight:"normal",i=void 0!==g.style?g.style:"normal";THREE.FontUtils.size=void 0!==g.size?g.size:100;THREE.FontUtils.divisions=l;THREE.FontUtils.face=k;THREE.FontUtils.weight=j;THREE.FontUtils.style=i;l=THREE.FontUtils.drawText(h).paths;k=[];j=0;for(i=l.length;j<i;j++){Array.prototype.push.apply(k,l[j].toShapes())}return k};(function(d){var c=function(i){for(var h=i.length,l=0,k=h-1,j=0;j<h;k=j++){l+=i[k].x*i[j].y-i[j].x*i[k].y}return 0.5*l};d.Triangulate=function(ag,af){var ae=ag.length;if(3>ae){return null}var ad=[],ac=[],ab=[],aa,Z,Y;if(0<c(ag)){for(Z=0;Z<ae;Z++){ac[Z]=Z}}else{for(Z=0;Z<ae;Z++){ac[Z]=ae-1-Z}}var T=2*ae;for(Z=ae-1;2<ae;){if(0>=T--){console.log("Warning, unable to triangulate polygon!");break}aa=Z;ae<=aa&&(aa=0);Z=aa+1;ae<=Z&&(Z=0);Y=Z+1;ae<=Y&&(Y=0);var U;ag:{var W=U=void 0,P=void 0,X=void 0,M=void 0,J=void 0,R=void 0,A=void 0,j=void 0,W=ag[ac[aa]].x,P=ag[ac[aa]].y,X=ag[ac[Z]].x,M=ag[ac[Z]].y,J=ag[ac[Y]].x,R=ag[ac[Y]].y;if(1e-10>(X-W)*(R-P)-(M-P)*(J-W)){U=!1}else{var V=void 0,Q=void 0,C=void 0,S=void 0,L=void 0,o=void 0,b=void 0,i=void 0,m=void 0,N=void 0,m=i=b=j=A=void 0,V=J-X,Q=R-M,C=W-J,S=P-R,L=X-W,o=M-P;for(U=0;U<ae;U++){if(A=ag[ac[U]].x,j=ag[ac[U]].y,!(A===W&&j===P||A===X&&j===M||A===J&&j===R)&&(b=A-W,i=j-P,m=A-X,N=j-M,A-=J,j-=R,m=V*N-Q*m,b=L*i-o*b,i=C*j-S*A,-1e-10<=m&&-1e-10<=i&&-1e-10<=b)){U=!1;break ag}}U=!0}}if(U){ad.push([ag[ac[aa]],ag[ac[Z]],ag[ac[Y]]]);ab.push([ac[aa],ac[Z],ac[Y]]);aa=Z;for(Y=Z+1;Y<ae;aa++,Y++){ac[aa]=ac[Y]}ae--;T=2*ae}}return af?ab:ad};d.Triangulate.area=c;return d})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(b){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(b){b=this.getUtoTmapping(b);return this.getPoint(b)};THREE.Curve.prototype.getPoints=function(e){e||(e=5);var d,f=[];for(d=0;d<=e;d++){f.push(this.getPoint(d/e))}return f};THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var d,f=[];for(d=0;d<=e;d++){f.push(this.getPointAt(d/e))}return f};THREE.Curve.prototype.getLength=function(){var b=this.getLengths();return b[b.length-1]};THREE.Curve.prototype.getLengths=function(h){h||(h=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==h+1&&!this.needsUpdate){return this.cacheArcLengths}this.needsUpdate=!1;var g=[],l,k=this.getPoint(0),j,i=0;g.push(0);for(j=1;j<=h;j++){l=this.getPoint(j/h),i+=l.distanceTo(k),g.push(i),k=l}return this.cacheArcLengths=g};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(r,q){var p=this.getLengths(),o=0,n=p.length,m;m=q?q:r*p[n-1];for(var l=0,j=n-1,i;l<=j;){if(o=Math.floor(l+(j-l)/2),i=p[o]-m,0>i){l=o+1}else{if(0<i){j=o-1}else{j=o;break}}}o=j;if(p[o]==m){return o/(n-1)}l=p[o];return p=(o+(m-l)/(p[o+1]-l))/(n-1)};THREE.Curve.prototype.getTangent=function(d){var c=d-0.0001;d+=0.0001;0>c&&(c=0);1<d&&(d=1);c=this.getPoint(c);return this.getPoint(d).clone().sub(c).normalize()};THREE.Curve.prototype.getTangentAt=function(b){b=this.getUtoTmapping(b);return this.getTangent(b)};THREE.Curve.Utils={tangentQuadraticBezier:function(f,e,h,g){return 2*(1-f)*(h-e)+2*f*(g-h)},tangentCubicBezier:function(g,f,j,i,h){return -3*f*(1-g)*(1-g)+3*j*(1-g)*(1-g)-6*g*j*(1-g)+6*g*i*(1-g)-3*g*g*i+3*g*g*h},tangentSpline:function(g,f,j,i,h){return 6*g*g-6*g+(3*g*g-4*g+1)+(-6*g*g+6*g)+(3*g*g-2*g)},interpolate:function(h,g,l,k,j){h=0.5*(l-h);k=0.5*(k-g);var i=j*j;return(2*g-2*l+h+k)*j*i+(-3*g+3*l-2*h-k)*i+h*j+g}};THREE.Curve.create=function(d,c){d.prototype=Object.create(THREE.Curve.prototype);d.prototype.getPoint=c;return d};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(b){this.curves.push(b)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var d=this.curves[0].getPoint(0),c=this.curves[this.curves.length-1].getPoint(1);d.equals(c)||this.curves.push(new THREE.LineCurve(c,d))};THREE.CurvePath.prototype.getPoint=function(e){var d=e*this.getLength(),f=this.getCurveLengths();for(e=0;e<f.length;){if(f[e]>=d){return d=f[e]-d,e=this.curves[e],d=1-d/e.getLength(),e.getPointAt(d)}e++}return null};THREE.CurvePath.prototype.getLength=function(){var b=this.getCurveLengths();return b[b.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length){return this.cacheLengths}var f=[],e=0,h,g=this.curves.length;for(h=0;h<g;h++){e+=this.curves[h].getLength(),f.push(e)}return this.cacheLengths=f};THREE.CurvePath.prototype.getBoundingBox=function(){var A=this.getPoints(),v,u,t,r,q,p;v=u=Number.NEGATIVE_INFINITY;r=q=Number.POSITIVE_INFINITY;var o,m,j,i,B=A[0] instanceof THREE.Vector3;i=B?new THREE.Vector3:new THREE.Vector2;m=0;for(j=A.length;m<j;m++){o=A[m],o.x>v?v=o.x:o.x<r&&(r=o.x),o.y>u?u=o.y:o.y<q&&(q=o.y),B&&(o.z>t?t=o.z:o.z<p&&(p=o.z)),i.add(o)}A={minX:r,minY:q,maxX:v,maxY:u,centroid:i.divideScalar(j)};B&&(A.maxZ=t,A.minZ=p);return A};THREE.CurvePath.prototype.createPointsGeometry=function(b){b=this.getPoints(b,!0);return this.createGeometry(b)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(b){b=this.getSpacedPoints(b,!0);return this.createGeometry(b)};THREE.CurvePath.prototype.createGeometry=function(e){for(var d=new THREE.Geometry,f=0;f<e.length;f++){d.vertices.push(new THREE.Vector3(e[f].x,e[f].y,e[f].z||0))}return d};THREE.CurvePath.prototype.addWrapPath=function(b){this.bends.push(b)};THREE.CurvePath.prototype.getTransformedPoints=function(g,f){var j=this.getPoints(g),i,h;f||(f=this.bends);i=0;for(h=f.length;i<h;i++){j=this.getWrapPoints(j,f[i])}return j};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(g,f){var j=this.getSpacedPoints(g),i,h;f||(f=this.bends);i=0;for(h=f.length;i<h;i++){j=this.getWrapPoints(j,f[i])}return j};THREE.CurvePath.prototype.getWrapPoints=function(r,q){var p=this.getBoundingBox(),o,n,m,l,j,i;o=0;for(n=r.length;o<n;o++){m=r[o],l=m.x,j=m.y,i=l/p.maxX,i=q.getUtoTmapping(i,l),l=q.getPoint(i),i=q.getTangent(i),i.set(-i.y,i.x).multiplyScalar(j),m.x=l.x+i.x,m.y=l.y+i.y}return r};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||e){this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0}for(var d=0,f=this.children.length;d<f;d++){this.children[d].updateMatrixWorld(e)}};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;THREE.Path=function(b){THREE.CurvePath.call(this);this.actions=[];b&&this.fromPoints(b)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var d=1,f=e.length;d<f;d++){this.lineTo(e[d].x,e[d].y)}};THREE.Path.prototype.moveTo=function(e,d){var f=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:f})};THREE.Path.prototype.lineTo=function(f,e){var h=Array.prototype.slice.call(arguments),g=this.actions[this.actions.length-1].args,g=new THREE.LineCurve(new THREE.Vector2(g[g.length-2],g[g.length-1]),new THREE.Vector2(f,e));this.curves.push(g);this.actions.push({action:THREE.PathActions.LINE_TO,args:h})};THREE.Path.prototype.quadraticCurveTo=function(h,g,l,k){var j=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,i=new THREE.QuadraticBezierCurve(new THREE.Vector2(i[i.length-2],i[i.length-1]),new THREE.Vector2(h,g),new THREE.Vector2(l,k));this.curves.push(i);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:j})};THREE.Path.prototype.bezierCurveTo=function(j,i,p,o,n,m){var l=Array.prototype.slice.call(arguments),k=this.actions[this.actions.length-1].args,k=new THREE.CubicBezierCurve(new THREE.Vector2(k[k.length-2],k[k.length-1]),new THREE.Vector2(j,i),new THREE.Vector2(p,o),new THREE.Vector2(n,m));this.curves.push(k);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:l})};THREE.Path.prototype.splineThru=function(e){var d=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=[new THREE.Vector2(f[f.length-2],f[f.length-1])];Array.prototype.push.apply(f,e);f=new THREE.SplineCurve(f);this.curves.push(f);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:d})};THREE.Path.prototype.arc=function(i,h,n,m,l,k){var j=this.actions[this.actions.length-1].args;this.absarc(i+j[j.length-2],h+j[j.length-1],n,m,l,k)};THREE.Path.prototype.absarc=function(h,g,l,k,j,i){this.absellipse(h,g,l,l,k,j,i)};THREE.Path.prototype.ellipse=function(j,i,p,o,n,m,l){var k=this.actions[this.actions.length-1].args;this.absellipse(j+k[k.length-2],i+k[k.length-1],p,o,n,m,l)};THREE.Path.prototype.absellipse=function(r,q,p,o,n,m,l){var j=Array.prototype.slice.call(arguments),i=new THREE.EllipseCurve(r,q,p,o,n,m,l);this.curves.push(i);i=i.getPoint(1);j.push(i.x);j.push(i.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:j})};THREE.Path.prototype.getSpacedPoints=function(f,e){f||(f=40);for(var h=[],g=0;g<f;g++){h.push(this.getPoint(g/f))}return h};THREE.Path.prototype.getPoints=function(H,G){if(this.useSpacedPoints){return console.log("tata"),this.getSpacedPoints(H,G)}H=H||12;var F=[],E,D,C,B,A,v,t,o,J,i,j,I,m;E=0;for(D=this.actions.length;E<D;E++){switch(C=this.actions[E],B=C.action,C=C.args,B){case THREE.PathActions.MOVE_TO:F.push(new THREE.Vector2(C[0],C[1]));break;case THREE.PathActions.LINE_TO:F.push(new THREE.Vector2(C[0],C[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:A=C[2];v=C[3];J=C[0];i=C[1];0<F.length?(B=F[F.length-1],j=B.x,I=B.y):(B=this.actions[E-1].args,j=B[B.length-2],I=B[B.length-1]);for(C=1;C<=H;C++){m=C/H,B=THREE.Shape.Utils.b2(m,j,J,A),m=THREE.Shape.Utils.b2(m,I,i,v),F.push(new THREE.Vector2(B,m))}break;case THREE.PathActions.BEZIER_CURVE_TO:A=C[4];v=C[5];J=C[0];i=C[1];t=C[2];o=C[3];0<F.length?(B=F[F.length-1],j=B.x,I=B.y):(B=this.actions[E-1].args,j=B[B.length-2],I=B[B.length-1]);for(C=1;C<=H;C++){m=C/H,B=THREE.Shape.Utils.b3(m,j,J,t,A),m=THREE.Shape.Utils.b3(m,I,i,o,v),F.push(new THREE.Vector2(B,m))}break;case THREE.PathActions.CSPLINE_THRU:B=this.actions[E-1].args;m=[new THREE.Vector2(B[B.length-2],B[B.length-1])];B=H*C[0].length;m=m.concat(C[0]);m=new THREE.SplineCurve(m);for(C=1;C<=B;C++){F.push(m.getPointAt(C/B))}break;case THREE.PathActions.ARC:A=C[0];v=C[1];i=C[2];t=C[3];B=C[4];J=!!C[5];j=B-t;I=2*H;for(C=1;C<=I;C++){m=C/I,J||(m=1-m),m=t+m*j,B=A+i*Math.cos(m),m=v+i*Math.sin(m),F.push(new THREE.Vector2(B,m))}break;case THREE.PathActions.ELLIPSE:for(A=C[0],v=C[1],i=C[2],o=C[3],t=C[4],B=C[5],J=!!C[6],j=B-t,I=2*H,C=1;C<=I;C++){m=C/I,J||(m=1-m),m=t+m*j,B=A+i*Math.cos(m),m=v+o*Math.sin(m),F.push(new THREE.Vector2(B,m))}}}E=F[F.length-1];1e-10>Math.abs(E.x-F[0].x)&&1e-10>Math.abs(E.y-F[0].y)&&F.splice(F.length-1,1);G&&F.push(F[0]);return F};THREE.Path.prototype.toShapes=function(E){function D(L,K){for(var J=K.length,I=!1,H=J-1,G=0;G<J;H=G++){var s=K[H],r=K[G],q=r.x-s.x,n=r.y-s.y;if(1e-10<Math.abs(n)){if(0>n&&(s=K[G],q=-q,r=K[H],n=-n),!(L.y<s.y||L.y>r.y)){if(L.y==s.y){if(L.x==s.x){return !0}}else{H=n*(L.x-s.x)-q*(L.y-s.y);if(0==H){return !0}0>H||(I=!I)}}}else{if(L.y==s.y&&(r.x<=L.x&&L.x<=s.x||s.x<=L.x&&L.x<=r.x)){return !0}}}return I}var C,B,A,v,u=[],t=new THREE.Path;C=0;for(B=this.actions.length;C<B;C++){A=this.actions[C],v=A.args,A=A.action,A==THREE.PathActions.MOVE_TO&&0!=t.actions.length&&(u.push(t),t=new THREE.Path),t[A].apply(t,v)}0!=t.actions.length&&u.push(t);if(0==u.length){return[]}var p,o,m;v=[];if(1==u.length){return o=u[0],m=new THREE.Shape,m.actions=o.actions,m.curves=o.curves,v.push(m),v}var F=!THREE.Shape.Utils.isClockWise(u[0].getPoints()),F=E?!F:F;m=[];t=[];A=[];var i=0,j;t[i]=void 0;A[i]=[];C=0;for(B=u.length;C<B;C++){o=u[C],j=o.getPoints(),p=THREE.Shape.Utils.isClockWise(j),(p=E?!p:p)?(!F&&t[i]&&i++,t[i]={s:new THREE.Shape,p:j},t[i].s.actions=o.actions,t[i].s.curves=o.curves,F&&i++,A[i]=[]):A[i].push({h:o,p:j[0]})}if(1<t.length){C=!1;B=[];E=0;for(u=t.length;E<u;E++){m[E]=[]}E=0;for(u=t.length;E<u;E++){for(o=A[E],p=0;p<o.length;p++){F=o[p];i=!0;for(j=0;j<t.length;j++){D(F.p,t[j].p)&&(E!=j&&B.push({froms:E,tos:j,hole:p}),i?(i=!1,m[j].push(F)):C=!0)}i&&m[E].push(F)}}0<B.length&&(C||(A=m))}C=0;for(B=t.length;C<B;C++){for(m=t[C].s,v.push(m),E=A[C],u=0,o=E.length;u<o;u++){m.holes.push(E[u].h)}}return v};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(b){return new THREE.ExtrudeGeometry(this,b)};THREE.Shape.prototype.makeGeometry=function(b){return new THREE.ShapeGeometry(this,b)};THREE.Shape.prototype.getPointsHoles=function(f){var e,h=this.holes.length,g=[];for(e=0;e<h;e++){g[e]=this.holes[e].getTransformedPoints(f,this.bends)}return g};THREE.Shape.prototype.getSpacedPointsHoles=function(f){var e,h=this.holes.length,g=[];for(e=0;e<h;e++){g[e]=this.holes[e].getTransformedSpacedPoints(f,this.bends)}return g};THREE.Shape.prototype.extractAllPoints=function(b){return{shape:this.getTransformedPoints(b),holes:this.getPointsHoles(b)}};THREE.Shape.prototype.extractPoints=function(b){return this.useSpacedPoints?this.extractAllSpacedPoints(b):this.extractAllPoints(b)};THREE.Shape.prototype.extractAllSpacedPoints=function(b){return{shape:this.getTransformedSpacedPoints(b),holes:this.getSpacedPointsHoles(b)}};THREE.Shape.Utils={triangulateShape:function(A,v){function u(e,d,f){return e.x!=d.x?e.x<d.x?e.x<=f.x&&f.x<=d.x:d.x<=f.x&&f.x<=e.x:e.y<d.y?e.y<=f.y&&f.y<=d.y:d.y<=f.y&&f.y<=e.y}function t(N,M,L,K,J){var I=M.x-N.x,G=M.y-N.y,F=K.x-L.x,E=K.y-L.y,C=N.x-L.x,P=N.y-L.y,O=G*F-I*E,c=G*C-I*P;if(1e-10<Math.abs(O)){if(0<O){if(0>c||c>O){return[]}F=E*C-F*P;if(0>F||F>O){return[]}}else{if(0<c||c<O){return[]}F=E*C-F*P;if(0<F||F<O){return[]}}if(0==F){return !J||0!=c&&c!=O?[N]:[]}if(F==O){return !J||0!=c&&c!=O?[M]:[]}if(0==c){return[L]}if(c==O){return[K]}J=F/O;return[{x:N.x+J*I,y:N.y+J*G}]}if(0!=c||E*C!=F*P){return[]}G=0==I&&0==G;F=0==F&&0==E;if(G&&F){return N.x!=L.x||N.y!=L.y?[]:[N]}if(G){return u(L,K,N)?[N]:[]}if(F){return u(N,M,L)?[L]:[]}0!=I?(N.x<M.x?(I=N,F=N.x,G=M,N=M.x):(I=M,F=M.x,G=N,N=N.x),L.x<K.x?(M=L,O=L.x,E=K,L=K.x):(M=K,O=K.x,E=L,L=L.x)):(N.y<M.y?(I=N,F=N.y,G=M,N=M.y):(I=M,F=M.y,G=N,N=N.y),L.y<K.y?(M=L,O=L.y,E=K,L=K.y):(M=K,O=K.y,E=L,L=L.y));return F<=O?N<O?[]:N==O?J?[]:[M]:N<=L?[M,G]:[M,E]:F>L?[]:F==L?J?[]:[I]:N<=L?[I,G]:[I,E]}function r(k,h,D,C){var s=h.x-k.x,n=h.y-k.y;h=D.x-k.x;D=D.y-k.y;var l=C.x-k.x;C=C.y-k.y;k=s*D-n*h;s=s*C-n*l;return 1e-10<Math.abs(k)?(h=l*D-C*h,0<k?0<=s&&0<=h:0<=s||0<=h):0<s}var q,p,o,m,j,i={};o=A.concat();q=0;for(p=v.length;q<p;q++){Array.prototype.push.apply(o,v[q])}q=0;for(p=o.length;q<p;q++){j=o[q].x+":"+o[q].y,void 0!==i[j]&&console.log("Duplicate point",j),i[j]=q}q=function(aa,Z){function Y(h,c){var n=V.length-1,l=h-1;0>l&&(l=n);var k=h+1;k>n&&(k=0);n=r(V[h],V[l],V[k],U[c]);if(!n){return !1}n=U.length-1;l=c-1;0>l&&(l=n);k=c+1;k>n&&(k=0);return(n=r(U[c],U[l],U[k],V[h]))?!0:!1}function X(g,f){var k,h;for(k=0;k<V.length;k++){if(h=k+1,h%=V.length,h=t(g,f,V[k],V[h],!0),0<h.length){return !0}}return !1}function W(b,D){var s,n,l,g;for(s=0;s<T.length;s++){for(n=Z[T[s]],l=0;l<n.length;l++){if(g=l+1,g%=n.length,g=t(b,D,n[l],n[g],!0),0<g.length){return !0}}}return !1}var V=aa.concat(),U,T=[],S,Q,P,L,R,M=[],J,d,e,C=0;for(S=Z.length;C<S;C++){T.push(C)}for(var N=2*T.length;0<T.length;){N--;if(0>N){console.log("Infinite Loop! Holes left:"+T.length+", Probably Hole outside Shape!");break}for(Q=0;Q<V.length;Q++){P=V[Q];S=-1;for(C=0;C<T.length;C++){if(L=T[C],R=P.x+":"+P.y+":"+L,void 0===M[R]){U=Z[L];for(J=0;J<U.length;J++){if(L=U[J],Y(Q,J)&&!X(P,L)&&!W(P,L)){S=J;T.splice(C,1);L=V.slice(0,Q+1);J=V.slice(Q);d=U.slice(S);e=U.slice(0,S+1);V=L.concat(d).concat(e).concat(J);break}}if(0<=S){break}M[R]=!0}}if(0<=S){break}}}return V}(A,v);var B=THREE.FontUtils.Triangulate(q,!1);q=0;for(p=B.length;q<p;q++){for(m=B[q],o=0;3>o;o++){j=m[o].x+":"+m[o].y,j=i[j],void 0!==j&&(m[o]=j)}}return B.concat()},isClockWise:function(b){return 0>THREE.FontUtils.Triangulate.area(b)},b2p0:function(e,d){var f=1-e;return f*f*d},b2p1:function(d,c){return 2*(1-d)*d*c},b2p2:function(d,c){return d*d*c},b2:function(f,e,h,g){return this.b2p0(f,e)+this.b2p1(f,h)+this.b2p2(f,g)},b3p0:function(e,d){var f=1-e;return f*f*f*d},b3p1:function(e,d){var f=1-e;return 3*f*f*e*d},b3p2:function(d,c){return 3*(1-d)*d*d*c},b3p3:function(d,c){return d*d*d*c},b3:function(g,f,j,i,h){return this.b3p0(g,f)+this.b3p1(g,j)+this.b3p2(g,i)+this.b3p3(g,h)}};THREE.LineCurve=function(d,c){this.v1=d;this.v2=c};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(d){var c=this.v2.clone().sub(this.v1);c.multiplyScalar(d).add(this.v1);return c};THREE.LineCurve.prototype.getPointAt=function(b){return this.getPoint(b)};THREE.LineCurve.prototype.getTangent=function(b){return this.v2.clone().sub(this.v1).normalize()};THREE.QuadraticBezierCurve=function(e,d,f){this.v0=e;this.v1=d;this.v2=f};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(d){var c;c=THREE.Shape.Utils.b2(d,this.v0.x,this.v1.x,this.v2.x);d=THREE.Shape.Utils.b2(d,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(c,d)};THREE.QuadraticBezierCurve.prototype.getTangent=function(d){var c;c=THREE.Curve.Utils.tangentQuadraticBezier(d,this.v0.x,this.v1.x,this.v2.x);d=THREE.Curve.Utils.tangentQuadraticBezier(d,this.v0.y,this.v1.y,this.v2.y);c=new THREE.Vector2(c,d);c.normalize();return c};THREE.CubicBezierCurve=function(f,e,h,g){this.v0=f;this.v1=e;this.v2=h;this.v3=g};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(d){var c;c=THREE.Shape.Utils.b3(d,this.v0.x,this.v1.x,this.v2.x,this.v3.x);d=THREE.Shape.Utils.b3(d,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(c,d)};THREE.CubicBezierCurve.prototype.getTangent=function(d){var c;c=THREE.Curve.Utils.tangentCubicBezier(d,this.v0.x,this.v1.x,this.v2.x,this.v3.x);d=THREE.Curve.Utils.tangentCubicBezier(d,this.v0.y,this.v1.y,this.v2.y,this.v3.y);c=new THREE.Vector2(c,d);c.normalize();return c};THREE.SplineCurve=function(b){this.points=void 0==b?[]:b};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(g){var f=new THREE.Vector2,j=[],i=this.points,h;h=(i.length-1)*g;g=Math.floor(h);h-=g;j[0]=0==g?g:g-1;j[1]=g;j[2]=g>i.length-2?i.length-1:g+1;j[3]=g>i.length-3?i.length-1:g+2;f.x=THREE.Curve.Utils.interpolate(i[j[0]].x,i[j[1]].x,i[j[2]].x,i[j[3]].x,h);f.y=THREE.Curve.Utils.interpolate(i[j[0]].y,i[j[1]].y,i[j[2]].y,i[j[3]].y,h);return f};THREE.EllipseCurve=function(i,h,n,m,l,k,j){this.aX=i;this.aY=h;this.xRadius=n;this.yRadius=m;this.aStartAngle=l;this.aEndAngle=k;this.aClockwise=j};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(d){var c;c=this.aEndAngle-this.aStartAngle;0>c&&(c+=2*Math.PI);c>2*Math.PI&&(c-=2*Math.PI);c=!0===this.aClockwise?this.aEndAngle+(1-d)*(2*Math.PI-c):this.aStartAngle+d*c;d=this.aX+this.xRadius*Math.cos(c);c=this.aY+this.yRadius*Math.sin(c);return new THREE.Vector2(d,c)};THREE.ArcCurve=function(h,g,l,k,j,i){THREE.EllipseCurve.call(this,h,g,l,l,k,j,i)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.LineCurve3=THREE.Curve.create(function(d,c){this.v1=d;this.v2=c},function(d){var c=new THREE.Vector3;c.subVectors(this.v2,this.v1);c.multiplyScalar(d);c.add(this.v1);return c});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,d,f){this.v0=e;this.v1=d;this.v2=f},function(e){var d,f;d=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x);f=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y);e=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(d,f,e)});THREE.CubicBezierCurve3=THREE.Curve.create(function(f,e,h,g){this.v0=f;this.v1=e;this.v2=h;this.v3=g},function(e){var d,f;d=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);f=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);e=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(d,f,e)});THREE.SplineCurve3=THREE.Curve.create(function(b){this.points=void 0==b?[]:b},function(i){var h=new THREE.Vector3,n=[],m=this.points,l;i*=m.length-1;l=Math.floor(i);i-=l;n[0]=0==l?l:l-1;n[1]=l;n[2]=l>m.length-2?m.length-1:l+1;n[3]=l>m.length-3?m.length-1:l+2;l=m[n[0]];var k=m[n[1]],j=m[n[2]],n=m[n[3]];h.x=THREE.Curve.Utils.interpolate(l.x,k.x,j.x,n.x,i);h.y=THREE.Curve.Utils.interpolate(l.y,k.y,j.y,n.y,i);h.z=THREE.Curve.Utils.interpolate(l.z,k.z,j.z,n.z,i);return h});THREE.ClosedSplineCurve3=THREE.Curve.create(function(b){this.points=void 0==b?[]:b},function(g){var f=new THREE.Vector3,j=[],i=this.points,h;h=(i.length-0)*g;g=Math.floor(h);h-=g;g+=0<g?0:(Math.floor(Math.abs(g)/i.length)+1)*i.length;j[0]=(g-1)%i.length;j[1]=g%i.length;j[2]=(g+1)%i.length;j[3]=(g+2)%i.length;f.x=THREE.Curve.Utils.interpolate(i[j[0]].x,i[j[1]].x,i[j[2]].x,i[j[3]].x,h);f.y=THREE.Curve.Utils.interpolate(i[j[0]].y,i[j[1]].y,i[j[2]].y,i[j[3]].y,h);f.z=THREE.Curve.Utils.interpolate(i[j[0]].z,i[j[1]].z,i[j[2]].z,i[j[3]].z,h);return f});THREE.AnimationHandler=function(){var f=[],e={},h={update:function(a){for(var d=0;d<f.length;d++){f[d].update(a)}},addToUpdate:function(a){-1===f.indexOf(a)&&f.push(a)},removeFromUpdate:function(a){a=f.indexOf(a);-1!==a&&f.splice(a,1)},add:function(i){void 0!==e[i.name]&&console.log("THREE.AnimationHandler.add: Warning! "+i.name+" already exists in library. Overwriting.");e[i.name]=i;if(!0!==i.initialized){for(var q=0;q<i.hierarchy.length;q++){for(var o=0;o<i.hierarchy[q].keys.length;o++){if(0>i.hierarchy[q].keys[o].time&&(i.hierarchy[q].keys[o].time=0),void 0!==i.hierarchy[q].keys[o].rot&&!(i.hierarchy[q].keys[o].rot instanceof THREE.Quaternion)){var m=i.hierarchy[q].keys[o].rot;i.hierarchy[q].keys[o].rot=new THREE.Quaternion(m[0],m[1],m[2],m[3])}}if(i.hierarchy[q].keys.length&&void 0!==i.hierarchy[q].keys[0].morphTargets){m={};for(o=0;o<i.hierarchy[q].keys.length;o++){for(var j=0;j<i.hierarchy[q].keys[o].morphTargets.length;j++){var b=i.hierarchy[q].keys[o].morphTargets[j];m[b]=-1}}i.hierarchy[q].usedMorphTargets=m;for(o=0;o<i.hierarchy[q].keys.length;o++){var p={};for(b in m){for(j=0;j<i.hierarchy[q].keys[o].morphTargets.length;j++){if(i.hierarchy[q].keys[o].morphTargets[j]===b){p[b]=i.hierarchy[q].keys[o].morphTargetsInfluences[j];break}}j===i.hierarchy[q].keys[o].morphTargets.length&&(p[b]=0)}i.hierarchy[q].keys[o].morphTargetsInfluences=p}}for(o=1;o<i.hierarchy[q].keys.length;o++){i.hierarchy[q].keys[o].time===i.hierarchy[q].keys[o-1].time&&(i.hierarchy[q].keys.splice(o,1),o--)}for(o=0;o<i.hierarchy[q].keys.length;o++){i.hierarchy[q].keys[o].index=o}}i.initialized=!0}},get:function(b){if("string"===typeof b){if(e[b]){return e[b]}console.log("THREE.AnimationHandler.get: Couldn't find animation "+b);return null}},parse:function(i){var d=[];if(i instanceof THREE.SkinnedMesh){for(var j=0;j<i.bones.length;j++){d.push(i.bones[j])}}else{g(i,d)}return d}},g=function(i,d){d.push(i);for(var j=0;j<i.children.length;j++){g(i.children[j],d)}};h.LINEAR=0;h.CATMULLROM=1;h.CATMULLROM_FORWARD=2;return h}();THREE.Animation=function(d,c){this.root=d;this.data=THREE.AnimationHandler.get(c);this.hierarchy=THREE.AnimationHandler.parse(d);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=THREE.AnimationHandler.LINEAR};THREE.Animation.prototype.play=function(b){this.currentTime=void 0!==b?b:0;!1===this.isPlaying&&(this.isPlaying=!0,this.reset(),this.update(0));this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};THREE.Animation.prototype.reset=function(){for(var f=0,e=this.hierarchy.length;f<e;f++){var h=this.hierarchy[f];h.matrixAutoUpdate=!0;void 0===h.animationCache&&(h.animationCache={},h.animationCache.prevKey={pos:0,rot:0,scl:0},h.animationCache.nextKey={pos:0,rot:0,scl:0},h.animationCache.originalMatrix=h instanceof THREE.Bone?h.skinMatrix:h.matrix);var g=h.animationCache.prevKey,h=h.animationCache.nextKey;g.pos=this.data.hierarchy[f].keys[0];g.rot=this.data.hierarchy[f].keys[0];g.scl=this.data.hierarchy[f].keys[0];h.pos=this.getNextKeyWith("pos",f,1);h.rot=this.getNextKeyWith("rot",f,1);h.scl=this.getNextKeyWith("scl",f,1)}};THREE.Animation.prototype.update=function(){var f=[],e=new THREE.Vector3,h=function(v,u){var t=[],p=[],o,m,j,A,d,i;o=(v.length-1)*u;m=Math.floor(o);o-=m;t[0]=0===m?m:m-1;t[1]=m;t[2]=m>v.length-2?m:m+1;t[3]=m>v.length-3?m:m+2;m=v[t[0]];A=v[t[1]];d=v[t[2]];i=v[t[3]];t=o*o;j=o*t;p[0]=g(m[0],A[0],d[0],i[0],o,t,j);p[1]=g(m[1],A[1],d[1],i[1],o,t,j);p[2]=g(m[2],A[2],d[2],i[2],o,t,j);return p},g=function(m,i,r,p,o,j,q){m=0.5*(r-m);p=0.5*(p-i);return(2*(i-r)+m+p)*q+(-3*(i-r)-2*m-p)*j+m*o+i};return function(A){if(!1!==this.isPlaying){this.currentTime+=A*this.timeScale;var v;A=["pos","rot","scl"];var t=this.data.length;if(!0===this.loop&&this.currentTime>t){this.currentTime%=t,this.reset()}else{if(!1===this.loop&&this.currentTime>t){this.stop();return}}this.currentTime=Math.min(this.currentTime,t);for(var t=0,o=this.hierarchy.length;t<o;t++){for(var m=this.hierarchy[t],j=m.animationCache,i=0;3>i;i++){v=A[i];var C=j.prevKey[v],a=j.nextKey[v];if(a.time<=this.currentTime){C=this.data.hierarchy[t].keys[0];for(a=this.getNextKeyWith(v,t,1);a.time<this.currentTime&&a.index>C.index;){C=a,a=this.getNextKeyWith(v,t,a.index+1)}j.prevKey[v]=C;j.nextKey[v]=a}m.matrixAutoUpdate=!0;m.matrixWorldNeedsUpdate=!0;var b=(this.currentTime-C.time)/(a.time-C.time),B=C[v],c=a[v];0>b&&(b=0);1<b&&(b=1);if("pos"===v){if(v=m.position,this.interpolationType===THREE.AnimationHandler.LINEAR){v.x=B[0]+(c[0]-B[0])*b,v.y=B[1]+(c[1]-B[1])*b,v.z=B[2]+(c[2]-B[2])*b}else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){f[0]=this.getPrevKeyWith("pos",t,C.index-1).pos,f[1]=B,f[2]=c,f[3]=this.getNextKeyWith("pos",t,a.index+1).pos,b=0.33*b+0.33,C=h(f,b),v.x=C[0],v.y=C[1],v.z=C[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(b=h(f,1.01*b),e.set(b[0],b[1],b[2]),e.sub(v),e.y=0,e.normalize(),v=Math.atan2(e.x,e.z),m.rotation.set(0,v,0))}}}else{"rot"===v?THREE.Quaternion.slerp(B,c,m.quaternion,b):"scl"===v&&(v=m.scale,v.x=B[0]+(c[0]-B[0])*b,v.y=B[1]+(c[1]-B[1])*b,v.z=B[2]+(c[2]-B[2])*b)}}}}}}();THREE.Animation.prototype.getNextKeyWith=function(f,e,h){var g=this.data.hierarchy[e].keys;for(h=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?h<g.length-1?h:g.length-1:h%g.length;h<g.length;h++){if(void 0!==g[h][f]){return g[h]}}return this.data.hierarchy[e].keys[0]};THREE.Animation.prototype.getPrevKeyWith=function(f,e,h){var g=this.data.hierarchy[e].keys;for(h=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<h?h:0:0<=h?h:h+g.length;0<=h;h--){if(void 0!==g[h][f]){return g[h]}}return this.data.hierarchy[e].keys[g.length-1]};THREE.KeyFrameAnimation=function(r,q){this.root=r;this.data=THREE.AnimationHandler.get(q);this.hierarchy=THREE.AnimationHandler.parse(r);this.currentTime=0;this.timeScale=0.001;this.isPlaying=!1;this.loop=this.isPaused=!0;for(var p=0,o=this.hierarchy.length;p<o;p++){var n=this.data.hierarchy[p].sids,m=this.hierarchy[p];if(this.data.hierarchy[p].keys.length&&n){for(var l=0;l<n.length;l++){var j=n[l],i=this.getNextKeyWith(j,p,0);i&&i.apply(j)}m.matrixAutoUpdate=!1;this.data.hierarchy[p].node.updateMatrix();m.matrixWorldNeedsUpdate=!0}}};THREE.KeyFrameAnimation.prototype.play=function(f){this.currentTime=void 0!==f?f:0;if(!1===this.isPlaying){this.isPlaying=!0;var e=this.hierarchy.length,h,g;for(f=0;f<e;f++){h=this.hierarchy[f],g=this.data.hierarchy[f],void 0===g.animationCache&&(g.animationCache={},g.animationCache.prevKey=null,g.animationCache.nextKey=null,g.animationCache.originalMatrix=h instanceof THREE.Bone?h.skinMatrix:h.matrix),h=this.data.hierarchy[f].keys,h.length&&(g.animationCache.prevKey=h[0],g.animationCache.nextKey=h[1],this.startTime=Math.min(h[0].time,this.startTime),this.endTime=Math.max(h[h.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var f=0;f<this.data.hierarchy.length;f++){var e=this.hierarchy[f],h=this.data.hierarchy[f];if(void 0!==h.animationCache){var g=h.animationCache.originalMatrix;e instanceof THREE.Bone?(g.copy(e.skinMatrix),e.skinMatrix=g):(g.copy(e.matrix),e.matrix=g);delete h.animationCache}}};THREE.KeyFrameAnimation.prototype.update=function(i){if(!1!==this.isPlaying){this.currentTime+=i*this.timeScale;i=this.data.length;!0===this.loop&&this.currentTime>i&&(this.currentTime%=i);this.currentTime=Math.min(this.currentTime,i);i=0;for(var h=this.hierarchy.length;i<h;i++){var n=this.hierarchy[i],m=this.data.hierarchy[i],l=m.keys,m=m.animationCache;if(l.length){var k=m.prevKey,j=m.nextKey;if(j.time<=this.currentTime){for(;j.time<this.currentTime&&j.index>k.index;){k=j,j=l[k.index+1]}m.prevKey=k;m.nextKey=j}j.time>=this.currentTime?k.interpolate(j,this.currentTime):k.interpolate(j,j.time);this.data.hierarchy[i].node.updateMatrix();n.matrixWorldNeedsUpdate=!0}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,d,f){d=this.data.hierarchy[d].keys;for(f%=d.length;f<d.length;f++){if(d[f].hasTarget(e)){return d[f]}}return d[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,d,f){d=this.data.hierarchy[d].keys;for(f=0<=f?f:f+d.length;0<=f;f--){if(d[f].hasTarget(e)){return d[f]}}return d[d.length-1]};THREE.MorphAnimation=function(b){this.mesh=b;this.frames=b.morphTargetInfluences.length;this.currentTime=0;this.duration=1000;this.loop=!0;this.isPlaying=!1};THREE.MorphAnimation.prototype={play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(){var d=0,c=0;return function(b){if(!1!==this.isPlaying){this.currentTime+=b;!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration);this.currentTime=Math.min(this.currentTime,this.duration);b=this.duration/this.frames;var a=Math.floor(this.currentTime/b);a!=c&&(this.mesh.morphTargetInfluences[d]=0,this.mesh.morphTargetInfluences[c]=1,this.mesh.morphTargetInfluences[a]=0,d=c,c=a);this.mesh.morphTargetInfluences[a]=this.currentTime%b/b;this.mesh.morphTargetInfluences[d]=1-this.mesh.morphTargetInfluences[a]}}}()};THREE.CubeCamera=function(r,q,p){THREE.Object3D.call(this);var o=new THREE.PerspectiveCamera(90,1,r,q);o.up.set(0,-1,0);o.lookAt(new THREE.Vector3(1,0,0));this.add(o);var n=new THREE.PerspectiveCamera(90,1,r,q);n.up.set(0,-1,0);n.lookAt(new THREE.Vector3(-1,0,0));this.add(n);var m=new THREE.PerspectiveCamera(90,1,r,q);m.up.set(0,0,1);m.lookAt(new THREE.Vector3(0,1,0));this.add(m);var l=new THREE.PerspectiveCamera(90,1,r,q);l.up.set(0,0,-1);l.lookAt(new THREE.Vector3(0,-1,0));this.add(l);var j=new THREE.PerspectiveCamera(90,1,r,q);j.up.set(0,-1,0);j.lookAt(new THREE.Vector3(0,0,1));this.add(j);var i=new THREE.PerspectiveCamera(90,1,r,q);i.up.set(0,-1,0);i.lookAt(new THREE.Vector3(0,0,-1));this.add(i);this.renderTarget=new THREE.WebGLRenderTargetCube(p,p,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(e,d){var g=this.renderTarget,f=g.generateMipmaps;g.generateMipmaps=!1;g.activeCubeFace=0;e.render(d,o,g);g.activeCubeFace=1;e.render(d,n,g);g.activeCubeFace=2;e.render(d,m,g);g.activeCubeFace=3;e.render(d,l,g);g.activeCubeFace=4;e.render(d,j,g);g.generateMipmaps=f;g.activeCubeFace=5;e.render(d,i,g)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(i,h,n,m,l,k,j){THREE.Camera.call(this);this.fov=n;this.left=-i/2;this.right=i/2;this.top=h/2;this.bottom=-h/2;this.cameraO=new THREE.OrthographicCamera(i/-2,i/2,h/2,h/-2,k,j);this.cameraP=new THREE.PerspectiveCamera(n,i/h,m,l);this.zoom=1;this.toPerspective()};THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};THREE.CombinedCamera.prototype.toOrthographic=function(){var d=this.cameraP.aspect,c=(this.cameraP.near+this.cameraP.far)/2,c=Math.tan(this.fov/2)*c,d=2*c*d/2,c=c/this.zoom,d=d/this.zoom;this.cameraO.left=-d;this.cameraO.right=d;this.cameraO.top=c;this.cameraO.bottom=-c;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};THREE.CombinedCamera.prototype.setSize=function(d,c){this.cameraP.aspect=d/c;this.left=-d/2;this.right=d/2;this.top=c/2;this.bottom=-c/2};THREE.CombinedCamera.prototype.setFov=function(b){this.fov=b;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};THREE.CombinedCamera.prototype.setLens=function(e,d){void 0===d&&(d=24);var f=2*THREE.Math.radToDeg(Math.atan(d/(2*e)));this.setFov(f);return f};THREE.CombinedCamera.prototype.setZoom=function(b){this.zoom=b;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.BoxGeometry=function(j,i,p,o,n,m){function l(V,U,T,S,R,Q,P,N){var F,A=k.widthSegments,K=k.heightSegments,s=R/2,q=Q/2,M=k.vertices.length;if("x"===V&&"y"===U||"y"===V&&"x"===U){F="z"}else{if("x"===V&&"z"===U||"z"===V&&"x"===U){F="y",K=k.depthSegments}else{if("z"===V&&"y"===U||"y"===V&&"z"===U){F="x",A=k.depthSegments}}}var J=A+1,u=K+1,L=R/A,C=Q/K,r=new THREE.Vector3;r[F]=0<P?1:-1;for(R=0;R<u;R++){for(Q=0;Q<J;Q++){var h=new THREE.Vector3;h[V]=(Q*L-s)*T;h[U]=(R*C-q)*S;h[F]=P;k.vertices.push(h)}}for(R=0;R<K;R++){for(Q=0;Q<A;Q++){q=Q+J*R,V=Q+J*(R+1),U=Q+1+J*(R+1),T=Q+1+J*R,S=new THREE.Vector2(Q/A,1-R/K),P=new THREE.Vector2(Q/A,1-(R+1)/K),F=new THREE.Vector2((Q+1)/A,1-(R+1)/K),s=new THREE.Vector2((Q+1)/A,1-R/K),q=new THREE.Face3(q+M,V+M,T+M),q.normal.copy(r),q.vertexNormals.push(r.clone(),r.clone(),r.clone()),q.materialIndex=N,k.faces.push(q),k.faceVertexUvs[0].push([S,P,s]),q=new THREE.Face3(V+M,U+M,T+M),q.normal.copy(r),q.vertexNormals.push(r.clone(),r.clone(),r.clone()),q.materialIndex=N,k.faces.push(q),k.faceVertexUvs[0].push([P.clone(),F,s.clone()])}}}THREE.Geometry.call(this);var k=this;this.width=j;this.height=i;this.depth=p;this.widthSegments=o||1;this.heightSegments=n||1;this.depthSegments=m||1;j=this.width/2;i=this.height/2;p=this.depth/2;l("z","y",-1,-1,this.depth,this.height,j,0);l("z","y",1,-1,this.depth,this.height,-j,1);l("x","z",1,1,this.width,this.depth,i,2);l("x","z",1,-1,this.width,this.depth,-i,3);l("x","y",1,-1,this.width,this.height,p,4);l("x","y",-1,-1,this.width,this.height,-p,5);this.computeCentroids();this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry=function(r,q,p,o){THREE.Geometry.call(this);this.radius=r=r||50;this.segments=q=void 0!==q?Math.max(3,q):8;this.thetaStart=p=void 0!==p?p:0;this.thetaLength=o=void 0!==o?o:2*Math.PI;var n,m=[];n=new THREE.Vector3;var l=new THREE.Vector2(0.5,0.5);this.vertices.push(n);m.push(l);for(n=0;n<=q;n++){var j=new THREE.Vector3,i=p+n/q*o;j.x=r*Math.cos(i);j.y=r*Math.sin(i);this.vertices.push(j);m.push(new THREE.Vector2((j.x/r+1)/2,(j.y/r+1)/2))}p=new THREE.Vector3(0,0,1);for(n=1;n<=q;n++){this.faces.push(new THREE.Face3(n,n+1,0,[p.clone(),p.clone(),p.clone()])),this.faceVertexUvs[0].push([m[n].clone(),m[n+1].clone(),l.clone()])}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=THREE.BoxGeometry;THREE.CylinderGeometry=function(Y,X,W,V,U,T){THREE.Geometry.call(this);this.radiusTop=Y=void 0!==Y?Y:20;this.radiusBottom=X=void 0!==X?X:20;this.height=W=void 0!==W?W:100;this.radialSegments=V=V||8;this.heightSegments=U=U||1;this.openEnded=T=void 0!==T?T:!1;var S=W/2,R,Q,P=[],O=[];for(Q=0;Q<=U;Q++){var J=[],K=[],M=Q/U,C=M*(X-Y)+Y;for(R=0;R<=V;R++){var N=R/V,A=new THREE.Vector3;A.x=C*Math.sin(N*Math.PI*2);A.y=-M*W+S;A.z=C*Math.cos(N*Math.PI*2);this.vertices.push(A);J.push(this.vertices.length-1);K.push(new THREE.Vector2(N,1-M))}P.push(J);O.push(K)}W=(X-Y)/W;for(R=0;R<V;R++){for(0!==Y?(J=this.vertices[P[0][R]].clone(),K=this.vertices[P[0][R+1]].clone()):(J=this.vertices[P[1][R]].clone(),K=this.vertices[P[1][R+1]].clone()),J.setY(Math.sqrt(J.x*J.x+J.z*J.z)*W).normalize(),K.setY(Math.sqrt(K.x*K.x+K.z*K.z)*W).normalize(),Q=0;Q<U;Q++){var M=P[Q][R],C=P[Q+1][R],N=P[Q+1][R+1],A=P[Q][R+1],o=J.clone(),G=J.clone(),j=K.clone(),i=K.clone(),L=O[Q][R].clone(),F=O[Q+1][R].clone(),m=O[Q+1][R+1].clone(),I=O[Q][R+1].clone();this.faces.push(new THREE.Face3(M,C,A,[o,G,i]));this.faceVertexUvs[0].push([L,F,I]);this.faces.push(new THREE.Face3(C,N,A,[G.clone(),j,i.clone()]));this.faceVertexUvs[0].push([F.clone(),m,I.clone()])}}if(!1===T&&0<Y){for(this.vertices.push(new THREE.Vector3(0,S,0)),R=0;R<V;R++){M=P[0][R],C=P[0][R+1],N=this.vertices.length-1,o=new THREE.Vector3(0,1,0),G=new THREE.Vector3(0,1,0),j=new THREE.Vector3(0,1,0),L=O[0][R].clone(),F=O[0][R+1].clone(),m=new THREE.Vector2(F.x,0),this.faces.push(new THREE.Face3(M,C,N,[o,G,j])),this.faceVertexUvs[0].push([L,F,m])}}if(!1===T&&0<X){for(this.vertices.push(new THREE.Vector3(0,-S,0)),R=0;R<V;R++){M=P[Q][R+1],C=P[Q][R],N=this.vertices.length-1,o=new THREE.Vector3(0,-1,0),G=new THREE.Vector3(0,-1,0),j=new THREE.Vector3(0,-1,0),L=O[Q][R+1].clone(),F=O[Q][R].clone(),m=new THREE.Vector2(F.x,1),this.faces.push(new THREE.Face3(M,C,N,[o,G,j])),this.faceVertexUvs[0].push([L,F,m])}}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry=function(d,c){"undefined"!==typeof d&&(THREE.Geometry.call(this),d=d instanceof Array?d:[d],this.shapebb=d[d.length-1].getBoundingBox(),this.addShapeList(d,c),this.computeCentroids(),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(f,e){for(var h=f.length,g=0;g<h;g++){this.addShape(f[g],e)}};THREE.ExtrudeGeometry.prototype.addShape=function(aH,aG){function aF(e,d,f){d||console.log("die");return d.clone().multiplyScalar(f).add(e)}function aE(B,A,v){var u=THREE.Math.sign,t=1,t=B.x-A.x,s=B.y-A.y,r=v.x-B.x,q=v.y-B.y,p=t*t+s*s;if(1e-10<Math.abs(t*q-s*r)){var n=Math.sqrt(p),u=Math.sqrt(r*r+q*q),p=A.x-s/n;A=A.y+t/n;r=((v.x-q/u-p)*q-(v.y+r/u-A)*r)/(t*q-s*r);v=p+t*r-B.x;B=A+s*r-B.y;t=v*v+B*B;if(2>=t){return new THREE.Vector2(v,B)}t=Math.sqrt(t/2)}else{B=!1,1e-10<t?1e-10<r&&(B=!0):-1e-10>t?-1e-10>r&&(B=!0):u(s)==u(q)&&(B=!0),B?(v=-s,B=t,t=Math.sqrt(p)):(v=t,B=s,t=Math.sqrt(p/2))}return new THREE.Vector2(v/t,B/t)}function aD(E,D){var C,B;for(X=E.length;0<=--X;){C=X;B=X-1;0>B&&(B=E.length-1);for(var A=0,t=av+2*ax,A=0;A<t;A++){var q=ak*A,n=ak*(A+1),b=D+C+q,q=D+B+q,a=D+B+n,n=D+C+n,J=E,I=A,H=t,G=C,F=B,b=b+U,q=q+U,a=a+U,n=n+U;P.faces.push(new THREE.Face3(b,q,n,null,null,ar));P.faces.push(new THREE.Face3(q,a,n,null,null,ar));b=an.generateSideWallUV(P,aH,J,aG,b,q,a,n,I,H,G,F);P.faceVertexUvs[0].push([b[0],b[1],b[3]]);P.faceVertexUvs[0].push([b[1],b[2],b[3]])}}}function aC(e,d,f){P.vertices.push(new THREE.Vector3(e,d,f))}function aB(h,g,b,a){h+=U;g+=U;b+=U;P.faces.push(new THREE.Face3(h,g,b,null,null,ao));h=a?an.generateBottomUV(P,aH,aG,h,g,b):an.generateTopUV(P,aH,aG,h,g,b);P.faceVertexUvs[0].push(h)}var aA=void 0!==aG.amount?aG.amount:100,az=void 0!==aG.bevelThickness?aG.bevelThickness:6,ay=void 0!==aG.bevelSize?aG.bevelSize:az-2,ax=void 0!==aG.bevelSegments?aG.bevelSegments:3,at=void 0!==aG.bevelEnabled?aG.bevelEnabled:!0,au=void 0!==aG.curveSegments?aG.curveSegments:12,av=void 0!==aG.steps?aG.steps:1,aq=aG.extrudePath,aw,ap=!1,ao=aG.material,ar=aG.extrudeMaterial,an=void 0!==aG.UVGenerator?aG.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,al,ag,ad,aa;aq&&(aw=aq.getSpacedPoints(av),ap=!0,at=!1,al=void 0!==aG.frames?aG.frames:new THREE.TubeGeometry.FrenetFrames(aq,av,!1),ag=new THREE.Vector3,ad=new THREE.Vector3,aa=new THREE.Vector3);at||(ay=az=ax=0);var ae,ab,Z,P=this,U=this.vertices.length,aq=aH.extractPoints(au),au=aq.shape,am=aq.holes;if(aq=!THREE.Shape.Utils.isClockWise(au)){au=au.reverse();ab=0;for(Z=am.length;ab<Z;ab++){ae=am[ab],THREE.Shape.Utils.isClockWise(ae)&&(am[ab]=ae.reverse())}aq=!1}var ac=THREE.Shape.Utils.triangulateShape(au,am),af=au;ab=0;for(Z=am.length;ab<Z;ab++){ae=am[ab],au=au.concat(ae)}var ah,T,M,i,o,ak=au.length,m,aj=ac.length,aq=[],X=0;M=af.length;ah=M-1;for(T=X+1;X<M;X++,ah++,T++){ah===M&&(ah=0),T===M&&(T=0),aq[X]=aE(af[X],af[ah],af[T])}var ai=[],j,S=aq.concat();ab=0;for(Z=am.length;ab<Z;ab++){ae=am[ab];j=[];X=0;M=ae.length;ah=M-1;for(T=X+1;X<M;X++,ah++,T++){ah===M&&(ah=0),T===M&&(T=0),j[X]=aE(ae[X],ae[ah],ae[T])}ai.push(j);S=S.concat(j)}for(ah=0;ah<ax;ah++){M=ah/ax;i=az*(1-M);T=ay*Math.sin(M*Math.PI/2);X=0;for(M=af.length;X<M;X++){o=aF(af[X],aq[X],T),aC(o.x,o.y,-i)}ab=0;for(Z=am.length;ab<Z;ab++){for(ae=am[ab],j=ai[ab],X=0,M=ae.length;X<M;X++){o=aF(ae[X],j[X],T),aC(o.x,o.y,-i)}}}T=ay;for(X=0;X<ak;X++){o=at?aF(au[X],S[X],T):au[X],ap?(ad.copy(al.normals[0]).multiplyScalar(o.x),ag.copy(al.binormals[0]).multiplyScalar(o.y),aa.copy(aw[0]).add(ad).add(ag),aC(aa.x,aa.y,aa.z)):aC(o.x,o.y,0)}for(M=1;M<=av;M++){for(X=0;X<ak;X++){o=at?aF(au[X],S[X],T):au[X],ap?(ad.copy(al.normals[M]).multiplyScalar(o.x),ag.copy(al.binormals[M]).multiplyScalar(o.y),aa.copy(aw[M]).add(ad).add(ag),aC(aa.x,aa.y,aa.z)):aC(o.x,o.y,aA/av*M)}}for(ah=ax-1;0<=ah;ah--){M=ah/ax;i=az*(1-M);T=ay*Math.sin(M*Math.PI/2);X=0;for(M=af.length;X<M;X++){o=aF(af[X],aq[X],T),aC(o.x,o.y,aA+i)}ab=0;for(Z=am.length;ab<Z;ab++){for(ae=am[ab],j=ai[ab],X=0,M=ae.length;X<M;X++){o=aF(ae[X],j[X],T),ap?aC(o.x,o.y+aw[av-1].y,aw[av-1].x+i):aC(o.x,o.y,aA+i)}}}(function(){if(at){var b;b=0*ak;for(X=0;X<aj;X++){m=ac[X],aB(m[2]+b,m[1]+b,m[0]+b,!0)}b=av+2*ax;b*=ak;for(X=0;X<aj;X++){m=ac[X],aB(m[0]+b,m[1]+b,m[2]+b,!1)}}else{for(X=0;X<aj;X++){m=ac[X],aB(m[2],m[1],m[0],!0)}for(X=0;X<aj;X++){m=ac[X],aB(m[0]+ak*av,m[1]+ak*av,m[2]+ak*av,!1)}}})();(function(){var b=0;aD(af,b);b+=af.length;ab=0;for(Z=am.length;ab<Z;ab++){ae=am[ab],aD(ae,b),b+=ae.length}})()};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(h,g,l,k,j,i){g=h.vertices[j].x;j=h.vertices[j].y;l=h.vertices[i].x;i=h.vertices[i].y;return[new THREE.Vector2(h.vertices[k].x,h.vertices[k].y),new THREE.Vector2(g,j),new THREE.Vector2(l,i)]},generateBottomUV:function(h,g,l,k,j,i){return this.generateTopUV(h,g,l,k,j,i)},generateSideWallUV:function(C,B,A,v,u,t,q,p,o,m,j,D){B=C.vertices[u].x;A=C.vertices[u].y;u=C.vertices[u].z;v=C.vertices[t].x;o=C.vertices[t].y;t=C.vertices[t].z;m=C.vertices[q].x;j=C.vertices[q].y;q=C.vertices[q].z;D=C.vertices[p].x;var i=C.vertices[p].y;C=C.vertices[p].z;return 0.01>Math.abs(A-o)?[new THREE.Vector2(B,1-u),new THREE.Vector2(v,1-t),new THREE.Vector2(m,1-q),new THREE.Vector2(D,1-C)]:[new THREE.Vector2(A,1-u),new THREE.Vector2(o,1-t),new THREE.Vector2(j,1-q),new THREE.Vector2(i,1-C)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(d,c){THREE.Geometry.call(this);!1===d instanceof Array&&(d=[d]);this.shapebb=d[d.length-1].getBoundingBox();this.addShapeList(d,c);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(f,e){for(var h=0,g=f.length;h<g;h++){this.addShape(f[h],e)}return this};THREE.ShapeGeometry.prototype.addShape=function(v,u){void 0===u&&(u={});var t=u.material,s=void 0===u.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:u.UVGenerator,r,q,p,o=this.vertices.length;r=v.extractPoints(void 0!==u.curveSegments?u.curveSegments:12);var m=r.shape,j=r.holes;if(!THREE.Shape.Utils.isClockWise(m)){for(m=m.reverse(),r=0,q=j.length;r<q;r++){p=j[r],THREE.Shape.Utils.isClockWise(p)&&(j[r]=p.reverse())}}var i=THREE.Shape.Utils.triangulateShape(m,j);r=0;for(q=j.length;r<q;r++){p=j[r],m=m.concat(p)}j=m.length;q=i.length;for(r=0;r<j;r++){p=m[r],this.vertices.push(new THREE.Vector3(p.x,p.y,0))}for(r=0;r<q;r++){j=i[r],m=j[0]+o,p=j[1]+o,j=j[2]+o,this.faces.push(new THREE.Face3(m,p,j,null,null,t)),this.faceVertexUvs[0].push(s.generateBottomUV(this,v,u,m,p,j))}};THREE.LatheGeometry=function(H,G,F,E){THREE.Geometry.call(this);G=G||12;F=F||0;E=E||2*Math.PI;for(var D=1/(H.length-1),C=1/G,B=0,A=G;B<=A;B++){for(var v=F+B*C*E,t=Math.cos(v),o=Math.sin(v),v=0,J=H.length;v<J;v++){var i=H[v],j=new THREE.Vector3;j.x=t*i.x-o*i.y;j.y=o*i.x+t*i.y;j.z=i.z;this.vertices.push(j)}}F=H.length;B=0;for(A=G;B<A;B++){for(v=0,J=H.length-1;v<J;v++){G=o=v+F*B;E=o+F;var t=o+1+F,o=o+1,i=B*C,j=v*D,I=i+C,m=j+D;this.faces.push(new THREE.Face3(G,E,o));this.faceVertexUvs[0].push([new THREE.Vector2(i,j),new THREE.Vector2(I,j),new THREE.Vector2(i,m)]);this.faces.push(new THREE.Face3(E,t,o));this.faceVertexUvs[0].push([new THREE.Vector2(I,j),new THREE.Vector2(I,m),new THREE.Vector2(i,m)])}}this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry=function(E,D,C,B){THREE.Geometry.call(this);this.width=E;this.height=D;this.widthSegments=C||1;this.heightSegments=B||1;var A=E/2,v=D/2;C=this.widthSegments;B=this.heightSegments;var u=C+1,t=B+1,p=this.width/C,o=this.height/B,m=new THREE.Vector3(0,0,1);for(E=0;E<t;E++){for(D=0;D<u;D++){this.vertices.push(new THREE.Vector3(D*p-A,-(E*o-v),0))}}for(E=0;E<B;E++){for(D=0;D<C;D++){var F=D+u*E,A=D+u*(E+1),v=D+1+u*(E+1),t=D+1+u*E,p=new THREE.Vector2(D/C,1-E/B),o=new THREE.Vector2(D/C,1-(E+1)/B),i=new THREE.Vector2((D+1)/C,1-(E+1)/B),j=new THREE.Vector2((D+1)/C,1-E/B),F=new THREE.Face3(F,A,t);F.normal.copy(m);F.vertexNormals.push(m.clone(),m.clone(),m.clone());this.faces.push(F);this.faceVertexUvs[0].push([p,o,j]);F=new THREE.Face3(A,v,t);F.normal.copy(m);F.vertexNormals.push(m.clone(),m.clone(),m.clone());this.faces.push(F);this.faceVertexUvs[0].push([o.clone(),i,j.clone()])}}this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry=function(A,v,u,t,r,q){THREE.Geometry.call(this);A=A||0;v=v||50;r=void 0!==r?r:0;q=void 0!==q?q:2*Math.PI;u=void 0!==u?Math.max(3,u):8;t=void 0!==t?Math.max(3,t):8;var p,o=[],m=A,j=(v-A)/t;for(A=0;A<=t;A++){for(p=0;p<=u;p++){var i=new THREE.Vector3,B=r+p/u*q;i.x=m*Math.cos(B);i.y=m*Math.sin(B);this.vertices.push(i);o.push(new THREE.Vector2((i.x/v+1)/2,(i.y/v+1)/2))}m+=j}v=new THREE.Vector3(0,0,1);for(A=0;A<t;A++){for(r=A*u,p=0;p<=u;p++){B=p+r,q=B+A,j=B+u+A,i=B+u+1+A,this.faces.push(new THREE.Face3(q,j,i,[v.clone(),v.clone(),v.clone()])),this.faceVertexUvs[0].push([o[q].clone(),o[j].clone(),o[i].clone()]),q=B+A,j=B+u+1+A,i=B+1+A,this.faces.push(new THREE.Face3(q,j,i,[v.clone(),v.clone(),v.clone()])),this.faceVertexUvs[0].push([o[q].clone(),o[j].clone(),o[i].clone()])}}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,m)};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry=function(I,H,G,F,E,D,C){THREE.Geometry.call(this);this.radius=I=I||50;this.widthSegments=H=Math.max(3,Math.floor(H)||8);this.heightSegments=G=Math.max(2,Math.floor(G)||6);this.phiStart=F=void 0!==F?F:0;this.phiLength=E=void 0!==E?E:2*Math.PI;this.thetaStart=D=void 0!==D?D:0;this.thetaLength=C=void 0!==C?C:Math.PI;var B,A,t=[],o=[];for(A=0;A<=G;A++){var L=[],i=[];for(B=0;B<=H;B++){var j=B/H,K=A/G,m=new THREE.Vector3;m.x=-I*Math.cos(F+j*E)*Math.sin(D+K*C);m.y=I*Math.cos(D+K*C);m.z=I*Math.sin(F+j*E)*Math.sin(D+K*C);this.vertices.push(m);L.push(this.vertices.length-1);i.push(new THREE.Vector2(j,1-K))}t.push(L);o.push(i)}for(A=0;A<this.heightSegments;A++){for(B=0;B<this.widthSegments;B++){H=t[A][B+1];G=t[A][B];F=t[A+1][B];E=t[A+1][B+1];D=this.vertices[H].clone().normalize();C=this.vertices[G].clone().normalize();var L=this.vertices[F].clone().normalize(),i=this.vertices[E].clone().normalize(),j=o[A][B+1].clone(),K=o[A][B].clone(),m=o[A+1][B].clone(),J=o[A+1][B+1].clone();Math.abs(this.vertices[H].y)===this.radius?(j.x=(j.x+K.x)/2,this.faces.push(new THREE.Face3(H,F,E,[D,L,i])),this.faceVertexUvs[0].push([j,m,J])):Math.abs(this.vertices[F].y)===this.radius?(m.x=(m.x+J.x)/2,this.faces.push(new THREE.Face3(H,G,F,[D,C,L])),this.faceVertexUvs[0].push([j,K,m])):(this.faces.push(new THREE.Face3(H,G,E,[D,C,i])),this.faceVertexUvs[0].push([j,K,J]),this.faces.push(new THREE.Face3(G,F,E,[C.clone(),L,i.clone()])),this.faceVertexUvs[0].push([K.clone(),m,J.clone()]))}}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,I)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(e,d){d=d||{};var f=THREE.FontUtils.generateShapes(e,d);d.amount=void 0!==d.height?d.height:50;void 0===d.bevelThickness&&(d.bevelThickness=10);void 0===d.bevelSize&&(d.bevelSize=8);void 0===d.bevelEnabled&&(d.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,f,d)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TorusGeometry=function(r,q,p,o,n){THREE.Geometry.call(this);this.radius=r||100;this.tube=q||40;this.radialSegments=p||8;this.tubularSegments=o||6;this.arc=n||2*Math.PI;n=new THREE.Vector3;r=[];q=[];for(p=0;p<=this.radialSegments;p++){for(o=0;o<=this.tubularSegments;o++){var m=o/this.tubularSegments*this.arc,l=p/this.radialSegments*Math.PI*2;n.x=this.radius*Math.cos(m);n.y=this.radius*Math.sin(m);var j=new THREE.Vector3;j.x=(this.radius+this.tube*Math.cos(l))*Math.cos(m);j.y=(this.radius+this.tube*Math.cos(l))*Math.sin(m);j.z=this.tube*Math.sin(l);this.vertices.push(j);r.push(new THREE.Vector2(o/this.tubularSegments,p/this.radialSegments));q.push(j.clone().sub(n).normalize())}}for(p=1;p<=this.radialSegments;p++){for(o=1;o<=this.tubularSegments;o++){n=(this.tubularSegments+1)*p+o-1;var m=(this.tubularSegments+1)*(p-1)+o-1,l=(this.tubularSegments+1)*(p-1)+o,j=(this.tubularSegments+1)*p+o,i=new THREE.Face3(n,m,j,[q[n].clone(),q[m].clone(),q[j].clone()]);this.faces.push(i);this.faceVertexUvs[0].push([r[n].clone(),r[m].clone(),r[j].clone()]);i=new THREE.Face3(m,l,j,[q[m].clone(),q[l].clone(),q[j].clone()]);this.faces.push(i);this.faceVertexUvs[0].push([r[m].clone(),r[l].clone(),r[j].clone()])}}this.computeCentroids();this.computeFaceNormals()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry=function(v,u,t,s,r,q,p){function o(k,h,C,B,A){var n=Math.cos(k),l=Math.sin(k);k*=h/C;h=Math.cos(k);n*=B*(2+h)*0.5;l=B*(2+h)*l*0.5;B=A*B*Math.sin(k)*0.5;return new THREE.Vector3(n,l,B)}THREE.Geometry.call(this);this.radius=v||100;this.tube=u||40;this.radialSegments=t||64;this.tubularSegments=s||8;this.p=r||2;this.q=q||3;this.heightScale=p||1;this.grid=Array(this.radialSegments);t=new THREE.Vector3;s=new THREE.Vector3;r=new THREE.Vector3;for(v=0;v<this.radialSegments;++v){for(this.grid[v]=Array(this.tubularSegments),u=v/this.radialSegments*2*this.p*Math.PI,q=o(u,this.q,this.p,this.radius,this.heightScale),u=o(u+0.01,this.q,this.p,this.radius,this.heightScale),t.subVectors(u,q),s.addVectors(u,q),r.crossVectors(t,s),s.crossVectors(r,t),r.normalize(),s.normalize(),u=0;u<this.tubularSegments;++u){var m=u/this.tubularSegments*2*Math.PI;p=-this.tube*Math.cos(m);var m=this.tube*Math.sin(m),j=new THREE.Vector3;j.x=q.x+p*s.x+m*r.x;j.y=q.y+p*s.y+m*r.y;j.z=q.z+p*s.z+m*r.z;this.grid[v][u]=this.vertices.push(j)-1}}for(v=0;v<this.radialSegments;++v){for(u=0;u<this.tubularSegments;++u){r=(v+1)%this.radialSegments;q=(u+1)%this.tubularSegments;t=this.grid[v][u];s=this.grid[r][u];r=this.grid[r][q];q=this.grid[v][q];p=new THREE.Vector2(v/this.radialSegments,u/this.tubularSegments);var m=new THREE.Vector2((v+1)/this.radialSegments,u/this.tubularSegments),j=new THREE.Vector2((v+1)/this.radialSegments,(u+1)/this.tubularSegments),i=new THREE.Vector2(v/this.radialSegments,(u+1)/this.tubularSegments);this.faces.push(new THREE.Face3(t,s,q));this.faceVertexUvs[0].push([p,m,i]);this.faces.push(new THREE.Face3(s,r,q));this.faceVertexUvs[0].push([m.clone(),j,i.clone()])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry=function(A,v,u,t,r){THREE.Geometry.call(this);this.path=A;this.segments=v||64;this.radius=u||1;this.radialSegments=t||8;this.closed=r||!1;this.grid=[];var q,p;t=this.segments+1;var o,m,j;r=new THREE.Vector3;var i,B;v=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed);i=v.normals;B=v.binormals;this.tangents=v.tangents;this.normals=i;this.binormals=B;for(v=0;v<t;v++){for(this.grid[v]=[],u=v/(t-1),j=A.getPointAt(u),q=i[v],p=B[v],u=0;u<this.radialSegments;u++){o=u/this.radialSegments*2*Math.PI,m=-this.radius*Math.cos(o),o=this.radius*Math.sin(o),r.copy(j),r.x+=m*q.x+o*p.x,r.y+=m*q.y+o*p.y,r.z+=m*q.z+o*p.z,this.grid[v][u]=this.vertices.push(new THREE.Vector3(r.x,r.y,r.z))-1}}for(v=0;v<this.segments;v++){for(u=0;u<this.radialSegments;u++){r=this.closed?(v+1)%this.segments:v+1,i=(u+1)%this.radialSegments,A=this.grid[v][u],t=this.grid[r][u],r=this.grid[r][i],i=this.grid[v][i],B=new THREE.Vector2(v/this.segments,u/this.radialSegments),q=new THREE.Vector2((v+1)/this.segments,u/this.radialSegments),p=new THREE.Vector2((v+1)/this.segments,(u+1)/this.radialSegments),m=new THREE.Vector2(v/this.segments,(u+1)/this.radialSegments),this.faces.push(new THREE.Face3(A,t,i)),this.faceVertexUvs[0].push([B,q,m]),this.faces.push(new THREE.Face3(t,r,i)),this.faceVertexUvs[0].push([q.clone(),p,m.clone()])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.FrenetFrames=function(A,v,u){new THREE.Vector3;var t=new THREE.Vector3;new THREE.Vector3;var r=[],q=[],p=[],o=new THREE.Vector3,m=new THREE.Matrix4;v+=1;var j,i,B;this.tangents=r;this.normals=q;this.binormals=p;for(j=0;j<v;j++){i=j/(v-1),r[j]=A.getTangentAt(i),r[j].normalize()}q[0]=new THREE.Vector3;p[0]=new THREE.Vector3;A=Number.MAX_VALUE;j=Math.abs(r[0].x);i=Math.abs(r[0].y);B=Math.abs(r[0].z);j<=A&&(A=j,t.set(1,0,0));i<=A&&(A=i,t.set(0,1,0));B<=A&&t.set(0,0,1);o.crossVectors(r[0],t).normalize();q[0].crossVectors(r[0],o);p[0].crossVectors(r[0],q[0]);for(j=1;j<v;j++){q[j]=q[j-1].clone(),p[j]=p[j-1].clone(),o.crossVectors(r[j-1],r[j]),0.0001<o.length()&&(o.normalize(),t=Math.acos(THREE.Math.clamp(r[j-1].dot(r[j]),-1,1)),q[j].applyMatrix4(m.makeRotationAxis(o,t))),p[j].crossVectors(r[j],q[j])}if(u){for(t=Math.acos(THREE.Math.clamp(q[0].dot(q[v-1]),-1,1)),t/=v-1,0<r[0].dot(o.crossVectors(q[0],q[v-1]))&&(t=-t),j=1;j<v;j++){q[j].applyMatrix4(m.makeRotationAxis(r[j],t*j)),p[j].crossVectors(r[j],q[j])}}};THREE.PolyhedronGeometry=function(F,E,D,C){function B(e){var d=e.normalize().clone();d.index=p.vertices.push(d)-1;var f=Math.atan2(e.z,-e.x)/2/Math.PI+0.5;e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+0.5;d.uv=new THREE.Vector2(f,1-e);return d}function A(f,e,h){var g=new THREE.Face3(f.index,e.index,h.index,[f.clone(),e.clone(),h.clone()]);g.centroid.add(f).add(e).add(h).divideScalar(3);p.faces.push(g);g=g.centroid;g=Math.atan2(g.z,-g.x);p.faceVertexUvs[0].push([t(f.uv,f,g),t(e.uv,e,g),t(h.uv,h,g)])}function v(O,N){var M=Math.pow(2,N);Math.pow(4,N);for(var L=B(p.vertices[O.a]),K=B(p.vertices[O.b]),J=B(p.vertices[O.c]),I=[],k=0;k<=M;k++){I[k]=[];for(var f=B(L.clone().lerp(J,k/M)),e=B(K.clone().lerp(J,k/M)),Q=M-k,P=0;P<=Q;P++){I[k][P]=0==P&&k==M?f:B(f.clone().lerp(e,P/Q))}}for(k=0;k<M;k++){for(P=0;P<2*(M-k)-1;P++){L=Math.floor(P/2),0==P%2?A(I[k][L+1],I[k+1][L],I[k][L]):A(I[k][L+1],I[k+1][L+1],I[k+1][L])}}}function t(e,d,f){0>f&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y));0===d.x&&0===d.z&&(e=new THREE.Vector2(f/2/Math.PI+0.5,e.y));return e.clone()}THREE.Geometry.call(this);D=D||1;C=C||0;for(var p=this,o=0,m=F.length;o<m;o++){B(new THREE.Vector3(F[o][0],F[o][1],F[o][2]))}F=this.vertices;for(var H=[],o=0,m=E.length;o<m;o++){var i=F[E[o][0]],j=F[E[o][1]],G=F[E[o][2]];H[o]=new THREE.Face3(i.index,j.index,G.index,[i.clone(),j.clone(),G.clone()])}o=0;for(m=H.length;o<m;o++){v(H[o],C)}o=0;for(m=this.faceVertexUvs[0].length;o<m;o++){E=this.faceVertexUvs[0][o],C=E[0].x,F=E[1].x,H=E[2].x,i=Math.max(C,Math.max(F,H)),j=Math.min(C,Math.min(F,H)),0.9<i&&0.1>j&&(0.2>C&&(E[0].x+=1),0.2>F&&(E[1].x+=1),0.2>H&&(E[2].x+=1))}o=0;for(m=this.vertices.length;o<m;o++){this.vertices[o].multiplyScalar(D)}this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,D)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.IcosahedronGeometry=function(e,d){this.radius=e;this.detail=d;var f=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,f,0],[1,f,0],[-1,-f,0],[1,-f,0],[0,-1,f],[0,1,f],[0,-1,-f],[0,1,-f],[f,0,-1],[f,0,1],[-f,0,-1],[-f,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],e,d)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry=function(d,c){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],d,c)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(d,c){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],d,c)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry=function(F,E,D){THREE.Geometry.call(this);var C=this.vertices,B=this.faces,A=this.faceVertexUvs[0],v,t,p,o,m=E+1;for(v=0;v<=D;v++){for(o=v/D,t=0;t<=E;t++){p=t/E,p=F(p,o),C.push(p)}}var H,i,j,G;for(v=0;v<D;v++){for(t=0;t<E;t++){F=v*m+t,C=v*m+t+1,o=(v+1)*m+t+1,p=(v+1)*m+t,H=new THREE.Vector2(t/E,v/D),i=new THREE.Vector2((t+1)/E,v/D),j=new THREE.Vector2((t+1)/E,(v+1)/D),G=new THREE.Vector2(t/E,(v+1)/D),B.push(new THREE.Face3(F,C,p)),A.push([H,i,G]),B.push(new THREE.Face3(C,o,p)),A.push([i.clone(),j,G.clone()])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.AxisHelper=function(d){d=d||1;var c=new THREE.Geometry;c.vertices.push(new THREE.Vector3,new THREE.Vector3(d,0,0),new THREE.Vector3,new THREE.Vector3(0,d,0),new THREE.Vector3,new THREE.Vector3(0,0,d));c.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,c,d,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.ArrowHelper=function(h,g,l,k,j,i){THREE.Object3D.call(this);void 0===k&&(k=16776960);void 0===l&&(l=1);void 0===j&&(j=0.2*l);void 0===i&&(i=0.2*j);this.position=g;g=new THREE.Geometry;g.vertices.push(new THREE.Vector3(0,0,0));g.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(g,new THREE.LineBasicMaterial({color:k}));this.line.matrixAutoUpdate=!1;this.add(this.line);g=new THREE.CylinderGeometry(0,0.5,1,5,1);g.applyMatrix((new THREE.Matrix4).makeTranslation(0,-0.5,0));this.cone=new THREE.Mesh(g,new THREE.MeshBasicMaterial({color:k}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(h);this.setLength(l,j,i)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(){var d=new THREE.Vector3,c;return function(a){0.99999<a.y?this.quaternion.set(0,0,0,1):-0.99999>a.y?this.quaternion.set(1,0,0,0):(d.set(a.z,0,-a.x).normalize(),c=Math.acos(a.y),this.quaternion.setFromAxisAngle(d,c))}}();THREE.ArrowHelper.prototype.setLength=function(e,d,f){void 0===d&&(d=0.2*e);void 0===f&&(f=0.2*d);this.line.scale.set(1,e,1);this.line.updateMatrix();this.cone.scale.set(f,d,f);this.cone.position.y=e;this.cone.updateMatrix()};THREE.ArrowHelper.prototype.setColor=function(b){this.line.material.color.setHex(b);this.cone.material.color.setHex(b)};THREE.BoxHelper=function(e){var d=[new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1)];this.vertices=d;var f=new THREE.Geometry;f.vertices.push(d[0],d[1],d[1],d[2],d[2],d[3],d[3],d[0],d[4],d[5],d[5],d[6],d[6],d[7],d[7],d[4],d[0],d[4],d[1],d[5],d[2],d[6],d[3],d[7]);THREE.Line.call(this,f,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces);void 0!==e&&this.update(e)};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);THREE.BoxHelper.prototype.update=function(f){var e=f.geometry;null===e.boundingBox&&e.computeBoundingBox();var h=e.boundingBox.min,e=e.boundingBox.max,g=this.vertices;g[0].set(e.x,e.y,e.z);g[1].set(h.x,e.y,e.z);g[2].set(h.x,h.y,e.z);g[3].set(e.x,h.y,e.z);g[4].set(e.x,e.y,h.z);g[5].set(h.x,e.y,h.z);g[6].set(h.x,h.y,h.z);g[7].set(e.x,h.y,h.z);this.geometry.computeBoundingSphere();this.geometry.verticesNeedUpdate=!0;this.matrixAutoUpdate=!1;this.matrixWorld=f.matrixWorld};THREE.BoundingBoxHelper=function(e,d){var f=void 0!==d?d:8947848;this.object=e;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:f,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};THREE.CameraHelper=function(h){function g(e,c,f){l(e,f);l(c,f)}function l(d,c){k.vertices.push(new THREE.Vector3);k.colors.push(new THREE.Color(c));void 0===i[d]&&(i[d]=[]);i[d].push(k.vertices.length-1)}var k=new THREE.Geometry,j=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),i={};g("n1","n2",16755200);g("n2","n4",16755200);g("n4","n3",16755200);g("n3","n1",16755200);g("f1","f2",16755200);g("f2","f4",16755200);g("f4","f3",16755200);g("f3","f1",16755200);g("n1","f1",16755200);g("n2","f2",16755200);g("n3","f3",16755200);g("n4","f4",16755200);g("p","n1",16711680);g("p","n2",16711680);g("p","n3",16711680);g("p","n4",16711680);g("u1","u2",43775);g("u2","u3",43775);g("u3","u1",43775);g("c","t",16777215);g("p","c",3355443);g("cn1","cn2",3355443);g("cn3","cn4",3355443);g("cf1","cf2",3355443);g("cf3","cf4",3355443);THREE.Line.call(this,k,j,THREE.LinePieces);this.camera=h;this.matrixWorld=h.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=i;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.update=function(){var e=new THREE.Vector3,d=new THREE.Camera,f=new THREE.Projector;return function(){function b(l,j,i,c){e.set(j,i,c);f.unprojectVector(e,d);l=a.pointMap[l];if(void 0!==l){for(j=0,i=l.length;j<i;j++){a.geometry.vertices[l[j]].copy(e)}}}var a=this;d.projectionMatrix.copy(this.camera.projectionMatrix);b("c",0,0,-1);b("t",0,0,1);b("n1",-1,-1,-1);b("n2",1,-1,-1);b("n3",-1,1,-1);b("n4",1,1,-1);b("f1",-1,-1,1);b("f2",1,-1,1);b("f3",-1,1,1);b("f4",1,1,1);b("u1",0.7,1.1,-1);b("u2",-0.7,1.1,-1);b("u3",0,2,-1);b("cf1",-1,0,1);b("cf2",1,0,1);b("cf3",0,-1,1);b("cf4",0,1,1);b("cn1",-1,0,-1);b("cn2",1,0,-1);b("cn3",0,-1,-1);b("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0}}();THREE.DirectionalLightHelper=function(f,e){THREE.Object3D.call(this);this.light=f;this.light.updateMatrixWorld();this.matrixWorld=f.matrixWorld;this.matrixAutoUpdate=!1;e=e||1;var h=new THREE.PlaneGeometry(e,e),g=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Mesh(h,g);this.add(this.lightPlane);h=new THREE.Geometry;h.vertices.push(new THREE.Vector3);h.vertices.push(new THREE.Vector3);g=new THREE.LineBasicMaterial({fog:!1});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(h,g);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld);d.setFromMatrixPosition(this.light.target.matrixWorld);f.subVectors(d,e);this.lightPlane.lookAt(f);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(f);this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();THREE.EdgesHelper=function(H,G){var F=void 0!==G?G:16777215,E=[0,0],D={},C=function(d,c){return d-c},B=["a","b","c"],A=new THREE.BufferGeometry,v=H.geometry.clone();v.mergeVertices();v.computeFaceNormals();for(var t=v.vertices,v=v.faces,o=0,J=0,i=v.length;J<i;J++){for(var j=v[J],I=0;3>I;I++){E[0]=j[B[I]];E[1]=j[B[(I+1)%3]];E.sort(C);var m=E.toString();void 0===D[m]?(D[m]={vert1:E[0],vert2:E[1],face1:J,face2:void 0},o++):D[m].face2=J}}A.addAttribute("position",Float32Array,2*o,3);E=A.attributes.position.array;C=0;for(m in D){if(B=D[m],void 0===B.face2||0.9999>v[B.face1].normal.dot(v[B.face2].normal)){o=t[B.vert1],E[C++]=o.x,E[C++]=o.y,E[C++]=o.z,o=t[B.vert2],E[C++]=o.x,E[C++]=o.y,E[C++]=o.z}}THREE.Line.call(this,A,new THREE.LineBasicMaterial({color:F}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.matrixWorld=H.matrixWorld};THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype);THREE.FaceNormalsHelper=function(g,f,j,i){this.object=g;this.size=void 0!==f?f:1;g=void 0!==j?j:16776960;i=void 0!==i?i:1;f=new THREE.Geometry;j=0;for(var h=this.object.geometry.faces.length;j<h;j++){f.vertices.push(new THREE.Vector3),f.vertices.push(new THREE.Vector3)}THREE.Line.call(this,f,new THREE.LineBasicMaterial({color:g,linewidth:i}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.FaceNormalsHelper.prototype.update=function(d){var c=new THREE.Vector3;return function(b){this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);b=this.geometry.vertices;for(var o=this.object.geometry.faces,n=this.object.matrixWorld,m=0,l=o.length;m<l;m++){var j=o[m];c.copy(j.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);var i=2*m;b[i].copy(j.centroid).applyMatrix4(n);b[i+1].addVectors(b[i],c)}this.geometry.verticesNeedUpdate=!0;return this}}();THREE.GridHelper=function(h,g){var l=new THREE.Geometry,k=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var j=-h;j<=h;j+=g){l.vertices.push(new THREE.Vector3(-h,0,j),new THREE.Vector3(h,0,j),new THREE.Vector3(j,0,-h),new THREE.Vector3(j,0,h));var i=0===j?this.color1:this.color2;l.colors.push(i,i,i,i)}THREE.Line.call(this,l,k,THREE.LinePieces)};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);THREE.GridHelper.prototype.setColors=function(d,c){this.color1.set(d);this.color2.set(c);this.geometry.colorsNeedUpdate=!0};THREE.HemisphereLightHelper=function(f,e,h,g){THREE.Object3D.call(this);this.light=f;this.light.updateMatrixWorld();this.matrixWorld=f.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new THREE.Color,new THREE.Color];f=new THREE.SphereGeometry(e,4,2);f.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(e=0;8>e;e++){f.faces[e].color=this.colors[4>e?0:1]}e=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(f,e);this.add(this.lightSphere);this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};THREE.HemisphereLightHelper.prototype.update=function(){var b=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(b.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();THREE.PointLightHelper=function(f,e){this.light=f;this.light.updateMatrixWorld();var h=new THREE.SphereGeometry(e,4,2),g=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,h,g);this.matrixWorld=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.SpotLightHelper=function(d){THREE.Object3D.call(this);this.light=d;this.light.updateMatrixWorld();this.matrixWorld=d.matrixWorld;this.matrixAutoUpdate=!1;d=new THREE.CylinderGeometry(0,1,1,8,1,!0);d.applyMatrix((new THREE.Matrix4).makeTranslation(0,-0.5,0));d.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var c=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(d,c);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(){var b=this.light.distance?this.light.distance:10000,a=b*Math.tan(this.light.angle);this.cone.scale.set(a,a,b);d.setFromMatrixPosition(this.light.matrixWorld);c.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(c.sub(d));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();THREE.VertexNormalsHelper=function(j,i,p,o){this.object=j;this.size=void 0!==i?i:1;i=void 0!==p?p:16711680;o=void 0!==o?o:1;p=new THREE.Geometry;j=j.geometry.faces;for(var n=0,m=j.length;n<m;n++){for(var l=0,k=j[n].vertexNormals.length;l<k;l++){p.vertices.push(new THREE.Vector3),p.vertices.push(new THREE.Vector3)}}THREE.Line.call(this,p,new THREE.LineBasicMaterial({color:i,linewidth:o}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexNormalsHelper.prototype.update=function(d){var c=new THREE.Vector3;return function(B){B=["a","b","c","d"];this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var A=this.geometry.vertices,v=this.object.geometry.vertices,u=this.object.geometry.faces,t=this.object.matrixWorld,p=0,o=0,m=u.length;o<m;o++){for(var j=u[o],C=0,b=j.vertexNormals.length;C<b;C++){var i=j.vertexNormals[C];A[p].copy(v[j[B[C]]]).applyMatrix4(t);c.copy(i).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);c.add(A[p]);p+=1;A[p].copy(c);p+=1}}this.geometry.verticesNeedUpdate=!0;return this}}();THREE.VertexTangentsHelper=function(j,i,p,o){this.object=j;this.size=void 0!==i?i:1;i=void 0!==p?p:255;o=void 0!==o?o:1;p=new THREE.Geometry;j=j.geometry.faces;for(var n=0,m=j.length;n<m;n++){for(var l=0,k=j[n].vertexTangents.length;l<k;l++){p.vertices.push(new THREE.Vector3),p.vertices.push(new THREE.Vector3)}}THREE.Line.call(this,p,new THREE.LineBasicMaterial({color:i,linewidth:o}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.update()};THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexTangentsHelper.prototype.update=function(d){var c=new THREE.Vector3;return function(B){B=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var A=this.geometry.vertices,v=this.object.geometry.vertices,u=this.object.geometry.faces,t=this.object.matrixWorld,p=0,o=0,m=u.length;o<m;o++){for(var j=u[o],C=0,b=j.vertexTangents.length;C<b;C++){var i=j.vertexTangents[C];A[p].copy(v[j[B[C]]]).applyMatrix4(t);c.copy(i).transformDirection(t).multiplyScalar(this.size);c.add(A[p]);p+=1;A[p].copy(c);p+=1}}this.geometry.verticesNeedUpdate=!0;return this}}();THREE.WireframeHelper=function(O,N){var M=void 0!==N?N:16777215,L=[0,0],K={},J=function(d,c){return d-c},I=["a","b","c"],H=new THREE.BufferGeometry;if(O.geometry instanceof THREE.Geometry){for(var G=O.geometry.vertices,F=O.geometry.faces,E=0,A=new Uint32Array(6*F.length),B=0,C=F.length;B<C;B++){for(var m=F[B],D=0;3>D;D++){L[0]=m[I[D]];L[1]=m[I[(D+1)%3]];L.sort(J);var j=L.toString();void 0===K[j]&&(A[2*E]=L[0],A[2*E+1]=L[1],K[j]=!0,E++)}}H.addAttribute("position",Float32Array,2*E,3);L=H.attributes.position.array;B=0;for(C=E;B<C;B++){for(D=0;2>D;D++){E=G[A[2*B+D]],I=6*B+3*D,L[I+0]=E.x,L[I+1]=E.y,L[I+2]=E.z}}}else{if(O.geometry instanceof THREE.BufferGeometry&&void 0!==O.geometry.attributes.index){for(var G=O.geometry.attributes.position.array,C=O.geometry.attributes.index.array,F=O.geometry.offsets,E=0,A=new Uint32Array(2*C.length),m=0,i=F.length;m<i;++m){for(var D=F[m].start,j=F[m].count,I=F[m].index,B=D,o=D+j;B<o;B+=3){for(D=0;3>D;D++){L[0]=I+C[B+D],L[1]=I+C[B+(D+1)%3],L.sort(J),j=L.toString(),void 0===K[j]&&(A[2*E]=L[0],A[2*E+1]=L[1],K[j]=!0,E++)}}}H.addAttribute("position",Float32Array,2*E,3);L=H.attributes.position.array;B=0;for(C=E;B<C;B++){for(D=0;2>D;D++){I=6*B+3*D,E=3*A[2*B+D],L[I+0]=G[E],L[I+1]=G[E+1],L[I+2]=G[E+2]}}}else{if(O.geometry instanceof THREE.BufferGeometry){for(G=O.geometry.attributes.position.array,E=G.length/3,A=E/3,H.addAttribute("position",Float32Array,2*E,3),L=H.attributes.position.array,B=0,C=A;B<C;B++){for(D=0;3>D;D++){I=18*B+6*D,A=9*B+3*D,L[I+0]=G[A],L[I+1]=G[A+1],L[I+2]=G[A+2],E=9*B+(D+1)%3*3,L[I+3]=G[E],L[I+4]=G[E+1],L[I+5]=G[E+2]}}}}}THREE.Line.call(this,H,new THREE.LineBasicMaterial({color:M}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.matrixWorld=O.matrixWorld};THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(b){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(g,f,j,i,h){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==g&&this.add(g,f,j,i,h)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(h,g,l,k,j,i){void 0===g&&(g=-1);void 0===l&&(l=0);void 0===i&&(i=1);void 0===j&&(j=new THREE.Color(16777215));void 0===k&&(k=THREE.NormalBlending);l=Math.min(l,Math.max(0,l));this.lensFlares.push({texture:h,size:g,distance:l,x:0,y:0,z:0,scale:1,rotation:1,opacity:i,color:j,blending:k})};THREE.LensFlare.prototype.updateLensFlares=function(){var g,f=this.lensFlares.length,j,i=2*-this.positionScreen.x,h=2*-this.positionScreen.y;for(g=0;g<f;g++){j=this.lensFlares[g],j.x=this.positionScreen.x+i*j.distance,j.y=this.positionScreen.y+h*j.distance,j.wantedRotation=j.x*Math.PI*0.25,j.rotation+=0.25*(j.wantedRotation-j.rotation)}};THREE.MorphBlendMesh=function(e,d){THREE.Mesh.call(this,e,d);this.animationsMap={};this.animationsList=[];var f=this.geometry.morphTargets.length;this.createAnimation("__default",0,f-1,f/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.createAnimation=function(f,e,h,g){e={startFrame:e,endFrame:h,length:h-e+1,fps:g,duration:(h-e)/g,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[f]=e;this.animationsList.push(e)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(r){for(var q=/([a-z]+)(\d+)/,p,o={},n=this.geometry,m=0,l=n.morphTargets.length;m<l;m++){var j=n.morphTargets[m].name.match(q);if(j&&1<j.length){var i=j[1];o[i]||(o[i]={start:Infinity,end:-Infinity});j=o[i];m<j.start&&(j.start=m);m>j.end&&(j.end=m);p||(p=i)}}for(i in o){j=o[i],this.createAnimation(i,j.start,j.end,r)}this.firstAnimation=p};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(b){if(b=this.animationsMap[b]){b.direction=1,b.directionBackwards=!1}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(b){if(b=this.animationsMap[b]){b.direction=-1,b.directionBackwards=!0}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,d){var f=this.animationsMap[e];f&&(f.fps=d,f.duration=(f.end-f.start)/f.fps)};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,d){var f=this.animationsMap[e];f&&(f.duration=d,f.fps=(f.end-f.start)/f.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,d){var f=this.animationsMap[e];f&&(f.weight=d)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,d){var f=this.animationsMap[e];f&&(f.time=d)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(d){var c=0;if(d=this.animationsMap[d]){c=d.time}return c};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(d){var c=-1;if(d=this.animationsMap[d]){c=d.duration}return c};THREE.MorphBlendMesh.prototype.playAnimation=function(d){var c=this.animationsMap[d];c?(c.time=0,c.active=!0):console.warn("animation["+d+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(b){if(b=this.animationsMap[b]){b.active=!1}};THREE.MorphBlendMesh.prototype.update=function(i){for(var h=0,n=this.animationsList.length;h<n;h++){var m=this.animationsList[h];if(m.active){var l=m.duration/m.length;m.time+=m.direction*i;if(m.mirroredLoop){if(m.time>m.duration||0>m.time){m.direction*=-1,m.time>m.duration&&(m.time=m.duration,m.directionBackwards=!0),0>m.time&&(m.time=0,m.directionBackwards=!1)}}else{m.time%=m.duration,0>m.time&&(m.time+=m.duration)}var k=m.startFrame+THREE.Math.clamp(Math.floor(m.time/l),0,m.length-1),j=m.weight;k!==m.currentFrame&&(this.morphTargetInfluences[m.lastFrame]=0,this.morphTargetInfluences[m.currentFrame]=1*j,this.morphTargetInfluences[k]=0,m.lastFrame=m.currentFrame,m.currentFrame=k);l=m.time%l/l;m.directionBackwards&&(l=1-l);this.morphTargetInfluences[m.currentFrame]=l*j;this.morphTargetInfluences[m.lastFrame]=(1-l)*j}}};THREE.LensFlarePlugin=function(){function E(b,q){var n=D.createProgram(),l=D.createShader(D.FRAGMENT_SHADER),k=D.createShader(D.VERTEX_SHADER),h="precision "+q+" float;\n";D.shaderSource(l,h+b.fragmentShader);D.shaderSource(k,h+b.vertexShader);D.compileShader(l);D.compileShader(k);D.attachShader(n,l);D.attachShader(n,k);D.linkProgram(n);return n}var D,C,B,A,v,u,t,p,o,m,F,i,j;this.init=function(a){D=a.context;C=a;B=a.getPrecision();A=new Float32Array(16);v=new Uint16Array(6);a=0;A[a++]=-1;A[a++]=-1;A[a++]=0;A[a++]=0;A[a++]=1;A[a++]=-1;A[a++]=1;A[a++]=0;A[a++]=1;A[a++]=1;A[a++]=1;A[a++]=1;A[a++]=-1;A[a++]=1;A[a++]=0;A[a++]=1;a=0;v[a++]=0;v[a++]=1;v[a++]=2;v[a++]=0;v[a++]=2;v[a++]=3;u=D.createBuffer();t=D.createBuffer();D.bindBuffer(D.ARRAY_BUFFER,u);D.bufferData(D.ARRAY_BUFFER,A,D.STATIC_DRAW);D.bindBuffer(D.ELEMENT_ARRAY_BUFFER,t);D.bufferData(D.ELEMENT_ARRAY_BUFFER,v,D.STATIC_DRAW);p=D.createTexture();o=D.createTexture();D.bindTexture(D.TEXTURE_2D,p);D.texImage2D(D.TEXTURE_2D,0,D.RGB,16,16,0,D.RGB,D.UNSIGNED_BYTE,null);D.texParameteri(D.TEXTURE_2D,D.TEXTURE_WRAP_S,D.CLAMP_TO_EDGE);D.texParameteri(D.TEXTURE_2D,D.TEXTURE_WRAP_T,D.CLAMP_TO_EDGE);D.texParameteri(D.TEXTURE_2D,D.TEXTURE_MAG_FILTER,D.NEAREST);D.texParameteri(D.TEXTURE_2D,D.TEXTURE_MIN_FILTER,D.NEAREST);D.bindTexture(D.TEXTURE_2D,o);D.texImage2D(D.TEXTURE_2D,0,D.RGBA,16,16,0,D.RGBA,D.UNSIGNED_BYTE,null);D.texParameteri(D.TEXTURE_2D,D.TEXTURE_WRAP_S,D.CLAMP_TO_EDGE);D.texParameteri(D.TEXTURE_2D,D.TEXTURE_WRAP_T,D.CLAMP_TO_EDGE);D.texParameteri(D.TEXTURE_2D,D.TEXTURE_MAG_FILTER,D.NEAREST);D.texParameteri(D.TEXTURE_2D,D.TEXTURE_MIN_FILTER,D.NEAREST);0>=D.getParameter(D.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(m=!1,F=E(THREE.ShaderFlares.lensFlare,B)):(m=!0,F=E(THREE.ShaderFlares.lensFlareVertexTexture,B));i={};j={};i.vertex=D.getAttribLocation(F,"position");i.uv=D.getAttribLocation(F,"uv");j.renderType=D.getUniformLocation(F,"renderType");j.map=D.getUniformLocation(F,"map");j.occlusionMap=D.getUniformLocation(F,"occlusionMap");j.opacity=D.getUniformLocation(F,"opacity");j.color=D.getUniformLocation(F,"color");j.scale=D.getUniformLocation(F,"scale");j.rotation=D.getUniformLocation(F,"rotation");j.screenPosition=D.getUniformLocation(F,"screenPosition")};this.render=function(T,S,R,Q){T=T.__webglFlares;var J=T.length;if(J){var l=new THREE.Vector3,g=Q/R,N=0.5*R,s=0.5*Q,n=16/Q,L=new THREE.Vector2(n*g,n),q=new THREE.Vector3(1,1,0),k=new THREE.Vector2(1,1),b=j,n=i;D.useProgram(F);D.enableVertexAttribArray(i.vertex);D.enableVertexAttribArray(i.uv);D.uniform1i(b.occlusionMap,0);D.uniform1i(b.map,1);D.bindBuffer(D.ARRAY_BUFFER,u);D.vertexAttribPointer(n.vertex,2,D.FLOAT,!1,16,0);D.vertexAttribPointer(n.uv,2,D.FLOAT,!1,16,8);D.bindBuffer(D.ELEMENT_ARRAY_BUFFER,t);D.disable(D.CULL_FACE);D.depthMask(!1);var c,h,r,M,P;for(c=0;c<J;c++){if(n=16/Q,L.set(n*g,n),M=T[c],l.set(M.matrixWorld.elements[12],M.matrixWorld.elements[13],M.matrixWorld.elements[14]),l.applyMatrix4(S.matrixWorldInverse),l.applyProjection(S.projectionMatrix),q.copy(l),k.x=q.x*N+N,k.y=q.y*s+s,m||0<k.x&&k.x<R&&0<k.y&&k.y<Q){for(D.activeTexture(D.TEXTURE1),D.bindTexture(D.TEXTURE_2D,p),D.copyTexImage2D(D.TEXTURE_2D,0,D.RGB,k.x-8,k.y-8,16,16,0),D.uniform1i(b.renderType,0),D.uniform2f(b.scale,L.x,L.y),D.uniform3f(b.screenPosition,q.x,q.y,q.z),D.disable(D.BLEND),D.enable(D.DEPTH_TEST),D.drawElements(D.TRIANGLES,6,D.UNSIGNED_SHORT,0),D.activeTexture(D.TEXTURE0),D.bindTexture(D.TEXTURE_2D,o),D.copyTexImage2D(D.TEXTURE_2D,0,D.RGBA,k.x-8,k.y-8,16,16,0),D.uniform1i(b.renderType,1),D.disable(D.DEPTH_TEST),D.activeTexture(D.TEXTURE1),D.bindTexture(D.TEXTURE_2D,p),D.drawElements(D.TRIANGLES,6,D.UNSIGNED_SHORT,0),M.positionScreen.copy(q),M.customUpdateCallback?M.customUpdateCallback(M):M.updateLensFlares(),D.uniform1i(b.renderType,2),D.enable(D.BLEND),h=0,r=M.lensFlares.length;h<r;h++){P=M.lensFlares[h],0.001<P.opacity&&0.001<P.scale&&(q.x=P.x,q.y=P.y,q.z=P.z,n=P.size*P.scale/Q,L.x=n*g,L.y=n,D.uniform3f(b.screenPosition,q.x,q.y,q.z),D.uniform2f(b.scale,L.x,L.y),D.uniform1f(b.rotation,P.rotation),D.uniform1f(b.opacity,P.opacity),D.uniform3f(b.color,P.color.r,P.color.g,P.color.b),C.setBlending(P.blending,P.blendEquation,P.blendSrc,P.blendDst),C.setTexture(P.texture,1),D.drawElements(D.TRIANGLES,6,D.UNSIGNED_SHORT,0))}}}D.enable(D.CULL_FACE);D.enable(D.DEPTH_TEST);D.depthMask(!0)}}};THREE.ShadowMapPlugin=function(){var v,u,t,s,r,q,p=new THREE.Frustum,o=new THREE.Matrix4,m=new THREE.Vector3,j=new THREE.Vector3,i=new THREE.Vector3;this.init=function(b){v=b.context;u=b;b=THREE.ShaderLib.depthRGBA;var a=THREE.UniformsUtils.clone(b.uniforms);t=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a});s=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0});r=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,skinning:!0});q=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0,skinning:!0});t._shadowPass=!0;s._shadowPass=!0;r._shadowPass=!0;q._shadowPass=!0};this.render=function(b,d){u.shadowMapEnabled&&u.shadowMapAutoUpdate&&this.update(b,d)};this.update=function(F,b){var c,n,e,l,h,A,g,f,d,C=[];l=0;v.clearColor(1,1,1,1);v.disable(v.BLEND);v.enable(v.CULL_FACE);v.frontFace(v.CCW);u.shadowMapCullFace===THREE.CullFaceFront?v.cullFace(v.FRONT):v.cullFace(v.BACK);u.setDepthTest(!0);c=0;for(n=F.__lights.length;c<n;c++){if(e=F.__lights[c],e.castShadow){if(e instanceof THREE.DirectionalLight&&e.shadowCascade){for(h=0;h<e.shadowCascadeCount;h++){var k;if(e.shadowCascadeArray[h]){k=e.shadowCascadeArray[h]}else{d=e;g=h;k=new THREE.DirectionalLight;k.isVirtual=!0;k.onlyShadow=!0;k.castShadow=!0;k.shadowCameraNear=d.shadowCameraNear;k.shadowCameraFar=d.shadowCameraFar;k.shadowCameraLeft=d.shadowCameraLeft;k.shadowCameraRight=d.shadowCameraRight;k.shadowCameraBottom=d.shadowCameraBottom;k.shadowCameraTop=d.shadowCameraTop;k.shadowCameraVisible=d.shadowCameraVisible;k.shadowDarkness=d.shadowDarkness;k.shadowBias=d.shadowCascadeBias[g];k.shadowMapWidth=d.shadowCascadeWidth[g];k.shadowMapHeight=d.shadowCascadeHeight[g];k.pointsWorld=[];k.pointsFrustum=[];f=k.pointsWorld;A=k.pointsFrustum;for(var a=0;8>a;a++){f[a]=new THREE.Vector3,A[a]=new THREE.Vector3}f=d.shadowCascadeNearZ[g];d=d.shadowCascadeFarZ[g];A[0].set(-1,-1,f);A[1].set(1,-1,f);A[2].set(-1,1,f);A[3].set(1,1,f);A[4].set(-1,-1,d);A[5].set(1,-1,d);A[6].set(-1,1,d);A[7].set(1,1,d);k.originalCamera=b;A=new THREE.Gyroscope;A.position=e.shadowCascadeOffset;A.add(k);A.add(k.target);b.add(A);e.shadowCascadeArray[h]=k;console.log("Created virtualLight",k)}g=e;f=h;d=g.shadowCascadeArray[f];d.position.copy(g.position);d.target.position.copy(g.target.position);d.lookAt(d.target);d.shadowCameraVisible=g.shadowCameraVisible;d.shadowDarkness=g.shadowDarkness;d.shadowBias=g.shadowCascadeBias[f];A=g.shadowCascadeNearZ[f];g=g.shadowCascadeFarZ[f];d=d.pointsFrustum;d[0].z=A;d[1].z=A;d[2].z=A;d[3].z=A;d[4].z=g;d[5].z=g;d[6].z=g;d[7].z=g;C[l]=k;l++}}else{C[l]=e,l++}}}c=0;for(n=C.length;c<n;c++){e=C[c];e.shadowMap||(h=THREE.LinearFilter,u.shadowMapType===THREE.PCFSoftShadowMap&&(h=THREE.NearestFilter),e.shadowMap=new THREE.WebGLRenderTarget(e.shadowMapWidth,e.shadowMapHeight,{minFilter:h,magFilter:h,format:THREE.RGBAFormat}),e.shadowMapSize=new THREE.Vector2(e.shadowMapWidth,e.shadowMapHeight),e.shadowMatrix=new THREE.Matrix4);if(!e.shadowCamera){if(e instanceof THREE.SpotLight){e.shadowCamera=new THREE.PerspectiveCamera(e.shadowCameraFov,e.shadowMapWidth/e.shadowMapHeight,e.shadowCameraNear,e.shadowCameraFar)}else{if(e instanceof THREE.DirectionalLight){e.shadowCamera=new THREE.OrthographicCamera(e.shadowCameraLeft,e.shadowCameraRight,e.shadowCameraTop,e.shadowCameraBottom,e.shadowCameraNear,e.shadowCameraFar)}else{console.error("Unsupported light type for shadow");continue}}F.add(e.shadowCamera);!0===F.autoUpdate&&F.updateMatrixWorld()}e.shadowCameraVisible&&!e.cameraHelper&&(e.cameraHelper=new THREE.CameraHelper(e.shadowCamera),e.shadowCamera.add(e.cameraHelper));if(e.isVirtual&&k.originalCamera==b){h=b;l=e.shadowCamera;A=e.pointsFrustum;d=e.pointsWorld;m.set(Infinity,Infinity,Infinity);j.set(-Infinity,-Infinity,-Infinity);for(g=0;8>g;g++){f=d[g],f.copy(A[g]),THREE.ShadowMapPlugin.__projector.unprojectVector(f,h),f.applyMatrix4(l.matrixWorldInverse),f.x<m.x&&(m.x=f.x),f.x>j.x&&(j.x=f.x),f.y<m.y&&(m.y=f.y),f.y>j.y&&(j.y=f.y),f.z<m.z&&(m.z=f.z),f.z>j.z&&(j.z=f.z)}l.left=m.x;l.right=j.x;l.top=j.y;l.bottom=m.y;l.updateProjectionMatrix()}l=e.shadowMap;A=e.shadowMatrix;h=e.shadowCamera;h.position.setFromMatrixPosition(e.matrixWorld);i.setFromMatrixPosition(e.target.matrixWorld);h.lookAt(i);h.updateMatrixWorld();h.matrixWorldInverse.getInverse(h.matrixWorld);e.cameraHelper&&(e.cameraHelper.visible=e.shadowCameraVisible);e.shadowCameraVisible&&e.cameraHelper.update();A.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);A.multiply(h.projectionMatrix);A.multiply(h.matrixWorldInverse);o.multiplyMatrices(h.projectionMatrix,h.matrixWorldInverse);p.setFromMatrix(o);u.setRenderTarget(l);u.clear();d=F.__webglObjects;e=0;for(l=d.length;e<l;e++){g=d[e],A=g.object,g.render=!1,!A.visible||!A.castShadow||(A instanceof THREE.Mesh||A instanceof THREE.ParticleSystem)&&A.frustumCulled&&!p.intersectsObject(A)||(A._modelViewMatrix.multiplyMatrices(h.matrixWorldInverse,A.matrixWorld),g.render=!0)}e=0;for(l=d.length;e<l;e++){g=d[e],g.render&&(A=g.object,g=g.buffer,a=A.material instanceof THREE.MeshFaceMaterial?A.material.materials[0]:A.material,f=void 0!==A.geometry.morphTargets&&0<A.geometry.morphTargets.length&&a.morphTargets,a=A instanceof THREE.SkinnedMesh&&a.skinning,f=A.customDepthMaterial?A.customDepthMaterial:a?f?q:r:f?s:t,g instanceof THREE.BufferGeometry?u.renderBufferDirect(h,F.__lights,null,f,g,A):u.renderBuffer(h,F.__lights,null,f,g,A))}d=F.__webglObjectsImmediate;e=0;for(l=d.length;e<l;e++){g=d[e],A=g.object,A.visible&&A.castShadow&&(A._modelViewMatrix.multiplyMatrices(h.matrixWorldInverse,A.matrixWorld),u.renderImmediateObject(h,F.__lights,null,t,A))}}c=u.getClearColor();n=u.getClearAlpha();v.clearColor(c.r,c.g,c.b,n);v.enable(v.BLEND);u.shadowMapCullFace===THREE.CullFaceFront&&v.cullFace(v.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;THREE.SpritePlugin=function(){var aa,Z,Y,X,W,V,U,T,S,R,Q,L,M,O,F,P,C;function o(d,c){return d.z!==c.z?c.z-d.z:c.id-d.id}var J,j,i,N,I,m,K,A;this.init=function(b){J=b.context;j=b;N=new Float32Array([-0.5,-0.5,0,0,0.5,-0.5,1,0,0.5,0.5,1,1,-0.5,0.5,0,1]);I=new Uint16Array([0,1,2,0,2,3]);m=J.createBuffer();K=J.createBuffer();J.bindBuffer(J.ARRAY_BUFFER,m);J.bufferData(J.ARRAY_BUFFER,N,J.STATIC_DRAW);J.bindBuffer(J.ELEMENT_ARRAY_BUFFER,K);J.bufferData(J.ELEMENT_ARRAY_BUFFER,I,J.STATIC_DRAW);b=J.createProgram();var c=J.createShader(J.VERTEX_SHADER),a=J.createShader(J.FRAGMENT_SHADER);J.shaderSource(c,["precision "+j.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n"));J.shaderSource(a,["precision "+j.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n"));J.compileShader(c);J.compileShader(a);J.attachShader(b,c);J.attachShader(b,a);J.linkProgram(b);A=b;P=J.getAttribLocation(A,"position");C=J.getAttribLocation(A,"uv");aa=J.getUniformLocation(A,"uvOffset");Z=J.getUniformLocation(A,"uvScale");Y=J.getUniformLocation(A,"rotation");X=J.getUniformLocation(A,"scale");W=J.getUniformLocation(A,"color");V=J.getUniformLocation(A,"map");U=J.getUniformLocation(A,"opacity");T=J.getUniformLocation(A,"modelViewMatrix");S=J.getUniformLocation(A,"projectionMatrix");R=J.getUniformLocation(A,"fogType");Q=J.getUniformLocation(A,"fogDensity");L=J.getUniformLocation(A,"fogNear");M=J.getUniformLocation(A,"fogFar");O=J.getUniformLocation(A,"fogColor");F=J.getUniformLocation(A,"alphaTest");b=document.createElement("canvas");b.width=8;b.height=8;c=b.getContext("2d");c.fillStyle="#ffffff";c.fillRect(0,0,b.width,b.height);i=new THREE.Texture(b);i.needsUpdate=!0};this.render=function(k,b,g,f){g=k.__webglSprites;if(f=g.length){J.useProgram(A);J.enableVertexAttribArray(P);J.enableVertexAttribArray(C);J.disable(J.CULL_FACE);J.enable(J.BLEND);J.bindBuffer(J.ARRAY_BUFFER,m);J.vertexAttribPointer(P,2,J.FLOAT,!1,16,0);J.vertexAttribPointer(C,2,J.FLOAT,!1,16,8);J.bindBuffer(J.ELEMENT_ARRAY_BUFFER,K);J.uniformMatrix4fv(S,!1,b.projectionMatrix.elements);J.activeTexture(J.TEXTURE0);J.uniform1i(V,0);var h=0,a=0,c=k.fog;c?(J.uniform3f(O,c.color.r,c.color.g,c.color.b),c instanceof THREE.Fog?(J.uniform1f(L,c.near),J.uniform1f(M,c.far),J.uniform1i(R,1),a=h=1):c instanceof THREE.FogExp2&&(J.uniform1f(Q,c.density),J.uniform1i(R,2),a=h=2)):(J.uniform1i(R,0),a=h=0);for(var e,d=[],c=0;c<f;c++){e=g[c],!1!==e.visible&&(e._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,e.matrixWorld),e.z=-e._modelViewMatrix.elements[14])}g.sort(o);for(c=0;c<f;c++){e=g[c],!1!==e.visible&&(b=e.material,J.uniform1f(F,b.alphaTest),J.uniformMatrix4fv(T,!1,e._modelViewMatrix.elements),d[0]=e.scale.x,d[1]=e.scale.y,e=k.fog&&b.fog?a:0,h!==e&&(J.uniform1i(R,e),h=e),null!==b.map?(J.uniform2f(aa,b.map.offset.x,b.map.offset.y),J.uniform2f(Z,b.map.repeat.x,b.map.repeat.y)):(J.uniform2f(aa,0,0),J.uniform2f(Z,1,1)),J.uniform1f(U,b.opacity),J.uniform3f(W,b.color.r,b.color.g,b.color.b),J.uniform1f(Y,b.rotation),J.uniform2fv(X,d),j.setBlending(b.blending,b.blendEquation,b.blendSrc,b.blendDst),j.setDepthTest(b.depthTest),j.setDepthWrite(b.depthWrite),b.map&&b.map.image&&b.map.image.width?j.setTexture(b.map,0):j.setTexture(i,0),J.drawElements(J.TRIANGLES,6,J.UNSIGNED_SHORT,0))}J.enable(J.CULL_FACE)}}};THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var j,i,p,o,n,m,l=new THREE.Frustum,k=new THREE.Matrix4;this.init=function(b){j=b.context;i=b;b=THREE.ShaderLib.depthRGBA;var a=THREE.UniformsUtils.clone(b.uniforms);p=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a});o=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0});n=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,skinning:!0});m=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0,skinning:!0});p._shadowPass=!0;o._shadowPass=!0;n._shadowPass=!0;m._shadowPass=!0};this.render=function(d,c){this.enabled&&this.update(d,c)};this.update=function(f,e){var d,t,a,b,h,c;j.clearColor(1,1,1,1);j.disable(j.BLEND);i.setDepthTest(!0);!0===f.autoUpdate&&f.updateMatrixWorld();e.matrixWorldInverse.getInverse(e.matrixWorld);k.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse);l.setFromMatrix(k);i.setRenderTarget(this.renderTarget);i.clear();c=f.__webglObjects;d=0;for(t=c.length;d<t;d++){a=c[d],h=a.object,a.render=!1,!h.visible||(h instanceof THREE.Mesh||h instanceof THREE.ParticleSystem)&&h.frustumCulled&&!l.intersectsObject(h)||(h._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,h.matrixWorld),a.render=!0)}var g;d=0;for(t=c.length;d<t;d++){a=c[d],a.render&&(h=a.object,a=a.buffer,h instanceof THREE.ParticleSystem&&!h.customDepthMaterial||((g=h.material instanceof THREE.MeshFaceMaterial?h.material.materials[0]:h.material)&&i.setMaterialFaces(h.material),b=0<h.geometry.morphTargets.length&&g.morphTargets,g=h instanceof THREE.SkinnedMesh&&g.skinning,b=h.customDepthMaterial?h.customDepthMaterial:g?b?m:n:b?o:p,a instanceof THREE.BufferGeometry?i.renderBufferDirect(e,f.__lights,null,b,a,h):i.renderBuffer(e,f.__lights,null,b,a,h)))}c=f.__webglObjectsImmediate;d=0;for(t=c.length;d<t;d++){a=c[d],h=a.object,h.visible&&(h._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,h.matrixWorld),i.renderImmediateObject(e,f.__lights,null,p,h))}d=i.getClearColor();t=i.getClearAlpha();j.clearColor(d.r,d.g,d.b,t);j.enable(j.BLEND)}};THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};THREE.Label=function(d,c){var c=c||{};var a=document.createElement("canvas");function b(){var g=a.getContext("2d");var j="40pt";g.font=j+" Arial";var e=g.measureText(d).width;a.setAttribute("width",e);g.font=j+" Arial";g.textBaseline="top";g.fillText(d,0,0);var i=new THREE.CubeGeometry(e,200,0);var h=new THREE.MeshBasicMaterial({map:new THREE.Texture(a),transparent:true});h.map.needsUpdate=true;var f=new THREE.Mesh(i,h);return f}return b()};THREE.ObjectSelection=function(e){var e=e||{};this.domElement=e.domElement||document;this.projector=new THREE.Projector();this.INTERSECTED;var g=this;var f=e.selected;var a=e.clicked;var b={x:0,y:0};this.domElement.addEventListener("mousemove",d,false);function d(h){b.x=(h.clientX/window.innerWidth)*2-1;b.y=-(h.clientY/window.innerHeight)*2+1}this.domElement.addEventListener("click",c,false);function c(h){if(g.INTERSECTED){if(typeof a==="function"){a(g.INTERSECTED)}}}this.render=function(l,j){var h=new THREE.Vector3(b.x,b.y,0.5);this.projector.unprojectVector(h,j);var i=new THREE.Raycaster(j.position,h.sub(j.position).normalize());var k=i.intersectObject(l,true);if(k.length>0){if(this.INTERSECTED!=k[0].object){if(this.INTERSECTED){this.INTERSECTED.material.color.setHex(this.INTERSECTED.currentHex)}this.INTERSECTED=k[0].object;this.INTERSECTED.currentHex=this.INTERSECTED.material.color.getHex();this.INTERSECTED.material.color.setHex(16711680);if(typeof f==="function"){f(this.INTERSECTED)}}}else{if(this.INTERSECTED){this.INTERSECTED.material.color.setHex(this.INTERSECTED.currentHex)}this.INTERSECTED=null;if(typeof f==="function"){f(this.INTERSECTED)}}}};
/*! stats.js r5 - http://github.com/mrdoob/stats.js */
;var Stats=function(){function N(g,a,i){var b,e,h;for(e=0;e<30;e++){for(b=0;b<73;b++){h=(b+e*74)*4;g[h]=g[h+4];g[h+1]=g[h+5];g[h+2]=g[h+6]}}for(e=0;e<30;e++){h=(73+e*74)*4;if(e<a){g[h]=ak[i].bg.r;g[h+1]=ak[i].bg.g;g[h+2]=ak[i].bg.b}else{g[h]=ak[i].fg.r;g[h+1]=ak[i].fg.g;g[h+2]=ak[i].fg.b}}}var P=0,K=2,aj,n=0,ad=(new Date).getTime(),f=ad,d=ad,ab=0,Z=1000,X=0,ac,ai,al,aa,W,Y=0,U=1000,S=0,ah,ag,V,Q,T=0,O=1000,M=0,af,ae,R,u,ak={fps:{bg:{r:16,g:16,b:48},fg:{r:0,g:255,b:255}},ms:{bg:{r:16,g:48,b:16},fg:{r:0,g:255,b:0}},mem:{bg:{r:48,g:16,b:26},fg:{r:255,g:0,b:128}}};aj=document.createElement("div");aj.style.cursor="pointer";aj.style.width="80px";aj.style.opacity="0.9";aj.style.zIndex="10001";aj.addEventListener("click",function(){P++;P==K&&(P=0);ac.style.display="none";ah.style.display="none";af.style.display="none";switch(P){case 0:ac.style.display="block";break;case 1:ah.style.display="block";break;case 2:af.style.display="block"}},false);ac=document.createElement("div");ac.style.backgroundColor="rgb("+Math.floor(ak.fps.bg.r/2)+","+Math.floor(ak.fps.bg.g/2)+","+Math.floor(ak.fps.bg.b/2)+")";ac.style.padding="2px 0px 3px 0px";aj.appendChild(ac);ai=document.createElement("div");ai.style.fontFamily="Helvetica, Arial, sans-serif";ai.style.textAlign="left";ai.style.fontSize="9px";ai.style.color="rgb("+ak.fps.fg.r+","+ak.fps.fg.g+","+ak.fps.fg.b+")";ai.style.margin="0px 0px 1px 3px";ai.innerHTML='<span style="font-weight:bold">FPS</span>';ac.appendChild(ai);al=document.createElement("canvas");al.width=74;al.height=30;al.style.display="block";al.style.marginLeft="3px";ac.appendChild(al);aa=al.getContext("2d");aa.fillStyle="rgb("+ak.fps.bg.r+","+ak.fps.bg.g+","+ak.fps.bg.b+")";aa.fillRect(0,0,al.width,al.height);W=aa.getImageData(0,0,al.width,al.height);ah=document.createElement("div");ah.style.backgroundColor="rgb("+Math.floor(ak.ms.bg.r/2)+","+Math.floor(ak.ms.bg.g/2)+","+Math.floor(ak.ms.bg.b/2)+")";ah.style.padding="2px 0px 3px 0px";ah.style.display="none";aj.appendChild(ah);ag=document.createElement("div");ag.style.fontFamily="Helvetica, Arial, sans-serif";ag.style.textAlign="left";ag.style.fontSize="9px";ag.style.color="rgb("+ak.ms.fg.r+","+ak.ms.fg.g+","+ak.ms.fg.b+")";ag.style.margin="0px 0px 1px 3px";ag.innerHTML='<span style="font-weight:bold">MS</span>';ah.appendChild(ag);al=document.createElement("canvas");al.width=74;al.height=30;al.style.display="block";al.style.marginLeft="3px";ah.appendChild(al);V=al.getContext("2d");V.fillStyle="rgb("+ak.ms.bg.r+","+ak.ms.bg.g+","+ak.ms.bg.b+")";V.fillRect(0,0,al.width,al.height);Q=V.getImageData(0,0,al.width,al.height);try{if(performance&&performance.memory&&performance.memory.totalJSHeapSize){K=3}}catch(c){}af=document.createElement("div");af.style.backgroundColor="rgb("+Math.floor(ak.mem.bg.r/2)+","+Math.floor(ak.mem.bg.g/2)+","+Math.floor(ak.mem.bg.b/2)+")";af.style.padding="2px 0px 3px 0px";af.style.display="none";aj.appendChild(af);ae=document.createElement("div");ae.style.fontFamily="Helvetica, Arial, sans-serif";ae.style.textAlign="left";ae.style.fontSize="9px";ae.style.color="rgb("+ak.mem.fg.r+","+ak.mem.fg.g+","+ak.mem.fg.b+")";ae.style.margin="0px 0px 1px 3px";ae.innerHTML='<span style="font-weight:bold">MEM</span>';af.appendChild(ae);al=document.createElement("canvas");al.width=74;al.height=30;al.style.display="block";al.style.marginLeft="3px";af.appendChild(al);R=al.getContext("2d");R.fillStyle="#301010";R.fillRect(0,0,al.width,al.height);u=R.getImageData(0,0,al.width,al.height);return{domElement:aj,update:function(){n++;ad=(new Date).getTime();Y=ad-f;U=Math.min(U,Y);S=Math.max(S,Y);N(Q.data,Math.min(30,30-Y/200*30),"ms");ag.innerHTML='<span style="font-weight:bold">'+Y+" MS</span> ("+U+"-"+S+")";V.putImageData(Q,0,0);f=ad;if(ad>d+1000){ab=Math.round(n*1000/(ad-d));Z=Math.min(Z,ab);X=Math.max(X,ab);N(W.data,Math.min(30,30-ab/100*30),"fps");ai.innerHTML='<span style="font-weight:bold">'+ab+" FPS</span> ("+Z+"-"+X+")";aa.putImageData(W,0,0);if(K==3){T=performance.memory.usedJSHeapSize*9.54e-7;O=Math.min(O,T);M=Math.max(M,T);N(u.data,Math.min(30,30-T/2),"mem");ae.innerHTML='<span style="font-weight:bold">'+Math.round(T)+" MEM</span> ("+Math.round(O)+"-"+Math.round(M)+")";R.putImageData(u,0,0)}d=ad;n=0}}}};THREE.TrackballControls=function(F,E){var r=this;var s={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM:4,TOUCH_PAN:5};this.object=F;this.domElement=(E!==undefined)?E:document;this.enabled=true;this.screen={left:0,top:0,width:0,height:0};this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=0.3;this.noRotate=false;this.noZoom=false;this.noPan=false;this.noRoll=false;this.staticMoving=false;this.dynamicDampingFactor=0.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=[65,83,68];this.target=new THREE.Vector3();var j=new THREE.Vector3();var t=s.NONE,m=s.NONE,a=new THREE.Vector3(),p=new THREE.Vector3(),i=new THREE.Vector3(),k=new THREE.Vector2(),A=new THREE.Vector2(),h=0,b=0,c=new THREE.Vector2(),v=new THREE.Vector2();this.target0=this.target.clone();this.position0=this.object.position.clone();this.up0=this.object.up.clone();var D={type:"change"};var l={type:"start"};var g={type:"end"};this.handleResize=function(){if(this.domElement===document){this.screen.left=0;this.screen.top=0;this.screen.width=window.innerWidth;this.screen.height=window.innerHeight}else{this.screen=this.domElement.getBoundingClientRect();var G=this.domElement.ownerDocument.documentElement;this.screen.left+=window.pageXOffset-G.clientLeft;this.screen.top+=window.pageYOffset-G.clientTop}};this.handleEvent=function(G){if(typeof this[G.type]=="function"){this[G.type](G)}};this.getMouseOnScreen=function(I,H,G){return G.set((I-r.screen.left)/r.screen.width,(H-r.screen.top)/r.screen.height)};this.getMouseProjectionOnBall=(function(){var G=new THREE.Vector3(),H=new THREE.Vector3();return function(K,J,I){H.set((K-r.screen.width*0.5-r.screen.left)/(r.screen.width*0.5),(r.screen.height*0.5+r.screen.top-J)/(r.screen.height*0.5),0);var L=H.length();if(r.noRoll){if(L<Math.SQRT1_2){H.z=Math.sqrt(1-L*L)}else{H.z=0.5/L}}else{if(L>1){H.normalize()}else{H.z=Math.sqrt(1-L*L)}}a.copy(r.object.position).sub(r.target);I.copy(r.object.up).setLength(H.y);I.add(G.copy(r.object.up).cross(a).setLength(H.x));I.add(a.setLength(H.z));return I}}());this.rotateCamera=(function(){var G=new THREE.Vector3(),H=new THREE.Quaternion();return function(){var I=Math.acos(p.dot(i)/p.length()/i.length());if(I){G.crossVectors(p,i).normalize();I*=r.rotateSpeed;H.setFromAxisAngle(G,-I);a.applyQuaternion(H);r.object.up.applyQuaternion(H);i.applyQuaternion(H);if(r.staticMoving){p.copy(i)}else{H.setFromAxisAngle(G,I*(r.dynamicDampingFactor-1));p.applyQuaternion(H)}}}}());this.zoomCamera=function(){if(t===s.TOUCH_ZOOM){var G=h/b;h=b;a.multiplyScalar(G)}else{var G=1+(A.y-k.y)*r.zoomSpeed;if(G!==1&&G>0){a.multiplyScalar(G);if(r.staticMoving){k.copy(A)}else{k.y+=(A.y-k.y)*this.dynamicDampingFactor}}}};this.panCamera=(function(){var H=new THREE.Vector2(),G=new THREE.Vector3(),I=new THREE.Vector3();return function(){H.copy(v).sub(c);if(H.lengthSq()){H.multiplyScalar(a.length()*r.panSpeed);I.copy(a).cross(r.object.up).setLength(H.x);I.add(G.copy(r.object.up).setLength(H.y));r.object.position.add(I);r.target.add(I);if(r.staticMoving){c.copy(v)}else{c.add(H.subVectors(v,c).multiplyScalar(r.dynamicDampingFactor))}}}}());this.checkDistances=function(){if(!r.noZoom||!r.noPan){if(a.lengthSq()>r.maxDistance*r.maxDistance){r.object.position.addVectors(r.target,a.setLength(r.maxDistance))}if(a.lengthSq()<r.minDistance*r.minDistance){r.object.position.addVectors(r.target,a.setLength(r.minDistance))}}};this.update=function(){a.subVectors(r.object.position,r.target);if(!r.noRotate){r.rotateCamera()}if(!r.noZoom){r.zoomCamera()}if(!r.noPan){r.panCamera()}r.object.position.addVectors(r.target,a);r.checkDistances();r.object.lookAt(r.target);if(j.distanceToSquared(r.object.position)>0){r.dispatchEvent(D);j.copy(r.object.position)}};this.reset=function(){t=s.NONE;m=s.NONE;r.target.copy(r.target0);r.object.position.copy(r.position0);r.object.up.copy(r.up0);a.subVectors(r.object.position,r.target);r.object.lookAt(r.target);r.dispatchEvent(D);j.copy(r.object.position)};function f(G){if(r.enabled===false){return}window.removeEventListener("keydown",f);m=t;if(t!==s.NONE){return}else{if(G.keyCode===r.keys[s.ROTATE]&&!r.noRotate){t=s.ROTATE}else{if(G.keyCode===r.keys[s.ZOOM]&&!r.noZoom){t=s.ZOOM}else{if(G.keyCode===r.keys[s.PAN]&&!r.noPan){t=s.PAN}}}}}function d(G){if(r.enabled===false){return}t=m;window.addEventListener("keydown",f,false)}function o(G){if(r.enabled===false){return}if(t===s.NONE){t=G.button}if(t===s.ROTATE&&!r.noRotate){r.getMouseProjectionOnBall(G.pageX,G.pageY,p);i.copy(p)}else{if(t===s.ZOOM&&!r.noZoom){r.getMouseOnScreen(G.pageX,G.pageY,k);A.copy(k)}else{if(t===s.PAN&&!r.noPan){r.getMouseOnScreen(G.pageX,G.pageY,c);v.copy(c)}}}document.addEventListener("mousemove",B,false);document.addEventListener("mouseup",q,false);r.dispatchEvent(l)}function B(G){if(r.enabled===false){return}if(t===s.ROTATE&&!r.noRotate){r.getMouseProjectionOnBall(G.pageX,G.pageY,i)}else{if(t===s.ZOOM&&!r.noZoom){r.getMouseOnScreen(G.pageX,G.pageY,A)}else{if(t===s.PAN&&!r.noPan){r.getMouseOnScreen(G.pageX,G.pageY,v)}}}}function q(G){if(r.enabled===false){return}t=s.NONE;document.removeEventListener("mousemove",B);document.removeEventListener("mouseup",q);r.dispatchEvent(g)}function n(G){if(r.enabled===false){return}G.preventDefault();G.stopPropagation();var H=0;if(G.wheelDelta){H=G.wheelDelta/40}else{if(G.detail){H=-G.detail/3}}k.y+=H*0.01;r.dispatchEvent(l);r.dispatchEvent(g)}function u(I){if(r.enabled===false){return}switch(I.touches.length){case 1:t=s.TOUCH_ROTATE;i.copy(r.getMouseProjectionOnBall(I.touches[0].pageX,I.touches[0].pageY,p));break;case 2:t=s.TOUCH_ZOOM;var H=I.touches[0].pageX-I.touches[1].pageX;var G=I.touches[0].pageY-I.touches[1].pageY;b=h=Math.sqrt(H*H+G*G);break;case 3:t=s.TOUCH_PAN;v.copy(r.getMouseOnScreen(I.touches[0].pageX,I.touches[0].pageY,c));break;default:t=s.NONE}r.dispatchEvent(l)}function e(I){if(r.enabled===false){return}I.preventDefault();I.stopPropagation();switch(I.touches.length){case 1:r.getMouseProjectionOnBall(I.touches[0].pageX,I.touches[0].pageY,i);break;case 2:var H=I.touches[0].pageX-I.touches[1].pageX;var G=I.touches[0].pageY-I.touches[1].pageY;b=Math.sqrt(H*H+G*G);break;case 3:r.getMouseOnScreen(I.touches[0].pageX,I.touches[0].pageY,v);break;default:t=s.NONE}}function C(G){if(r.enabled===false){return}switch(G.touches.length){case 1:p.copy(r.getMouseProjectionOnBall(G.touches[0].pageX,G.touches[0].pageY,i));break;case 2:h=b=0;break;case 3:c.copy(r.getMouseOnScreen(G.touches[0].pageX,G.touches[0].pageY,v));break}t=s.NONE;r.dispatchEvent(g)}this.domElement.addEventListener("contextmenu",function(G){G.preventDefault()},false);this.domElement.addEventListener("mousedown",o,false);this.domElement.addEventListener("mousewheel",n,false);this.domElement.addEventListener("DOMMouseScroll",n,false);this.domElement.addEventListener("touchstart",u,false);this.domElement.addEventListener("touchend",C,false);this.domElement.addEventListener("touchmove",e,false);window.addEventListener("keydown",f,false);window.addEventListener("keyup",d,false);this.handleResize()};THREE.TrackballControls.prototype=Object.create(THREE.EventDispatcher.prototype);var Layout=Layout||{};Layout.ForceDirected=function(l,m){var m=m||{};this.layout=m.layout||"2d";this.attraction_multiplier=m.attraction||5;this.repulsion_multiplier=m.repulsion||0.75;this.max_iterations=m.iterations||1000;this.graph=l;this.width=m.width||200;this.height=m.height||200;this.finished=false;var g=m.positionUpdated;var c=0.000001;var h;var k;var e;var j=0;var i=0;var a;var d;var f=this;var b=0;this.init=function(){this.finished=false;i=this.width/10;a=this.graph.nodes.length;d=this.graph.edges.length;e=Math.sqrt(this.height*this.width/a);h=this.attraction_multiplier*e;k=this.repulsion_multiplier*e};this.generate=function(){if(j<this.max_iterations&&i>0.000001){var o=new Date().getTime();for(var C=0;C<a;C++){var E=l.nodes[C];E.layout=E.layout||{};if(C==0){E.layout.offset_x=0;E.layout.offset_y=0;if(this.layout==="3d"){E.layout.offset_z=0}}E.layout.force=0;E.layout.tmp_pos_x=E.layout.tmp_pos_x||E.position.x;E.layout.tmp_pos_y=E.layout.tmp_pos_y||E.position.y;if(this.layout==="3d"){E.layout.tmp_pos_z=E.layout.tmp_pos_z||E.position.z}for(var B=C+1;B<a;B++){var F=l.nodes[B];if(C!=B){F.layout=F.layout||{};F.layout.tmp_pos_x=F.layout.tmp_pos_x||F.position.x;F.layout.tmp_pos_y=F.layout.tmp_pos_y||F.position.y;if(this.layout==="3d"){F.layout.tmp_pos_z=F.layout.tmp_pos_z||F.position.z}var A=E.layout.tmp_pos_x-F.layout.tmp_pos_x;var u=E.layout.tmp_pos_y-F.layout.tmp_pos_y;if(this.layout==="3d"){var s=E.layout.tmp_pos_z-F.layout.tmp_pos_z}var G=Math.max(c,Math.sqrt((A*A)+(u*u)));if(this.layout==="3d"){var t=Math.max(c,Math.sqrt((s*s)+(u*u)))}var n=(k*k)/G;if(this.layout==="3d"){var q=(k*k)/t}E.layout.force+=n;F.layout.force+=n;E.layout.offset_x+=(A/G)*n;E.layout.offset_y+=(u/G)*n;if(C==0){F.layout.offset_x=0;F.layout.offset_y=0;if(this.layout==="3d"){F.layout.offset_z=0}}F.layout.offset_x-=(A/G)*n;F.layout.offset_y-=(u/G)*n;if(this.layout==="3d"){E.layout.offset_z+=(s/t)*q;F.layout.offset_z-=(s/t)*q}}}}for(var C=0;C<d;C++){var p=l.edges[C];var A=p.source.layout.tmp_pos_x-p.target.layout.tmp_pos_x;var u=p.source.layout.tmp_pos_y-p.target.layout.tmp_pos_y;if(this.layout==="3d"){var s=p.source.layout.tmp_pos_z-p.target.layout.tmp_pos_z}var G=Math.max(c,Math.sqrt((A*A)+(u*u)));if(this.layout==="3d"){var t=Math.max(c,Math.sqrt((s*s)+(u*u)))}var n=(G*G)/h;if(this.layout==="3d"){var q=(t*t)/h}p.source.layout.force-=n;p.target.layout.force+=n;p.source.layout.offset_x-=(A/G)*n;p.source.layout.offset_y-=(u/G)*n;if(this.layout==="3d"){p.source.layout.offset_z-=(s/t)*q}p.target.layout.offset_x+=(A/G)*n;p.target.layout.offset_y+=(u/G)*n;if(this.layout==="3d"){p.target.layout.offset_z+=(s/t)*q}}for(var C=0;C<a;C++){var r=l.nodes[C];var G=Math.max(c,Math.sqrt(r.layout.offset_x*r.layout.offset_x+r.layout.offset_y*r.layout.offset_y));if(this.layout==="3d"){var t=Math.max(c,Math.sqrt(r.layout.offset_z*r.layout.offset_z+r.layout.offset_y*r.layout.offset_y))}r.layout.tmp_pos_x+=(r.layout.offset_x/G)*Math.min(G,i);r.layout.tmp_pos_y+=(r.layout.offset_y/G)*Math.min(G,i);if(this.layout==="3d"){r.layout.tmp_pos_z+=(r.layout.offset_z/t)*Math.min(t,i)}var D=true;r.position.x-=(r.position.x-r.layout.tmp_pos_x)/10;r.position.y-=(r.position.y-r.layout.tmp_pos_y)/10;if(this.layout==="3d"){r.position.z-=(r.position.z-r.layout.tmp_pos_z)/10}if(D&&typeof g==="function"){g(r)}}i*=(1-(j/this.max_iterations));j++;var v=new Date().getTime();b+=v-o}else{if(!this.finished){console.log("Average time: "+(b/j)+" ms")}this.finished=true;return false}return true};this.stop_calculating=function(){j=this.max_iterations}};var Drawing=Drawing||{};Drawing.SimpleGraph=function(d){var d=d||{};this.layout=d.layout||"2d";this.layout_options=d.graphLayout||{};this.show_stats=d.showStats||false;this.show_info=d.showInfo||false;this.show_labels=d.showLabels||false;this.selection=d.selection||false;this.limit=d.limit||10;this.nodes_count=d.numNodes||20;this.edges_count=d.numEdges||10;var q,l,r,n,g,f,s;var t;var m={};var b=new Graph({limit:d.limit});var k=[];var i=this;o();j();e();function o(){n=new THREE.WebGLRenderer({alpha:true});n.setSize(window.innerWidth,window.innerHeight);q=new THREE.PerspectiveCamera(40,window.innerWidth/window.innerHeight,1,1000000);q.position.z=5000;l=new THREE.TrackballControls(q);l.rotateSpeed=0.5;l.zoomSpeed=5.2;l.panSpeed=1;l.noZoom=false;l.noPan=false;l.staticMoving=false;l.dynamicDampingFactor=0.3;l.keys=[65,83,68];l.addEventListener("change",u);r=new THREE.Scene();if(i.layout==="3d"){f=new THREE.CubeGeometry(25,25,25)}else{f=new THREE.CubeGeometry(50,50,0)}if(i.selection){s=new THREE.ObjectSelection({domElement:n.domElement,selected:function(B){if(B!=null){m.select="Object "+B.id}else{delete m.select}},clicked:function(B){}})}document.body.appendChild(n.domElement);if(i.show_stats){t=new Stats();t.domElement.style.position="absolute";t.domElement.style.top="0px";document.body.appendChild(t.domElement)}if(i.show_info){var v=document.createElement("div");var A=document.createAttribute("id");A.nodeValue="graph-info";v.setAttributeNode(A);document.body.appendChild(v)}}function j(){var D=new Node(0);D.data.title="This is node "+D.id;b.addNode(D);p(D);var A=[];A.push(D);var v=1;while(A.length!=0&&v<i.nodes_count){var D=A.shift();var C=a(1,i.edges_count);for(var B=1;B<=C;B++){var E=new Node(B*v);if(b.addNode(E)){E.data.title="This is node "+E.id;p(E);A.push(E);if(b.addEdge(D,E)){h(D,E)}}}v++}i.layout_options.width=i.layout_options.width||2000;i.layout_options.height=i.layout_options.height||2000;i.layout_options.iterations=i.layout_options.iterations||100000;i.layout_options.layout=i.layout_options.layout||i.layout;b.layout=new Layout.ForceDirected(b,i.layout_options);b.layout.init();m.nodes="Nodes "+b.nodes.length;m.edges="Edges "+b.edges.length}function p(B){var v=new THREE.Mesh(f,new THREE.MeshBasicMaterial({color:Math.random()*16777215,opacity:0.5}));if(i.show_labels){if(B.data.title!=undefined){var C=new THREE.Label(B.data.title)}else{var C=new THREE.Label(B.id)}B.data.label_object=C;r.add(B.data.label_object)}var A=5000;v.position.x=Math.floor(Math.random()*(A+A+1)-A);v.position.y=Math.floor(Math.random()*(A+A+1)-A);if(i.layout==="3d"){v.position.z=Math.floor(Math.random()*(A+A+1)-A)}v.id=B.id;B.data.draw_object=v;B.position=v.position;r.add(B.data.draw_object)}function h(A,B){material=new THREE.LineBasicMaterial({color:16711680,opacity:1,linewidth:0.5});var v=new THREE.Geometry();v.vertices.push(A.data.draw_object.position);v.vertices.push(B.data.draw_object.position);line=new THREE.Line(v,material,THREE.LinePieces);line.scale.x=line.scale.y=line.scale.z=1;line.originalScale=1;k.push(v);r.add(line)}function e(){requestAnimationFrame(e);l.update();u();if(i.show_info){c()}}function u(){if(!b.layout.finished){m.calc="<span style='color: red'>Calculating layout...</span>";b.layout.generate()}else{m.calc=""}for(var v=0;v<k.length;v++){k[v].verticesNeedUpdate=true}if(i.show_labels){var B=b.nodes.length;for(var v=0;v<B;v++){var A=b.nodes[v];if(A.data.label_object!=undefined){A.data.label_object.position.x=A.data.draw_object.position.x;A.data.label_object.position.y=A.data.draw_object.position.y-100;A.data.label_object.position.z=A.data.draw_object.position.z;A.data.label_object.lookAt(q.position)}else{if(A.data.title!=undefined){var C=new THREE.Label(A.data.title,A.data.draw_object)}else{var C=new THREE.Label(A.id,A.data.draw_object)}A.data.label_object=C;r.add(A.data.label_object)}}}else{var B=b.nodes.length;for(var v=0;v<B;v++){var A=b.nodes[v];if(A.data.label_object!=undefined){r.remove(A.data.label_object);A.data.label_object=undefined}}}if(i.selection){s.render(r,q)}if(i.show_stats){t.update()}n.render(r,q)}function c(B){var A="";for(var v in m){if(A!=""&&m[v]!=""){A+=" - "}A+=m[v]}document.getElementById("graph-info").innerHTML=A}function a(A,v){return Math.floor(Math.random()*(v-A+1)+A)}this.stop_calculating=function(){b.layout.stop_calculating()}};var Drawing=Drawing||{};Drawing.SphereGraph=function(d){var d=d||{};this.layout=d.layout||"2d";this.show_stats=d.showStats||false;this.show_info=d.showInfo||false;this.selection=d.selection||false;this.limit=d.limit||10;this.nodes_count=d.numNodes||20;this.edges_count=d.numEdges||10;var v,p,A,s,j,h,B;var C;var r={};var b=new Graph({limit:d.limit});var n=[];var i=4900;var q=i;var f=-i;var o=i;var e=-i;var l=this;u();m();g();function u(){s=new THREE.WebGLRenderer({alpha:true});s.setSize(window.innerWidth,window.innerHeight);v=new THREE.PerspectiveCamera(35,window.innerWidth/window.innerHeight,1,100000);v.position.z=10000;p=new THREE.TrackballControls(v);p.rotateSpeed=0.5;p.zoomSpeed=5.2;p.panSpeed=1;p.noZoom=false;p.noPan=false;p.staticMoving=false;p.dynamicDampingFactor=0.3;p.keys=[65,83,68];p.addEventListener("change",D);A=new THREE.Scene();var E=new THREE.SphereGeometry(i,110,100);material=new THREE.MeshBasicMaterial({color:0,opacity:0.8});mesh=new THREE.Mesh(E,material);A.add(mesh);h=new THREE.SphereGeometry(25,25,0);if(l.selection){B=new THREE.ObjectSelection({domElement:s.domElement,selected:function(H){if(H!=null){r.select="Object "+H.id}else{delete r.select}}})}document.body.appendChild(s.domElement);if(l.show_stats){C=new Stats();C.domElement.style.position="absolute";C.domElement.style.top="0px";document.body.appendChild(C.domElement)}if(l.show_info){var F=document.createElement("div");var G=document.createAttribute("id");G.nodeValue="graph-info";F.setAttributeNode(G);document.body.appendChild(F)}}function m(){var I=new Node(0);b.addNode(I);t(I);var F=[];F.push(I);var E=1;while(F.length!=0&&E<l.nodes_count){var I=F.shift();var H=a(1,l.edges_count);for(var G=1;G<=H;G++){var J=new Node(G*E);if(b.addNode(J)){t(J);F.push(J);if(b.addEdge(I,J)){k(I,J)}}}E++}b.layout=new Layout.ForceDirected(b,{width:2000,height:2000,iterations:1000,positionUpdated:function(O){q=Math.max(q,O.position.x);f=Math.min(f,O.position.x);o=Math.max(o,O.position.y);e=Math.min(e,O.position.y);var P,K;if(O.position.x<0){P=(-90/f)*O.position.x}else{P=(90/q)*O.position.x}if(O.position.y<0){K=(-180/e)*O.position.y}else{K=(180/o)*O.position.y}var N=5000;var M=(90-P)*Math.PI/180;var L=(180-K)*Math.PI/180;O.data.draw_object.position.x=N*Math.sin(M)*Math.cos(L);O.data.draw_object.position.y=N*Math.cos(M);O.data.draw_object.position.z=N*Math.sin(M)*Math.sin(L)}});b.layout.init();r.nodes="Nodes "+b.nodes.length;r.edges="Edges "+b.edges.length}function t(G){var E=new THREE.Mesh(h,new THREE.MeshBasicMaterial({color:Math.random()*16777215}));var F=2000;E.position.x=Math.floor(Math.random()*(F+F+1)-F);E.position.y=Math.floor(Math.random()*(F+F+1)-F);G.position.x=Math.floor(Math.random()*(F+F+1)-F);G.position.y=Math.floor(Math.random()*(F+F+1)-F);E.id=G.id;G.data.draw_object=E;G.layout={};G.layout.max_X=90;G.layout.min_X=-90;G.layout.max_Y=180;G.layout.min_Y=-180;A.add(G.data.draw_object)}function k(F,G){material=new THREE.LineBasicMaterial({color:13421772,opacity:0.5,linewidth:0.5});var E=new THREE.Geometry();E.vertices.push(F.data.draw_object.position);E.vertices.push(G.data.draw_object.position);line=new THREE.Line(E,material,THREE.LinePieces);line.scale.x=line.scale.y=line.scale.z=1;line.originalScale=1;n.push(E);A.add(line)}function g(){requestAnimationFrame(g);p.update();D();if(l.show_info){c()}}function D(){if(!b.layout.finished){r.calc="<span style='color: red'>Calculating layout...</span>";b.layout.generate()}else{r.calc=""}for(var E=0;E<n.length;E++){n[E].verticesNeedUpdate=true}for(var E=0;E<b.nodes.length;E++){b.nodes[E].data.draw_object.lookAt(v.position)}if(l.selection){B.render(A,v)}if(l.show_stats){C.update()}s.render(A,v)}function c(G){var F="";for(var E in r){if(F!=""&&r[E]!=""){F+=" - "}F+=r[E]}document.getElementById("graph-info").innerHTML=F}function a(F,E){return Math.floor(Math.random()*(E-F+1)+F)}this.stop_calculating=function(){b.layout.stop_calculating()}};
